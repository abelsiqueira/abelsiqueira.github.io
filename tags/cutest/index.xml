<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cutest on Abel Soares Siqueira</title><link>https://abelsiqueira.github.io/tags/cutest/</link><description>Recent content in cutest on Abel Soares Siqueira</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 17 Feb 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://abelsiqueira.github.io/tags/cutest/index.xml" rel="self" type="application/rss+xml"/><item><title>NLPModels.jl and CUTEst.jl: Constrained optimization</title><link>https://abelsiqueira.github.io/blog/2017-02-17-nlpmodelsjl-and-cutestjl-constrained-optimization/</link><pubDate>Fri, 17 Feb 2017 00:00:00 +0000</pubDate><guid>https://abelsiqueira.github.io/blog/2017-02-17-nlpmodelsjl-and-cutestjl-constrained-optimization/</guid><description>This is a continuation of this post. And again, you can follow the commands of this post in the asciinema.
If you followed along last post, you should know the basics of our NLPModels API, including CUTEst access.
One thing I didn&amp;rsquo;t explore, though, was constrained problems. It&amp;rsquo;d complicate too much.
However, now that we know how to handle the basics, we can move to the advanced.
Nonlinear Programming format</description></item><item><title>NLPModels.jl, CUTEst.jl and other Nonlinear Optimization Packages on Julia</title><link>https://abelsiqueira.github.io/blog/2017-02-07-nlpmodelsjl-cutestjl-and-other-nonlinear-optimization-packages-on-julia/</link><pubDate>Tue, 07 Feb 2017 00:00:00 +0000</pubDate><guid>https://abelsiqueira.github.io/blog/2017-02-07-nlpmodelsjl-cutestjl-and-other-nonlinear-optimization-packages-on-julia/</guid><description>A couple of weeks ago me and Professor Dominique Orban have finally made a release of CUTEst.jl, a wrapper for the CUTEst repository of problems for nonlinear optimization (which I&amp;rsquo;ve mentioned before). Along with this release, we&amp;rsquo;ve done a release of NLPModels.jl, the underlying package. I think it&amp;rsquo;s time I explain a little about these packages, others, and how to use them together. If you want to see the output of the commands, you can open this ASCIInema side by side.</description></item><item><title>Installing CUTEst and CUTEst.jl</title><link>https://abelsiqueira.github.io/blog/2015-10-01-installing-cutest-and-cutestjl/</link><pubDate>Thu, 01 Oct 2015 00:00:00 +0000</pubDate><guid>https://abelsiqueira.github.io/blog/2015-10-01-installing-cutest-and-cutestjl/</guid><description>This post will tell you how to install CUTEst using a different tool that makes it much easier. Also, I&amp;rsquo;ll install CUTEst.jl, the CUTEst interface for Julia.
Edit: Now, CUTEst.jl install CUTEst by itself. Check this post. Also, for Linux, I&amp;rsquo;ve created this CUTEst installer, which should be easier to use. February, 11, 2017.
Edit: Some corrections were made on February, 15, 2016.
Edit: Some corrections were made on November, 11, 2015.</description></item><item><title>CUTEst.jl</title><link>https://abelsiqueira.github.io/blog/2015-02-06-cutestjl/</link><pubDate>Fri, 06 Feb 2015 00:00:00 +0000</pubDate><guid>https://abelsiqueira.github.io/blog/2015-02-06-cutestjl/</guid><description>About an year ago, Raniere started working on a interface for CUTEst. He decided to create ugly, a repository for CUTEst, but following the Unix procedure for building packages (./configure, make, make install). Also with ugly, he wanted to enable building a shared library to be used with Julia. This approach worked, but maintaining it is troublesome, since it would require updating and testing of ugly for every update of CUTEst.</description></item><item><title>Selecting a Subgroup of CUTEst Problems According to Specific Criteria</title><link>https://abelsiqueira.github.io/blog/2015-01-16-selecting-a-subgroup-of-cutest-problems-according-to-specific-criteria/</link><pubDate>Fri, 16 Jan 2015 00:00:00 +0000</pubDate><guid>https://abelsiqueira.github.io/blog/2015-01-16-selecting-a-subgroup-of-cutest-problems-according-to-specific-criteria/</guid><description>For some time now I&amp;rsquo;ve been using CUTEst or CUTEr, and one of the common problems is selecting the problem you want to use.
Unfortunately, the classification on the site is not updated, and may contain errors, so I decided to create something, with low requirements and high reliability, to select problems according to a criteria.
This work was created before, but used the site&amp;rsquo;s classification as one of the sources of information for the selection.</description></item><item><title>CUTEst Com Matlab</title><link>https://abelsiqueira.github.io/blog/2015-01-08-cutest-com-matlab/</link><pubDate>Thu, 08 Jan 2015 00:00:00 +0000</pubDate><guid>https://abelsiqueira.github.io/blog/2015-01-08-cutest-com-matlab/</guid><description>No meu vídeo do YouTube, eu ensinei como se faz para instalar o CUTEst. Hoje estendo a instalação para instalar o MatLab também, mas para uma instalação mais detalhada, talvez o vídeo seja mais indicado.
Inicialmente instale o Matlab. Não vou entrar em detalhes, mas atente-se a duas coisas:
Algumas versões do matlab não colocam o executável num lugar &amp;ldquo;visível pelo terminal&amp;#34;. Para resolver, usando o bash, adicione o caminho dos executáveis do MATLAB ao PATH no arquivo `~/.</description></item></channel></rss>