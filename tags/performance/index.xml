<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Performance on Abel Soares Siqueira</title><link>/tags/performance/</link><description>Recent content in Performance on Abel Soares Siqueira</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 09 May 2017 00:00:00 +0000</lastBuildDate><atom:link href="/tags/performance/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction to Performance Profile</title><link>/blog/2017-05-09-introduction-to-performance-profile/</link><pubDate>Tue, 09 May 2017 00:00:00 +0000</pubDate><guid>/blog/2017-05-09-introduction-to-performance-profile/</guid><description>&lt;p>The comparison of algorithms is an active area of work.
When we start learning algorithms, or more advanced programming,
we learn of different ways of doing the same complex task.
The most usual first example is sorting, which introduces a series of
different ways to sort a single array, such as selection sort, insertion sort,
quick sort, merge sort, etc.
When comparing these algorithms, we take into account a few things:
how fast it is, how much memory it needs, what are the best/worst/average-case
complexities, and so on.&lt;/p></description></item><item><title>perprof-py: A Performance Profile Package for Python</title><link>/blog/2014-11-16-perprof-py-a-performance-profile-package-for-python/</link><pubDate>Sun, 16 Nov 2014 00:00:00 +0000</pubDate><guid>/blog/2014-11-16-perprof-py-a-performance-profile-package-for-python/</guid><description>&lt;p>One of the things I worked with was a Performance Profile tool, in the sense
of Dolan and MorÃ©. This tool,
&lt;a href="http://ufpr-opt.github.io/perprof-py">perprof-py&lt;/a>, written in Python,
reads input in the form of a table of problem with time and exitflag, and
outputs a image/pdf with the performance profile.
This tool is very important for the nonlinear optimization community, since it
is one of the main comparison tools for the algorithms.&lt;/p>
&lt;p>The package is open source, available for changes, improvements and suggestions.
Many options have been implemented to costumize the graphic, or to improve the
input of data. The source is available at
&lt;a href="http://github.com/ufpr-opt/perprof-py">github&lt;/a>.&lt;/p></description></item></channel></rss>