<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Fortran on Abel Soares Siqueira</title><link>/tags/fortran/</link><description>Recent content in Fortran on Abel Soares Siqueira</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 22 Jan 2015 00:00:00 +0000</lastBuildDate><atom:link href="/tags/fortran/index.xml" rel="self" type="application/rss+xml"/><item><title>A Study in Julia</title><link>/blog/2015-01-22-a-study-in-julia/</link><pubDate>Thu, 22 Jan 2015 00:00:00 +0000</pubDate><guid>/blog/2015-01-22-a-study-in-julia/</guid><description>&lt;p>Today I begin a study in &lt;a href="http://julialang.org/">Julia&lt;/a>.
This fantastic tool has syntax similar to that of Octave/Matlab,
but is much faster. Furthermore, the interface with functions
made in C and Fortran is much easier to accomplish, and since
most things in computational mathematics are on these languages,
this feature is wonderful.&lt;/p>
&lt;p>My intented work is&lt;/p>
&lt;ul>
&lt;li>make a simple julia and C interface, with auto-compiling and test on GitHub and Travis CI;&lt;/li>
&lt;li>develop a nonlinear optimization tool completely in Julia, then improve the slow bits by using C and/or Fortran;&lt;/li>
&lt;li>implement/improve the CUTEst interface &lt;a href="https://github.com/abelsiqueira/ugly">[1]&lt;/a>, &lt;a href="https://github.com/abelsiqueira/CUTEst.jl">[2]&lt;/a>, possibly creating a SIF converter.&lt;/li>
&lt;li>if things work out, submit to &lt;a href="http://www.juliaopt.org/">JuliaOpt&lt;/a>.&lt;/li>
&lt;/ul>
&lt;p>My work starts with the &lt;a href="https://github.com/abelsiqueira/julia-c-sample.git">Julia-C
Samples&lt;/a>.
If you need me, I might be on &lt;code>#julia&lt;/code> on IRC/freenode.&lt;/p></description></item><item><title>The End of Fortran</title><link>/blog/2014-11-22-the-end-of-fortran/</link><pubDate>Sat, 22 Nov 2014 00:00:00 +0000</pubDate><guid>/blog/2014-11-22-the-end-of-fortran/</guid><description>&lt;p>One of my main interest is the end of Fortran &lt;strong>as the only programming language
used by mathematicias&lt;/strong>. If you&amp;rsquo;re not in the area of mathematical programming,
you probably find it strange for me to be talking about Fortran, so I explain.
Fortran is considered the fastest programming language in mathematics, and most
things made are in this language. Other often used languages such as
MatLab/Octave and Mathematica are high-level, which means they are slower and
are not considered for serious applications.&lt;/p></description></item></channel></rss>