<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>fractal on Abel Soares Siqueira</title><link>https://abelsiqueira.com/tags/fractal/</link><description>Recent content in fractal on Abel Soares Siqueira</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 12 Dec 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://abelsiqueira.com/tags/fractal/index.xml" rel="self" type="application/rss+xml"/><item><title>Koch snowflakes for the holidays</title><link>https://abelsiqueira.com/blog/2018-12-12-koch-snowflakes-for-the-holidays/</link><pubDate>Wed, 12 Dec 2018 00:00:00 +0000</pubDate><guid>https://abelsiqueira.com/blog/2018-12-12-koch-snowflakes-for-the-holidays/</guid><description>Code for these images.
I hope you&amp;rsquo;re familiar with the Koch curve fractal or snowflake. It essentially consists taking a line segment, splitting it in three, and substituting the middle part by two segments that form an equilateral triangle without the base. From one segment you obtain four. For each new segment, repeat the process.
Images:
The most important aspect of the koch line is that it looks awesome. Furthermore, you can do it for any image that is a collection of segments.</description></item><item><title>Julia Fractal on Julia</title><link>https://abelsiqueira.com/blog/2017-01-15-julia-fractal-on-julia/</link><pubDate>Sun, 15 Jan 2017 00:00:00 +0000</pubDate><guid>https://abelsiqueira.com/blog/2017-01-15-julia-fractal-on-julia/</guid><description>I wanted a background that would update automatically in some interesting way, instead of just random images. After some thought, I decided to use some Julia fractals.
I made a code to create the Julia fractals in the Julia language, and then some code to run it for a random point.
The code is here, including some explaining on how to use and install it.
Here are some examples:</description></item></channel></rss>