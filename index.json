[{"content":"\u003cp\u003e2023 was a very interest year for me, regarding the use and promotion of the Julia Programming Language.\nHere are the three main reasons why.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eFirst, I gave no less than 4 talks (not counting anything in-company).\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eOn 19/January at the \u003ca href=\"https://www.meetup.com/nl-NL/julialang-eindhoven/\"\u003e\u003cstrong\u003eJuliaLang Eindhoven Meetup\u003c/strong\u003e\u003c/a\u003e.\nI talked about the difficulties of maintaining a large ecosystems of packages.\nIt was the first time I went to Eindhoven, and I met some great people there.\nThese meetups are still happening around every 2 months.\u003c/p\u003e\n\u003cp\u003eOn 6/October at the \u003ca href=\"https://julia-users-paris.github.io/workshop/en/\"\u003e\u003cstrong\u003eJulia and Optimization Days Paris, 2023\u003c/strong\u003e\u003c/a\u003e.\nI presented current developments in the \u003ca href=\"https://jso.dev\"\u003eJulia Smooth Optimizers\u003c/a\u003e organization.\nI have co-created this organization as part of my research, and although my involvement has decreased since I left my professor position, I still keep tabs on a few packages.\nSo I was lucky to be a spokesperson for our organization at this event.\nIt was great to meet some old friends and acquaintances from the optimization field, and it was also my first time in Paris.\u003c/p\u003e\n\u003cp\u003eOn 10/November at the \u003ca href=\"http://wega.is.escuelaing.edu.co\"\u003e\u003cstrong\u003eColombia Data Summit 2023 (Remotely)\u003c/strong\u003e\u003c/a\u003e.\nI was invited to talk about Julia in some way related to AI.\nNaturally, I used the chance to compare and contrast optimization and data science, and to talk about Julia in general and for optimization.\nLuckily, this talk was recorded, so you can watch it \u003ca href=\"https://www.youtube.com/watch?v=FW7Zdky_vYc\"\u003ehere\u003c/a\u003e and let me know what you think.\nI used bits from older lectures in optimization, since I was not sure how much my audience was familiar with the subject, but I had a lot of fun updating the examples.\u003c/p\u003e\n\u003cp\u003eOn 1/December at the \u003ca href=\"https://juliacon.org/local/eindhoven2023/\"\u003e\u003cstrong\u003eJuliaCon Local Eindhoven 2023\u003c/strong\u003e\u003c/a\u003e.\nI once again talked about Julia Smooth Optimizers, but this time I focused on users, since the audience were from more diverse background.\nI also challenged myself to add a meme (or at least some image) in every slide.\nI know that most were not very funny, but I also had to prepare the talk.\nMaybe next time I will do something completely new, like using only Seinfeld screenshots.\nThis talk was also recorded, so you can check it out \u003ca href=\"https://youtu.be/i1eeD3uHbZ4?si=k7S_auZQHO2mOLMH\"\u003ehere\u003c/a\u003e.\nThis was the first JuliaCon Local, i.e., a local variant of JuliaCon.\nSo far it is the only JuliaCon Local, although I expect that will change in 2024.\nI don\u0026rsquo;t know about official numbers, but I think there were around 200 attendees.\nIt was great to have a taste of JuliaCon 2024, which will also be in Eindhoven, at the PSV stadium, no less.\u003c/p\u003e\n\u003cp\u003eI am not new to giving talks, but to have 4 in an year outside of academia was a bit unexpected.\nI hope to present at some events in 2024 as well, however probably not as many - ask me again next year.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eSecond, Julia usage and interest inside the eScience Center increased a lot.\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eSince I joined the Netherlands eScience Center in 2021 as a Research Software Engineer, my involvement with Julia programming had been decreasing.\nBefore, I was a professor in Brazil and over 95% of my research and teaching was using Julia, so I used Julia daily.\nI joined the eScience Center as a generalist, so I worked in Python, Javascript/Typescript, C++, and even Kubernetes.\nHowever, I have been slowly trying to engage more people into Julia:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI wrote a few blog posts.\u003c/li\u003e\n\u003cli\u003eI co-organized a Julia for HPC Webinar.\u003c/li\u003e\n\u003cli\u003eI talked internally about advantages of using Julia.\u003c/li\u003e\n\u003cli\u003eI organized internal crash courses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIt finally paid off.\nI was asked to consult briefly to compare JuMP/Julia to other modeling languages, and by its own merits, JuMP was selected as the modeling language for an energy model that the eScience Center is developing together with \u003ca href=\"https://www.tno.nl/en/\"\u003eTNO\u003c/a\u003e.\nNaturally, it is great to work almost daily with Julia again, but more than that, I have a chance to work closely with people that know a lot about energy, optimization, project management, and working as a team.\u003c/p\u003e\n\u003cp\u003eFurthermore, there is now a good number of colleagues interested in, or already using, Julia, and we might have 3 or 4 Julia projects this year.\nI expect to have periodic meetings in 2024, but let\u0026rsquo;s see what happens.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eThird, I started doing general YouTube Julia videos in English.\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eWhen the Covid epidemic caused Brazil to shutdown, I moved my classes online - as most professors.\nI chose to record a lot of my material and make it available on YouTube, which meant that a had dozens of Julia YouTube videos by the end of 2020.\nAlmost everything was in Portuguese, though, so my international reach was limited to some Julia Smooth Optimizers tutorials.\u003c/p\u003e\n\u003cp\u003eIn 2023, I decided to make more general Julia videos in English.\nI started two series:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/playlist?list=PLOOY0eChA1uwYXUGnF0FZBuiYQjgQffPu\"\u003eJulia Journey: Juggling Jargons Joyfully\u003c/a\u003e, which serves as an introduction to Julia.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/playlist?list=PLOOY0eChA1uygZQnE3cyP1YsrrIIyIpm5\"\u003eMathematical Modeling\u003c/a\u003e, talking about optimization problems and solving them with JuMP.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI also created some \u0026ldquo;random\u0026rdquo; videos:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://youtu.be/8huiBpkMFwE\"\u003eBest Frenemies: Julia and Python\u003c/a\u003e, talking about using Julia and Python together;\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://youtu.be/siCWLWHSrvo\"\u003eJulia Language Cannot Even Handle Simple Math\u003c/a\u003e, which is a clickbait video focusing on one of the most asked questions when dealing with floating-point numbers;\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://youtu.be/L4QgBuiMmUk\"\u003eSolving an RPG puzzle with Julia, modular arithmetic, and linear algebra\u003c/a\u003e, a very interesting nerdy application of Julia to solve a simple puzzle in a very complicated way.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere will be more videos, and you are free to request specific topics - doesn\u0026rsquo;t mean I will make them, but it is good to gauge the interest.\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003eThanks for reading, and keep tuned for what happens in 2024.\u003c/p\u003e\n","description":null,"image":"/blog/2024-01-04.gif","permalink":"/blog/2024-01-04-personal-julia-2023-retrospective/","title":"Personal Julia 2023 retrospective"},{"content":"\u003cp\u003eThis is a longer Curriculum, including things that are only relevant in an Academic context.\u003c/p\u003e\n\u003ch2 id=\"professional-career\"\u003eProfessional Career\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eNetherlands eScience Center | Sep/2021 - Current\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eSenior Research Software Engineer\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eHelped maintain, developed and consulted on research software, focusing on best practices, such as licensing, testing, automated documentation, testing, CI, and other workflows.\u003c/li\u003e\n\u003cli\u003eWorked on and maintained cffinit, a web application for creating CITATION.cff files. I learned Typescript, Vue and Quasar for this project.\u003c/li\u003e\n\u003cli\u003eCo-organized and talked at a Julia for High-Performance Computing webinar with external speakers and over 50 attendants.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eFederal University of Paran√° | Nov/2014 - Aug/2021\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eProfessor Adjunto (equivalent to Assistant Professor)\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTaught around 5 courses a year.\u003c/li\u003e\n\u003cli\u003eAdvised over 15 students.\u003c/li\u003e\n\u003cli\u003e10 talks, 5 at international conferences.\u003c/li\u003e\n\u003cli\u003eIndustrial Mathematics curriculum planning committee.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eData Science specialization program\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTaught optimization and machine learning.\u003c/li\u003e\n\u003cli\u003eAdvised students in various topics.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eResearcher in optimization\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCo-creator of several packages related to nonlinear optimization and numerical linear algebra inside the JuliaSmoothOptimizers organization.\u003c/li\u003e\n\u003cli\u003eAdvised students in nonlinear optimization, operations research, and machine learning.\u003c/li\u003e\n\u003cli\u003eCo-creator of the CiDAMO study and research group.\u003c/li\u003e\n\u003cli\u003e3 published papers.\u003c/li\u003e\n\u003cli\u003eReferee in various journals.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"education-and-courses\"\u003eEducation and courses\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eUdemy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eMachine Learning A-Z, 2019\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://ude.my/UC-BZ056X6A\"\u003ehttps://ude.my/UC-BZ056X6A\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eState University of Campinas\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003ePhD in Applied Mathematics, 2009-2013\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTitle: Dynamic Control of Infeasibility for Nonlinear Programming\u003c/li\u003e\n\u003cli\u003eAdvisor: Francisco de Assis Magalh√£es Gomes Neto\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eBachelor\u0026rsquo;s degree in Computational and Applied Mathematics, 2005-2008\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eScientific initiation project on quadratic optimization. Wrote a C++ code.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"professional-skills\"\u003eProfessional Skills\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eTechnical\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eProgramming since 2005, having used multiple programming languages, including C, C++, Python, MatLab, Fortran, Javascript, Typescript, and Bash.\u003c/li\u003e\n\u003cli\u003e8 years experience with the Julia language for research software.\u003c/li\u003e\n\u003cli\u003eMy PhD and scientific initiation projects were in C++, accruing 5 years of experience.\u003c/li\u003e\n\u003cli\u003eI have supervised students on machine learning topics, using Python\u0026rsquo;s scikit-learn stack.\u003c/li\u003e\n\u003cli\u003eI have consulted and supervised on optimization modeling topics, include Julia\u0026rsquo;s JuMP modeling language.\u003c/li\u003e\n\u003cli\u003eI manage several GitHub repositories, setting continuous integration for automated testing, building documentation, code coverage, and various other workflows. I have used GitHub Actions, Travis, Codecov, and Coveralls.\u003c/li\u003e\n\u003cli\u003eI have experience building a Single Page Application in Typescript, Vue 3 and Quasar.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eSocial and community\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI am a native Portuguese speaker and a fluent English speaker.\u003c/li\u003e\n\u003cli\u003eI have basic knowledge of Spanish and French, and I know a few words of Dutch and Russian.\u003c/li\u003e\n\u003cli\u003eI have solid written and verbal skills.\u003c/li\u003e\n\u003cli\u003eI am organized, proactive, and I am a team worker.\u003c/li\u003e\n\u003cli\u003eI can produce documentation in various formats, such as written tutorials and APIA reference documents, as well as videos and live coding on specific topics.\u003c/li\u003e\n\u003cli\u003eI managed a team translating the Think Julia book.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eOpen science and research software\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI taught Shell, Git, LaTeX, and Julia in many workshops.\u003c/li\u003e\n\u003cli\u003eI helped organize 2 workshops related to Software Carpentry, 1 related to Hacktoberfest, and other local tutorial sessions.\u003c/li\u003e\n\u003cli\u003eI taught at the 2017 CODATA-RDA School of Research Data Science.\u003c/li\u003e\n\u003cli\u003eI have reviewed for the Journal of Open Source Software and the Journal of Open Research Software.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"projects\"\u003eProjects\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003ecffinit - Citation File Format initializer\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ehttps://citation-file-format.github.io/cff-initializer-javascript/\u003c/code\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWeb application to generate valid CITATION.cff files.\u003c/li\u003e\n\u003cli\u003eI joined the project during the implementation of v2.\u003c/li\u003e\n\u003cli\u003eUses Typescript, Vue 3, and Quasar, which I learned on the job.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eCiDAMO\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ehttps://cidamo.com.br\u003c/code\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eStudy and research group on data science, machine learning, and optimization.\u003c/li\u003e\n\u003cli\u003eCo-creator of the group and supervisor of several students.\u003c/li\u003e\n\u003cli\u003eOrganized a week-long data science event with over 300 participants and 8 companies, named CiDWeek.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eJuliaSmoothOptimizers\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ehttps://JuliaSmoothOptimizers.github.io\u003c/code\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eGitHub organization with over 60 packages related to Linear Algebra and Nonlinear Optimization in Julia.\u003c/li\u003e\n\u003cli\u003eCo-creator of around 20 of those packages. My contributions span over 700 commits and tens of thousands of lines of code.\u003c/li\u003e\n\u003cli\u003eMy involvement included software programming, reviewing, planning, theoretical research, advising, and publicizing the work through papers, talks, posts, and videos.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eJill\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ehttps://github.com/abelsiqueira/jill\u003c/code\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eBash script to install various versions of Julia on Linux and MacOS\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eIntro a Julia BR (Think Julia book translation)\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ehttps://juliaintro.github.io/JuliaIntroBR.jl\u003c/code\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eOpen source translation of Think Julia\u003c/li\u003e\n\u003cli\u003eI managed the translation team and reviewed each chapter\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eperprof-py\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ehttps://github.com/abelsiqueira/perprof-py\u003c/code\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ePython package for producing performance profiles.\u003c/li\u003e\n\u003cli\u003eOne paper was published with occasional citations.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eDCICPP\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ehttps://github.com/abelsiqueira/dcicpp\u003c/code\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eC++ implementation of a Trust Cylinder method for equality-constrained optimization\u003c/li\u003e\n\u003cli\u003eMain part of the code produced in my doctorate\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"events\"\u003eEvents\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eJuliaCon Local Eindhoven 2023\u003c/strong\u003e.\nDecember 1st, 2023, Eindhoven/Netherlands.\nTitle: Nonlinear Optimization with the Julia Smooth Optimizers packages.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eColombia Data Summit 2023.\u003c/strong\u003e\nNovember 10th, 2023, Colombia/Online.\nTitle: Optimization vs AI and the Julia Programming Language.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eJulia Optimization Days Paris 2023.\u003c/strong\u003e\nOctober 6th, 2023, Paris.\nTitle: Julia Smooth Optimizers: JSO-compliant solvers, news, and current challenges.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eJuliaLang Eindhoven Meetup.\u003c/strong\u003e\nJanuary 19th, 2023, Eindhoven.\nTitle: Maintaining large ecosystems of packages. Tips and challenges.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eJulia for High-Performance Computing Webinar\u003c/strong\u003e\nJune 23rd, 2022, Online.\nOrganization.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eII CiDWeek - Semana de Ci√™ncia de dados\u003c/strong\u003e.\n24 a 30 de Abril de 2021, Online, Brazil.\nOrganiza√ß√£o\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eI CiDWeek - Semana de Ci√™ncia de dados\u003c/strong\u003e.\n3 a 7 de Fevereiro de 2020, Curitiba/PR, Brazil.\nOrganiza√ß√£o\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eCongresso Internacional de Biomassa - 4¬∞ Expo Biomassa\u003c/strong\u003e\n26 de Junho de 2019, Curitiba/PR, Brazil.\nT√≠tulo: Otimiza√ß√£o na Linguagem Julia\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTalk at PPGM - UFPR\u003c/strong\u003e\nMay 31st, 2019, Curitiba/PR, Brazil.\nTitle: JuliaSmoothOptimizers\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eInvited talk at Universit√© de Sherbrooke\u003c/strong\u003e\nFebruary 15th, 2019, Sherbrooke/QC, Canada.\nTitle: Developing optimization software with JuliaSmoothOptimizers\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eModeling and optimization tools in Julia - An introduction to JuMP and JSO.\u003c/strong\u003e\nFebruary 7th, 2019, Montreal, Canada.\nTitle: JuliaSmoothOptimizers\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eXII Brazilian Workshop on Continuous Optimization.\u003c/strong\u003e\nJuly 23rd, 2018, Foz do Igua√ßu/PR, Brasil.\nTitle: A Regularized Interior-Point Method for Constrained Nonlinear Least Squares\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eSecond Annual JuMP-dev Workshop\u003c/strong\u003e\nJune 28th, 2018, Universit√© de Bordeaux, Bordeaux, France.\nTitle: Developing new optimization methods with packages from the JuliaSmoothOptimzers organization\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eCODATA-RDA School of Research Data Science.\u003c/strong\u003e\nDecember 4th, 2017, ICPT-SAIFR/NCC-UNESP, S√£o Paulo/SP, Brasil.\nTutorial: The Unix Shell\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eSeminars on Convex Analysis and Optimization.\u003c/strong\u003e\nDecember 1st, 2017, UFSC, Florian√≥polis/SC, Brazil.\nTitle: Otimiza√ß√£o N√£o-Linear na Linguagem Julia\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e15th EUROPT Workshop on Advances in Continuous Optimization\u003c/strong\u003e.\nJuly 12th, 2017, Montr√©al, Canada.\nTitle: Parameter Optimization in the Nonlinear Stepsize Control Framework for Trust-Region Methods\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eIX Simp√≥sio de An√°lise Num√©rica e Otimiza√ß√£o\u003c/strong\u003e.\nFebruary 20th to 22nd, 2017, UFPR, Curitiba, Brazil.\nTutorial: Introdu√ß√£o √† linguagem Julia\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eI Simp√≥sio de M√©todos Num√©ricos em Engenharia\u003c/strong\u003e.\nNovember 30th to December 1st, 2016, UFPR, Curitiba, Brazil.\nTutorial: Introdu√ß√£o √† linguagem Julia\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eXI Brazilian Workshop on Continuous Optimization.\u003c/strong\u003e\nMay 23rd, 2016, UFAM, Manaus, Brazil.\nTitle: Numerical Experience with a Class of Trust-Region Algorithms for Unconstrained Smooth Optimization\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e2016 Optimization Days.\u003c/strong\u003e\nMay 4th, 2016, HEC Montr√©al, Montreal, Canada.\nTitle: A Workflow for Designing Optimization Methods in the Julia Language\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eVIII Simp√≥sio de An√°lise Num√©rica e Otimiza√ß√£o\u003c/strong\u003e.\n2016, UFPR, Curitiba, PR, Brazil.\nTutorial: Otimiza√ß√£o N√£o-Linear na Linguagem Julia\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eOficina de Ferramentas Computacionais\u003c/strong\u003e.\nMaio de 2015, UFPR, Curitiba, PR, Brazil.\nMember of the organization\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eVII Simp√≥sio de An√°lise Num√©rica e Otimiza√ß√£o\u003c/strong\u003e.\n2015, UFPR, Curitiba, PR, Brazil.\nTitle: Ferramentas computacionais para pesquisadores\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eX Brazilian Workshop on Continuous Optimization.\u003c/strong\u003e\n2014, Florian√≥polis, SC, Brazil.\nTitle: Dynamic Control of Infeasibility for Nonlinear Programming\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e26th European Conference on Operational Research.\u003c/strong\u003e\n2013, Rome, Italy.\nTitle: Dynamic Control of Infeasibility for Nonlinear Programming\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e11th EUROPT Workshop on Advances in Continuous Optimization\u003c/strong\u003e.\n2013, Florence, Italy.\nParticipation\u003c/p\u003e\n\u003ch2 id=\"publications\"\u003ePublications\u003c/h2\u003e\n\u003cp\u003eDiego A. Tejada-Arango, Germ√°n Morales-Espa√±a, Lauren Clisby, Ni Wang, Abel S. Siqueira, Ali Subayu, Laurent Soucasse, and Zhi Gao, (2023).\n\u003cstrong\u003eTulipa Energy Model: Mathematical Formulation.\u003c/strong\u003e\narXiv, \u003ca href=\"https://arxiv.org/abs/2309.07711\"\u003e10.48550/arXiv.2309.07711\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eTangi Migot, Dominique Orban, and Abel Soares Siqueira, (2022).\n\u003cstrong\u003ePDENLPModels.jl: An NLPModel API for Optimization Problems with PDE-Constraints.\u003c/strong\u003e\nJournal of Open Source Software, 7(80). 4736. \u003ca href=\"https://doi.org/10.21105/joss.04736\"\u003e10.21105/joss.04736\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eTangi Migot, Dominique Orban, and Abel Soares Siqueira, (2022).\n\u003cstrong\u003eDCISolver.jl: A Julia Solver for Nonlinear Optimization using Dynamic Control of Infeasibility.\u003c/strong\u003e\nJournal of Open Source Software, 7(70). 3991. \u003ca href=\"https://doi.org/10.21105/joss.03991\"\u003e10.21105/joss.03991\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eAmanda Pereira Santos, Henrique Soares Koehler, Carlos Roberto Sanquetta, Sylvio P√©llico Netto, Abel Soares Siqueira, and Alexandre Behling, (2022).\n\u003cstrong\u003eCalibra√ß√£o de Equa√ß√µes de Volume em N√≠vel de Povoamento e Parcela para Ac√°cia Negra.\u003c/strong\u003e\nBIOFIX Scientific Journal, 7(2). 104. \u003ca href=\"https://doi.org/10.5380/biofix.v7i2.83574\"\u003e10.5380/biofix.v7i2.83574\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eDominique Orban, and Abel Soares Siqueira, (2020).\n\u003cstrong\u003eA regularization method for constrained nonlinear least squares.\u003c/strong\u003e\nComputational Optimization and Applications, \u003ca href=\"https://doi.org/10.1007/s10589-020-00201-2\"\u003e10.1007/s10589-020-00201-2\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eHugo Jos√© Lara, Abel Soares Siqueira, and Jinyun Yuan, (2018).\n\u003cstrong\u003eA Reduced Semidefinite Programming Formulation for HA Assignment Problems in Sport Scheduling.\u003c/strong\u003e\nTEMA (S√£o Carlos), 19(3). 471-488. \u003ca href=\"https://doi.org/10.5540/tema.2018.019.03.471\"\u003e10.5540/tema.2018.019.03.471\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eHugo Lara Urdaneta, Jinyun Yuan, and Abel Soares Siqueira, (2018).\n\u003cstrong\u003eAlternative Integer linear and Quadratic Programming Formulations for HA-Assignment Problems.\u003c/strong\u003e\nIn XXXVII CNMAC, S. J. dos Campos/SP, Brasil. \u003ca href=\"https://doi.org/10.5540/03.2018.006.01.0311\"\u003e10.5540/03.2018.006.01.0311\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eAbel S. Siqueira, and Francisco de Assis Magalh√£es Gomes, (2016).\n\u003cstrong\u003eDynamic Control of Infeasibility for Nonlinear Programming.\u003c/strong\u003e\nTechnical Report rp11-16 Campinas/SP, Brazil, Universidade Estadual de Campinas. \u003ca href=\"http://www.ime.unicamp.br/sites/default/files/rp11-16.pdf\"\u003elink\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eAbel S. Siqueira, Raniere G. C. da Silva, and Luiz-Rafael Santos, (2016).\n\u003cstrong\u003ePerprof-py: A Python Package for Performance Profile of Mathematical Optimization Software.\u003c/strong\u003e\nJournal of Open Research Software, 4(1). e12. \u003ca href=\"https://doi.org/10.5334/jors.81\"\u003e10.5334/jors.81\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eW. L. da Silva, R. R. V. Goncalves, A. S. Siqueira, J. Zullo, and F. A. M. Gomes Neto, (2011).\n\u003cstrong\u003eFeature extraction for NDVI AVHRR/NOAA time series classification.\u003c/strong\u003e\nIn 2011 6th International Workshop on the Analysis of Multi-temporal Remote Sensing Images (Multi-Temp), Trento. \u003ca href=\"https://doi.org/10.1109/multi-temp.2011.6005091\"\u003e10.1109/multi-temp.2011.6005091\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"supervision\"\u003eSupervision\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eRog√©rio Otavio Mainardes da Silva, March/2021\u003c/strong\u003e.\nM√©todo do Gradiente Estoc√°stico para otimiza√ß√£o de fun√ß√µes separ√°veis em Aprendizagem de M√°quina.\nProgram Conclusion Project.\nUniversidade Federal do Paran√°.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eEgmara Antunes dos Santos, August/2020\u003c/strong\u003e.\nAspectos Te√≥ricos e Computacionais de um M√©todo de Lagrangiano Aumentado com Subproblemas de Caixa Resolvidos por Regi√£o de Confian√ßa.\nMaster\u0026rsquo;s.\nUniversidade Federal do Paran√°.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eThaiza Rafaele dos Santos Rievrs, Dec/2018\u003c/strong\u003e.\nProblema de Estoque e Roteiriza√ß√£o com Transbordo.\nProgram Conclusion Project.\nUniversidade Federal do Paran√°.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eFrancine Luise Milian Ribas, Jul/2017\u003c/strong\u003e.\nM√©todos de Regi√£o de Confian√ßa para Minimiza√ß√£o Irrestrita.\nProgram Conclusion Project.\nUniversidade Federal do Paran√°.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eOksana Heringer da Silva, Jul/2017\u003c/strong\u003e.\nM√©todos de Penalidade e o Lagrangiano Aumentado.\nProgram Conclusion Project.\nUniversidade Federal do Paran√°.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eAdrean Cebola, Jun/2017\u003c/strong\u003e.\nResolu√ß√£o de Programas Lineares com M√©todo de Pontos Interiores.\nProgram Conclusion Project.\nUniversidade Federal do Paran√°.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eCarlos Henrique Venturi Ronchi, May/2017\u003c/strong\u003e.\nEstudo Matem√°tico de Reconhecimento de Caracteres.\nProgram Conclusion Project.\nUniversidade Federal do Paran√°.\u003c/p\u003e\n","description":null,"image":"/images/banners/resume.jpg","permalink":"/cv/","title":"Curriculum"},{"content":"\u003cp\u003eI help manage over 50 packages in the \u003ca href=\"https://jso.dev\"\u003eJulia Smooth Optimizers\u003c/a\u003e organization, and sometimes we have to make a small update to all of these packages.\nFor instance, one of the workflows was updated, or something new is introduced, or the LTS version of Julia changes.\u003c/p\u003e\n\u003cp\u003eIn these situations, our usual approach is to create some script that downloads all of these packages, then apply the change, then creates a pull request with the modifications.\u003c/p\u003e\n\u003cp\u003eMy new idea is the package/template \u003ca href=\"https://github.com/abelsiqueira/COPIERTemplate.jl\"\u003eCOPIERTemplate.jl\u003c/a\u003e.\nThe repo provides a template for the \u003ca href=\"https://copier.readthedocs.io/en/stable/\"\u003ecopier\u003c/a\u003e app with many of the things that I want to use in my packages.\nI can apply the template to existing packages and then if there updates to the template, I can just run the update command and get a patch with the new changes.\nI can select things to be ignored, and since it uses git, it will sometimes notice that it shouldn\u0026rsquo;t try to fix some changes.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/banners/copiertemplate.jpg\" alt=\"COPIERTemplate visualization\"\u003e\u003c/p\u003e\n\u003cp\u003eOne of the things in this template is a workflow that automatically runs the copier update command to check if there are updates and then creates a pull request with the changes.\u003c/p\u003e\n\u003cp\u003eTo test the template, the repo itself is a Julia package created with the template.\nThis package just adds the \u003ccode\u003ecopier\u003c/code\u003e app using \u003ccode\u003ePythonCall.jl\u003c/code\u003e and calls it for the user - not my preferred usage, actually, but people can use it to avoid installing Python packages.\u003c/p\u003e\n\u003ch2 id=\"comparison-to-pkgtemplatesjl\"\u003eComparison to PkgTemplates.jl\u003c/h2\u003e\n\u003cp\u003eOne big package related to templates is \u003ccode\u003ePkgTemplates.jl\u003c/code\u003e, which I have previously suggested in my videos.\nThere are a few similarities and differences, which you might find useful to decide which package to use:\u003c/p\u003e\n\u003ch3 id=\"both-packages-provide-a-quick-interface-to-generate-a-new-julia-package\"\u003eBoth packages provide a quick interface to generate a new Julia package\u003c/h3\u003e\n\u003cp\u003eWhen you use either package, the end result will be a folder with the necessary structure for a Julia package that can be quickly registered.\u003c/p\u003e\n\u003ch3 id=\"pkgtemplates-has-more-options-as-of-october2023\"\u003ePkgTemplates has more options (as of October/2023)\u003c/h3\u003e\n\u003cp\u003ePkgTemplates has many options, while COPIERTemplate provides the bare minimum for me to use with JSO packages.\nThis might change in the future, depending on the pull requests of future collaborators.\u003c/p\u003e\n\u003ch3 id=\"the-logic-is-handled-in-different-places\"\u003eThe logic is handled in different places\u003c/h3\u003e\n\u003cp\u003eThe logic, in this context, imply options (i.e., conditionals).\u003c/p\u003e\n\u003cp\u003eCOPIERTemplate is a \u003ccode\u003ecopier\u003c/code\u003e template, i.e., it follows the specification of another software called \u003ccode\u003ecopier\u003c/code\u003e that uses Jinja for the the \u0026ldquo;logic\u0026rdquo;.\nIn other words, COPIERTemplate does \u003cem\u003enothing\u003c/em\u003e but call \u003ccode\u003ecopier\u003c/code\u003e and provide a folder in Jinja format.\u003c/p\u003e\n\u003cp\u003ePkgTemplates is written in Julia, and the logic is implemented in Julia.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eWARNING\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eTo be honest, I don\u0026rsquo;t really know how PkgTemplates.jl work, because I only saw a part of the code.\nFeel free to send me any corrections of what was portrayed here.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThe underlying substitution in PkgTemplates.jl seems to handled by another package called Mustache.jl that implements a logicless templating system called mustache.\nIn other words, PkgTemplates handles most of the hard part.\u003c/p\u003e\n\u003cp\u003eThe advantages - for me - are that I don\u0026rsquo;t have to maintain a templating package, just a template.\u003c/p\u003e\n\u003ch3 id=\"copiertemplate-can-be-applied-to-existing-packages\"\u003eCOPIERTemplate can be applied to existing packages\u003c/h3\u003e\n\u003cp\u003eOne of the reasons for me to get into this template was that I need to apply it to existing packages.\nTo be honest, I wasn\u0026rsquo;t really expecting that this would be a problem, but apparently it is.\u003c/p\u003e\n\u003cp\u003eThe reason that COPIERTemplate can be applied to existing packages is because \u003ccode\u003ecopier\u003c/code\u003e handles it, not COPIERTemplate itself, as I mentioned above.\u003c/p\u003e\n\u003ch3 id=\"if-copiertemplate-gets-an-update-the-packages-using-it-can-get-the-update\"\u003eIf COPIERTemplate gets an update, the packages using it can get the update\u003c/h3\u003e\n\u003cp\u003eAgain, this is handled by \u003ccode\u003ecopier\u003c/code\u003e.\nWhen I make a change to one of the \u003ccode\u003epre-commit\u003c/code\u003e hooks and release a new version, it should be possible to update the package using COPIERTemplate with a single command (\u003ccode\u003ecopier update\u003c/code\u003e).\u003c/p\u003e\n\u003ch3 id=\"there-is-a-workflow-to-automatically-check-for-updates\"\u003eThere is a workflow to automatically check for updates\u003c/h3\u003e\n\u003cp\u003eThis is the only complex thing that I made in this whole endeavor.\nI have included a GitHub workflow in the template that runs the update command above once a week, and if there are updates, it will create a pull request with these updates.\u003c/p\u003e\n\u003ch2 id=\"closing-remarks\"\u003eClosing remarks\u003c/h2\u003e\n\u003cp\u003eIt is still early to see how useful the template will be.\nHopefully, other people will want to use it for their package as well, since there is nothing specific to JSO.\nGet in touch if you want to be involved, and \u003ca href=\"https://github.com/abelsiqueira/COPIERTemplate.jl\"\u003eleave a star\u003c/a\u003e if you found the project interesting.\u003c/p\u003e\n","description":null,"image":"/blog/2023-10-07/banner.jpg","permalink":"/blog/2023-10-07-copiertemplate/","title":"COPIERTemplate.jl: A new template for Julia using copier"},{"content":"\u003cp\u003eJulia and Python are often seen as competitors, but in this video I want to show the integration between them. Using the PythonCall and the JuliaCall packages we can call Julia from Python and Python from Julia.\n\u003ca href=\"https://youtu.be/8huiBpkMFwE\"\u003eCheck the video out\u003c/a\u003e or check edited transcript below.\u003c/p\u003e\n\u003cp\u003eDon\u0026rsquo;t forget to like and subscribe.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://youtu.be/8huiBpkMFwE\"\u003e\u003cimg src=\"/blog/2023-09-05/banner.gif\" alt=\"Banner for youtube video\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eDownload the \u003ca href=\"/blog/2023-09-05/python-from-julia.jl\"\u003epython-from-julia.jl Pluto notebook\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eDownload the \u003ca href=\"/blog/2023-09-05/julia-from-python.ipynb\"\u003ejulia-from-python.ipynb Jupyter notebook\u003c/a\u003e.\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003eThere are currently two ways to integrate Python in Julia and Julia in Python. These two main packages are PyCall and PythonCall and their corresponding Python package.\nI have talked about PyCall in a series of blog posts in the past, comparing \u003ca href=\"/blog/2022-01-19-python-and-julia-1/\"\u003ePython being improved by C++ and Python being improved by Julia\u003c/a\u003e up to the point that we actually made the Julia code faster than the C++ code in this specific instance.\nNow I\u0026rsquo;m going to talk about the PythonCall package and the corresponding JuliaCall package which are newer.\u003c/p\u003e\n\u003ch2 id=\"calling-python-from-julia\"\u003eCalling Python from Julia\u003c/h2\u003e\n\u003cp\u003eSo very briefly, you install PythonCall, And it installs a Python version for you. Use the conda package to install the packages that you need for Python call. So here I\u0026rsquo;m installing PythonCall in this Pluto environment. I\u0026rsquo;m using Pkg and I\u0026rsquo;m saying conda add seaborne and conda add scikit learn.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-julia\" data-lang=\"julia\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eusing\u003c/span\u003e PythonCall, Random, DataFrames, CondaPkg\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eusing\u003c/span\u003e Pkg\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ePkg\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003epkg\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;conda add seaborn\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ePkg\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003epkg\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;conda add scikit-learn\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSo I\u0026rsquo;m just installing these two packages. And here I am calling some code. This is Julia code as normal. Essentially I\u0026rsquo;m creating a hundred by three matrix with some distribution that depends on whether the Data is from the type A or the type B, which is essentially fake data for a classification problem.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-julia\" data-lang=\"julia\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eRandom\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eseed!(\u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003en \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e100\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ep \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e3\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ea_or_b \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e rand([\u003cspan style=\"color:#e6db74\"\u003e:a\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e:b\u003c/span\u003e], n)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eŒº \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eDict\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e:a\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e0.5\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e:b\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e1.5\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eœÉ \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eDict\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e:a\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e0.5\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e:b\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e1.5\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eX \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e [\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  randn() \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e œÉ[a_or_b[i]] \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e Œº[a_or_b[i]]\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e i \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003en, j \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003ep\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e]\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edf \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e DataFrame(\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  [X a_or_b],\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  [[\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;x\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e$i\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e i \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003ep]; \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;a_or_b\u0026#34;\u003c/span\u003e],\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esns \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e pyimport(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;seaborn\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esns\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003epairplot(pytable(df), hue\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;a_or_b\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSo if you look at these and you have seen the classification problem before, you probably recognize the seaborne package that plots all of the three axis. and the classes of these points. So the way that we do that, so all the way up to here, this is all just Julia, nothing new. But then we just use pyimport seaborn to import that Python package. And then we call sns.pairplot. And now you\u0026rsquo;re just calling some Python code.\u003c/p\u003e\n\u003cp\u003eI\u0026rsquo;m just calling the pairplot function from Seaborn. I\u0026rsquo;m giving it a data frame, but converted using pytable, which is part of the package that we just installed. So this is how you can easily just use a Python package inside Julia.\u003c/p\u003e\n\u003cp\u003eHere is the output:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/blog/2023-09-05/python-from-julia-1.png\" alt=\"Seaborn plot 1\"\u003e\u003c/p\u003e\n\u003cp\u003eDown here I have a bit longer example now using the scikit-learn package.\nSo I\u0026rsquo;m using sklearn.naive_bayes. I then have the gaussianNB constructor. I create a classifier. And down here I fit this classifier, the input of this classifier is a Julia matrix and a Julia array of integers. So it just works. And then when I call predict, I have a new vector, y hat.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-julia\" data-lang=\"julia\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enb \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e pyimport(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;sklearn.naive_bayes\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eclf \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e nb\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eGaussianNB()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eX \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eMatrix\u003c/span\u003e(df[\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eend\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e])\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ey \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eInt\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e(df[\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e, \u003cspan style=\"color:#66d9ef\"\u003eend\u003c/span\u003e] \u003cspan style=\"color:#f92672\"\u003e.==\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e:a\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eclf\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003efit(X, y)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eyÃÇ \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e clf\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003epredict(X)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edf_predict \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e copy(df)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edf_predict[\u003cspan style=\"color:#f92672\"\u003e!\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e:predict\u003c/span\u003e] \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e pyconvert(\u003cspan style=\"color:#66d9ef\"\u003eVector\u003c/span\u003e, yÃÇ)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esns\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003epairplot(pytable(df_predict), hue\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;predict\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe way that I chose to plot this is again, giving it to pyplot. I just convert this vector. This is a Python vector. So I convert it to a Julia vector using the pyconvert function.\u003c/p\u003e\n\u003cp\u003eHere is the output:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/blog/2023-09-05/python-from-julia-2.png\" alt=\"Seaborn plot 2\"\u003e\u003c/p\u003e\n\u003ch2 id=\"calling-julia-from-python\"\u003eCalling Julia from Python\u003c/h2\u003e\n\u003cp\u003eSo to use Julia from inside Python, you can just install the Julia call package and just \u003ccode\u003epip install juliacall\u003c/code\u003e.\nYou will have access to import main, and you can give it a name like \u003ccode\u003ejl\u003c/code\u003e, and you can see here that it installs a Julia for you, so you don\u0026rsquo;t have to worry about that.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003efrom\u003c/span\u003e juliacall \u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e Main \u003cspan style=\"color:#66d9ef\"\u003eas\u003c/span\u003e jl\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eTo install Julia packages, you want to use The juliapkg package. So it\u0026rsquo;s also \u003ccode\u003epip install juliapkg\u003c/code\u003e.\nAnd then you have to say here, juliapkg.Add, and give the package name and the UUID. These might be harder to get but the easiest way will be to just open Julia and say, add JuMP and ask for the status and it\u0026rsquo;ll list this information for you.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e juliapkg\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ejuliapkg\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eadd(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;JuMP\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;4076af6c-e467-56ae-b986-b466b2749572\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ejuliapkg\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eadd(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Ipopt\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;b6b21f68-93f8-5de0-b562-5493be1d77c9\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ejuliapkg\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eresolve()\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAnd when you add your packages, you say resolve to get them installed. And you can also use a json file and list this information on the json file, which I ignore here. So we just have a single notebook. So this install this jump and ipopt packages and jump and ipopt, you know, are packages for optimization.\u003c/p\u003e\n\u003cp\u003eSo to just show this package working, I\u0026rsquo;m gonna implement a simple optimization model to find the best investment if I try to base myself on historic information of these five stocks. So this is, is known as the Markowitz model, which is a simple model. So don\u0026rsquo;t use it in your stock selection.\u003c/p\u003e\n\u003cp\u003eBut anyway, so just so you know, I\u0026rsquo;m using yfinance. So this is all Python. I download closing data from these stocks. I I\u0026rsquo;m just plotting for you to see and computing the returns. I have to use the mean value and the covariance matrix. Just so I can compute the risk and the expected return of this selection.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e yfinance \u003cspan style=\"color:#66d9ef\"\u003eas\u003c/span\u003e yf\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edata \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e yf\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003edownload([\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;AAPL\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;MSFT\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;AMZN\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;NVDA\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;GME\u0026#34;\u003c/span\u003e], start\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;2018-01-01\u0026#34;\u003c/span\u003e, end\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;2022-12-31\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edata \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e data[\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Close\u0026#34;\u003c/span\u003e]\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ereturns \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e data\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003ediff() \u003cspan style=\"color:#f92672\"\u003e/\u003c/span\u003e data\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ereturns \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e returns[\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e:]\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emean_returns \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e returns\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003emean()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003estd_returns \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e returns\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003ecov()\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAnd now we start using Julia. So \u003ccode\u003ejl.seval\u003c/code\u003e, which is a string evaluation using jump, using Ipopt. Then you can say things like model equals Model(Ipopt.Optimizer). You could use another syntax here if you try to get the jump value. So \u003ccode\u003ejl.JuMP\u003c/code\u003e, and you can just call model directly but then you have to write more.\u003c/p\u003e\n\u003cp\u003eSo this was just simpler, not going to say it\u0026rsquo;s faster. I don\u0026rsquo;t know one way to pass data around. If you want to pass the actual data to Julia, you say JL dot the variable name equals data. And then it, this data that is just a Python thing is now also a Julia thing. I\u0026rsquo;m actually not using this for anything, but just so you know.\u003c/p\u003e\n\u003cp\u003eThe Markowitz model needs the mean return, the expected return, and this covariance matrix.\nAnd what it does is it has one variable for each one of my stock, and I want to minimize the risk.\nSo if you don\u0026rsquo;t know this, that\u0026rsquo;s fine.\nThis is Julia, that\u0026rsquo;s the important thing.\nAnd I want an expected return here that I\u0026rsquo;m just saying it needs to be positive.\nThese are constraints and here you are investing all of your money.\nAnd that\u0026rsquo;s it.\nThat\u0026rsquo;s the whole model.\nYou optimize this model.\nAll of this is Julia. \u003ccode\u003ejl.seval\u003c/code\u003e.\nI\u0026rsquo;m obtaining the value of the allocation and here I\u0026rsquo;m getting the objective value, which is how much risk my selection is on, which doesn\u0026rsquo;t matter a lot for us.\nThe important part is that I can plot these things now back into Python. So that\u0026rsquo;s it. This is like just a Julia insertion in my Python notebook.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ejl\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eseval(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;using JuMP\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ejl\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eseval(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;using Ipopt\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emodel \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e jl\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eseval(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;model = Model(Ipopt.Optimizer)\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ejl\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003edata \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e data\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ejl\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003en \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e data\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eshape[\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e]\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ejl\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003emean_r \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e mean_returns\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003evalues\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ejl\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003estd_r \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e std_returns\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003evalues\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ejl\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eseval(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;@variable(model, x[1:n] \u0026gt;= 0)\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ejl\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eseval(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;@objective(model, Min, dot(x, std_r, x))\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ejl\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eseval(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;@constraint(model, dot(x, mean_r) / n \u0026gt;= 0)\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ejl\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eseval(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;@constraint(model, sum(x) == 1)\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ejl\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eseval(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;optimize!(model)\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ex \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e jl\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eseval(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;value.(x)\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ef \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e jl\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eseval(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;objective_value(model)\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emodel\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow I\u0026rsquo;m back to Python.\nSo here I can analyze the solution. So this brown curve. So we had a pretty good result.\nHere you can see the allocation.\nIt\u0026rsquo;s mostly Microsoft stocks and hindsight is 20/20, so please don\u0026rsquo;t use this for your investment.\nThis is not investment suggestion or advising of any kind.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e numpy \u003cspan style=\"color:#66d9ef\"\u003eas\u003c/span\u003e np\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esol_data \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e data\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003ecopy()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esol_data[\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;solution\u0026#39;\u003c/span\u003e] \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e np\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003ematmul(data\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003evalues, x)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eplt\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eplot(sol_data)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eplt\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003elegend(sol_data\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003ecolumns)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"/blog/2023-09-05/julia-from-python-1.png\" alt=\"Stocks plot\"\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eplt\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003ebar(range(\u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e, len(x)), x)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eplt\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003exticks(range(\u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e, len(x)), data\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003ecolumns)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eplt\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003etitle(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Allocation\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"/blog/2023-09-05/julia-from-python-2.png\" alt=\"Allocation plot\"\u003e\u003c/p\u003e\n\u003ch2 id=\"final-remarks\"\u003eFinal remarks\u003c/h2\u003e\n\u003cp\u003eCalling Julia from Python, Python from Julia is a great way of expanding your horizons.\nSo Julia currently has this lack of libraries issue that people keep bringing up, but one quick way to solve this is to just import the packages from Python or from other languages.\nYou can also do the same for R, Java, C, Fortran, many languages.\u003c/p\u003e\n\u003cp\u003eAnd in the other hand, if you have some code that could benefit from some speed up, but in a higher level language, you could just try using Julia instead of the traditional C++ integration that Python does frequently.\u003c/p\u003e\n\u003cp\u003eI have also talked today about two key things.\nI have talked about machine learning and I have talked about optimization.\nDon\u0026rsquo;t worry if you do not get the specific topics.\nIf you want me to talk more about those things, let me know in the comments.\u003c/p\u003e\n\u003cp\u003eNow I have questions for you.\nWhat other kind of integration would you think is very important for Julia?\nDo you think the Python integration that we have seen today is enough to convince people to use Julia more, coming from Python?\u003c/p\u003e\n\u003cp\u003eDo you think companies can adopt Julia if you can use machine learning and you can use notebooks and that\u0026rsquo;s it? You can just\u0026hellip; bring up the Julia good stuff, but keep using Python. Let me know what you think in the comments.\u003c/p\u003e\n\u003cp\u003eAnd thanks a lot for watching today\u0026rsquo;s video, and I hope you enjoyed. Don\u0026rsquo;t forget to like and subscribe, click the bell button, and I\u0026rsquo;ll see you next time.\u003c/p\u003e\n\u003cp\u003eBye bye.\u003c/p\u003e\n","description":null,"image":"/blog/2023-09-05/banner.gif","permalink":"/blog/2023-09-05-best-frenemies-julia-and-python/","title":"Best Frenemies: Julia and Python"},{"content":"\u003cp\u003eI have a new video up about how Julia cannot even handle simple math! \u003ca href=\"https://youtu.be/siCWLWHSrvo\"\u003eCheck the video out\u003c/a\u003e or check an edited written version below.\u003c/p\u003e\n\u003cp\u003eDon\u0026rsquo;t forget to like and subscribe\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://youtu.be/siCWLWHSrvo\"\u003e\u003cimg src=\"/blog/2023-08-30/banner.gif\" alt=\"Banner for youtube video\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eJulia is supposed to be a great programming language, but it can\u0026rsquo;t even do simple math correctly.\nTake a look at this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-julia\" data-lang=\"julia\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ejulia\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e0.1\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e0.2\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e0.3\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e5.551115123125783e-17\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIt should be zero, but it\u0026rsquo;s actually not.\nThe notation means\u003c/p\u003e\n\u003cp\u003e$$5.551115123125783 \\times 10^{-17},$$\u003c/p\u003e\n\u003cp\u003ewhich is a number with 16 zeros after the period and then a bunch of \u0026ldquo;random\u0026rdquo; values.\nSo it\u0026rsquo;s close to zero, but it\u0026rsquo;s not zero.\u003c/p\u003e\n\u003cp\u003eSo why is it not zero?\nWhat are they not telling us? Why is this not being fixed?\n\u003cstrong\u003eIs Julia dying?\u003c/strong\u003e\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003eDon\u0026rsquo;t worry, Julia is not dying.\nThis is actually a very common source of confusion.\nYou will find many questions on Stack Overflow, Discourse, Slack, asking why this happens.\nWhy is this not zero?\u003c/p\u003e\n\u003cp\u003eApplied mathematicians and computer scientists have known about this for a while now.\nThis is part of something called floating point arithmetic, and it\u0026rsquo;s not just in Julia, it is common in many programming languages.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"https://youtu.be/siCWLWHSrvo\"\u003eIn the video, I show that \u003cstrong\u003ePython, R, Javascript, C\u003c/strong\u003e, and \u003cstrong\u003eRust\u003c/strong\u003e have the same behaviour, watch it now.\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"why-is-it-not-0\"\u003eWhy is it not 0?\u003c/h2\u003e\n\u003cp\u003eSo why is it not 0?\nIn most modern computers, numbers are represented using 64 bits.\nSo that means you have a sequence of either 0s or 1s, and that sequence of length 64 is associated with a real number.\nSo you have $2^{64}$ possibilities, which is much less than infinite real numbers.\nSo you can only represent a finite amount of the real numbers.\nThis means that some of the numbers that you would like to represent cannot be represented at all.\u003c/p\u003e\n\u003cp\u003eSecond, these numbers are in binary.\nFor instance, $(101)_2$ is binary number.\nIt\u0026rsquo;s value is obtained by taking each one of these digits and multiplying by a specific power of two.\u003c/p\u003e\n\u003cp\u003e$$(101)_2 = 1\\times2^2 + 0\\times2^1 + 1\\times2^0 = 5$$\u003c/p\u003e\n\u003cp\u003eSo the first digit (from right to left) is multiplied by $2^0$.\nThe next one by $2^1$, and the next one by $2^2$.\nIf you count from zero, you can verify this:\u003c/p\u003e\n\u003cp\u003e$$\\begin{aligned}\n(0)_2 \u0026amp; = 0 \\\n(1)_2 \u0026amp; = 1 \\\n(10)_2 \u0026amp; = 2 \\\n(11)_2 \u0026amp; = 3 \\\n(100)_2 \u0026amp; = 4 \\\n(101)_2 \u0026amp; = 5.\n\\end{aligned}$$\u003c/p\u003e\n\u003cp\u003eSo that\u0026rsquo;s how integer binary numbers are represented, but we are not using integer numbers here.\nWe are concerned about more general numbers.\nIn particular, we are looking at rational numbers so you can also have things like\u003c/p\u003e\n\u003cp\u003e$$(11.01)_2.$$\u003c/p\u003e\n\u003cp\u003eThis is a non-integer binary number, so here again, the right-most digit before the period is multiplied by $2^0$.\nEach step to the left get a higher power, and each step to the right gets a lower power.\u003c/p\u003e\n\u003cp\u003e$$(11.01)_2 = 1\\times2^1 + 1\\times2^0 + 0\\times2^{-1} + 1\\times2^{-2} = 3.25.$$\u003c/p\u003e\n\u003cp\u003eSo you can represent even numbers that are not integers in binary format.\nSo this means that when you write something in your computer, like 3 point 14, it is actually being translated into binary and truncated into one of these $2^{64}$ numbers that the computer can represent.\nSo in general, you cannot be sure that the number that you want to represent is possible to be represented in your computer.\u003c/p\u003e\n\u003cp\u003eAnd this is the root of all problems, you have these two things together.\nYou cannot represent all numbers because you only have a finite amount of numbers that can be represented with 64 bits, and these numbers are represented in binary.\nSo what happens with the specific numbers that we used?\u003c/p\u003e\n\u003cp\u003eIn binary, the number 0.1, 0.2, and 0.3 are\u003c/p\u003e\n\u003cp\u003e$$\\begin{aligned}\n0.1 \u0026amp; = (0.0\\overline{0011})_2 = (0.0001100110011\\dots)_2 \\\n0.2 \u0026amp; = (0.\\overline{0011})_2 = (0.001100110011\\dots)_2 \\\n0.3 \u0026amp; = (0.01\\overline{0011})_2 = (0.01001100110011\\dots)_2.\n\\end{aligned}$$\u003c/p\u003e\n\u003cp\u003eSo in base 10, these number are finite, they look nice.\nBut when you convert them to binary, they actually need an infinite amount of digits to be described correctly.\nSo they will need to be truncated at some point.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eNote: This has been simplified.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eSo let\u0026rsquo;s make an example using 6 digits:\u003c/p\u003e\n\u003cp\u003e$$\\begin{aligned}\n0.1 \u0026amp; \\approx (0.000110)_2 \\\n0.2 \u0026amp; \\approx (0.001100)_2 \\\n0.3 \u0026amp; \\approx (0.010011)_2.\n\\end{aligned}$$\u003c/p\u003e\n\u003cp\u003eThis means that\u003c/p\u003e\n\u003cp\u003e$$0.1 + 0.2 \\approx (0.000110)_2 + (0.001100)_2 = (0.010010)_2.$$\u003c/p\u003e\n\u003cp\u003eHowever, the approximate value of $0.3$ differs on the last bit, and that is why it is not zero.\nSomething similar happens with 64 bits (which is not the same as 64 digits).\u003c/p\u003e\n\u003cp\u003eThis is a problem when you want to do these computations, and that\u0026rsquo;s why there is a whole field of study dedicated for this.\nSo if you have the chance, I recommend looking into some kind of class for numerical methods, or specifically floating point arithmetic.\u003c/p\u003e\n\u003ch2 id=\"are-they-not-gonna-fix-this\"\u003eAre they not gonna fix this?\u003c/h2\u003e\n\u003cp\u003eSo now for the second question, are they not going to fix this? And the answer is no, there is nothing to be fixed.\nIt is working as expected.\nThe IEEE-754 specification (that defines these floating points), which was defined in 1985, is being implemented in probably 99% of all the computers.\u003c/p\u003e\n\u003cp\u003eIf you\u0026rsquo;re using something from the hardware and you want it to be fast, it\u0026rsquo;s probably the IEEE-754.\nSo that\u0026rsquo;s what you want if you want speed.\nAnd if you want to make sure that things are working correctly with the numerical errors that are a part of the floating point arithmetic, you have to do the math.\u003c/p\u003e\n\u003cp\u003eEssentially, that\u0026rsquo;s the basic answer, the straightforward but not easy answer, for this problem.\nYou have to do the math and make sure that you\u0026rsquo;re doing it right.\u003c/p\u003e\n\u003cp\u003eLet\u0026rsquo;s say, however, that you are not going to do the math or that you actually know that you can\u0026rsquo;t allow any of these errors because your objectives are not to do this kind of scientific computing, but something else.\nWell, you have a few options to avoid or mitigate this problem.\nBe aware that you\u0026rsquo;re paying something in all of these cases.\u003c/p\u003e\n\u003cp\u003eThe first situation is where you don\u0026rsquo;t care so much that you have an error.\nYou care that the error is too large.\nSo you can use a higher precision.\nSo let\u0026rsquo;s say that 10 to the minus 17 is not good, but if it were like 10 to the minus 300, that would be fine.\nThe first thing that you can do is use big float.\u003c/p\u003e\n\u003cp\u003eSo if instead of doing that computation, 0 point 1, 0 point 2, with normal numbers, you use big floats, you\u0026rsquo;re actually going to be able to have a much smaller error, depending on the precision that you select.\nSo that\u0026rsquo;s one solution for you.\u003c/p\u003e\n\u003cp\u003eSo another possibility is that you want the numbers to be exact.\nSo one thing that you can use, use rational numbers.\nSo the rational numbers are also part of the base of Julia.\nYou just use a double back slash and that will be available to you immediately.\nJust.\nLook for rational numbers, or if you really want something more complicated, especially if you\u0026rsquo;re dealing with irrational numbers you can look into symbolics but I\u0026rsquo;ll be honest, I haven\u0026rsquo;t checked it for this kind of application.\nI don\u0026rsquo;t know what it does.\nThere are some irrational numbers in Julia, like PI and E, but in general, it will be much more complicated to handle it.\nIf our application is in finance, it is also common instead of worrying about binary numbers at all to just use decimal numbers.\u003c/p\u003e\n\u003cp\u003eSo there are actually packages for that.\nYou have a package called DecFP.\njl for decimal floating point and something else called decimals.\njl.\nBoth of them are part of the Julia math organization.\nSo you can check those things out.\u003c/p\u003e\n\u003cp\u003eIs your application covered in these things that I mentioned? If yes or no, please let me know in the comments because it\u0026rsquo;s very important statistics for me so I know what to do next.\u003c/p\u003e\n\u003cp\u003eAlso, if you think this kind of numerical methods are interesting and you want to know more and you would like me to talk about it because of course you can always just look for it elsewhere.\nWell, leave a comment saying that you would be up to more videos in numerical methods and floating point arithmetic.\u003c/p\u003e\n\u003cp\u003eI did teach classes about this in my previous job, so I kinda have some material in Portuguese, not in English yet.\nAnd finally thanks a lot for watching.\nThanks for the patience for the delay in the videos.\nI hope to be more frequent.\nIf you have anything in mind that you would like me to talk about, leave in the comments.\nOtherwise, please like subscribe and press the bell button.\nI\u0026rsquo;ll see you next time.\nBye bye.\u003c/p\u003e\n","description":null,"image":"/blog/2023-08-30/banner.gif","permalink":"/blog/2023-08-30-julia-language-cannot-handle-simple-math/","title":"Julia Language Can't Even Handle Simple Math"},{"content":"\u003cp\u003eOn a previous video/blog post, I talked about production planning using an example of selling art on the beach.\nOne simplification of that model was the assumption that everything that we build can be sold.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://youtu.be/0HRAYGYrkIc\"\u003e\u003cimg src=\"/blog/2023-06-28/banner.jpg\" alt=\"Banner for youtube video\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eYou can check the \u003ca href=\"/blog/2023-06-28/demand-of-your-art.html\"\u003epluto notebook html\u003c/a\u003e or \u003ca href=\"https://github.com/abelsiqueira/youtube/blob/main/demand-of-your-art.jl\"\u003edownload the notebook\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eI have an excert down here, but for more details, check the video.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eIf you just want, you can just skip to \u003ca href=\"#questions\"\u003equestions\u003c/a\u003e.\u003c/strong\u003e\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003eAs we saw on \u003ca href=\"https://www.youtube.com/watch?v=IOUi1juD5HQ\"\u003elast episode\u003c/a\u003e, Javier is creating and selling his art on the beach.\nHowever, we assumed that everything that Javier builds will be sold, which is unrealistic.\u003c/p\u003e\n\u003cp\u003eNow, we have to deal with a more realistic scenario, in which the demand for Javier\u0026rsquo;s product is not infinite.\nWe will still need assumptions, but the model is a bit more realistic.\u003c/p\u003e\n\u003ch2 id=\"strategy-1-sell-excess-inventory-at-a-discount\"\u003eStrategy 1: Sell excess inventory at a discount\u003c/h2\u003e\n\u003cp\u003eThe first strategy is simple.\nIf there is no more demand for the products, Javier sells them at a discounted price.\u003c/p\u003e\n\u003cp\u003eFor that, we need to assume that\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eJavier knows the demand for each of their products under the price that he decided to sell them;\u003c/li\u003e\n\u003cli\u003eJavier discounted price is low enough to sell all of the remaining products.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"modeling\"\u003eModeling\u003c/h2\u003e\n\u003cp\u003eOur new model is pretty much the same as before, but I will bring the new parts to your attention.\u003c/p\u003e\n\u003ch3 id=\"how-to-model-discounted-price\"\u003eHow to model discounted price\u003c/h3\u003e\n\u003cp\u003e(see also piece-wise concave linear objective)\u003c/p\u003e\n\u003cp\u003eLet\u0026rsquo;s consider only the bracelet: selling price ‚Ç¨25 up to 4 units and ‚Ç¨8 after that.\u003c/p\u003e\n\u003cp\u003eOne way of describing our objective is by defining the nonlinear function $\\text{revenue}(q)$:\u003c/p\u003e\n\u003cp\u003e$$\\text{revenue}(q) = \\left\\{\\begin{array}{cc}\n25q, \u0026amp; 0 \\leq q \\leq 4, \\\\\n25\\times 4 + (q - 4)\\times 8, \u0026amp; q \u0026gt; 4.\n\\end{array}\\right.$$\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/blog/2023-06-28/revenue-function.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eThis is not linear, though, so to maximize this function we need to some modeling magic, and in this case there is a very simple approach.\u003c/p\u003e\n\u003cp\u003eFirst, we split the quantity decision variable $q$ into two parts:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eQuantity under demand: $\\underline{q}$\u003c/li\u003e\n\u003cli\u003eQuantity over demand: $\\overline{q}$\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThen, the revenue function can be expressed as\u003c/p\u003e\n\u003cp\u003e$$25\\underline{q} + 8\\overline{q} \\quad \\text{subject to} \\quad \\underline{q} \\leq 4, \\ \\overline{q} \\geq 0$$\u003c/p\u003e\n\u003cp\u003eAnd whenever cost is not important, use $\\underline{q} + \\overline{q}$ instead of $q$.\nWe can, to improve readability, create that as an expression $q = \\underline{q} + \\overline{q}$.\u003c/p\u003e\n\u003cp\u003eIt might not be clear at first why this works, since $q = \\underline{q} + \\overline{q}$ does not imply that we are selling \u003cstrong\u003efirst\u003c/strong\u003e the normal priced items.\nThe reason that it works is that we are maximizing the revenue.\nThis means that if you have to write $7 = \\underline{q} + \\overline{q}$ to maximize revenue, one would prefer $\\underline{q} = 4$ and $\\overline{q} = 3$.\u003c/p\u003e\n\u003cp\u003eThe animation below shows the function on two variables and the best choice given a production.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/blog/2023-06-28/revenue.gif\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eNotice that the new constraints $\\underline{q} \\leq 4$ and $\\overline{q} \\geq 0$ are necessary.\u003c/p\u003e\n\u003ch3 id=\"model\"\u003eModel\u003c/h3\u003e\n\u003cp\u003e\u003cstrong\u003eSets\u003c/strong\u003e:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eProducts: $p \\in \\mathcal{P}$\u003c/li\u003e\n\u003cli\u003eMaterials: $m \\in \\mathcal{M}$\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eParameters\u003c/strong\u003e:\u003c/p\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth style=\"text-align: left\"\u003eName\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003eUnit\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003eIdentifier\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003eSet\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003eTime availability\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eh\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e$\\text{time_available}$\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003eSelling price of $p$\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e‚Ç¨ / unit\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e$\\text{selling_price}_p$\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e$p \\in \\mathcal{P}$\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e(New) Discounted price of $p$\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e‚Ç¨ / unit\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e$\\text{discounted_selling_price}_p$\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e$p \\in \\mathcal{P}$\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e(New) Demand for product $p$\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eunit\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e$\\text{demand}_p$\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e$p \\in \\mathcal{P}$\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003eHours to assemble product $p$\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e$h$ / unit\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e$\\text{assemble_time}_{p}$\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e$p \\in \\mathcal{P}$\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003eMaterial $m$ cost\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e‚Ç¨ / [$m$]\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e$\\text{material_cost}_m$\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e$m \\in \\mathcal{M}$\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003eAmount of $m$ per unit of $p$\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e[$m$] / unit\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e$\\text{mat_per_prod}_{p,m}$\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e$p \\in \\mathcal{P}, m \\in \\mathcal{M}$\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cstrong\u003eVariables\u003c/strong\u003e:\u003c/p\u003e\n\u003cp\u003eAs mentioned, the production variable is split into two parts, one to possibly satisfy the demand, and one for extra products sold.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAmount of product $p$ assembled and sold at full price (unit): $\\text{prod_normal}_p, \\quad p \\in \\mathcal{P}$\u003c/li\u003e\n\u003cli\u003eAmount of product $p$ assembled and sold at discount (unit): $\\text{prod_extra}_{p}, \\quad p \\in \\mathcal{P}$\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eExpressions\u003c/strong\u003e:\u003c/p\u003e\n\u003cp\u003eAs mentioned before, let\u0026rsquo;s create a helper expression for the total amount of products produced.\nThis essentially allows us to reuse all other expressions and constraints.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAmount produced and sold of product $p$:\n$$\\displaystyle \\text{prod}_p = \\text{prod_normal}_{p} + \\text{prod_extra}_{p}, \\quad p \\in \\mathcal{P}$$\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThe revenue also changes to differentiate the products:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eRevenue:\n$$\\text{revenue} = \\sum_{p \\in \\mathcal{P}} \\bigg( \\text{selling_price}_p \\times \\text{prod_normal}_{p} + \\text{discounted_selling_price}_p \\times \\text{prod_extra}_{p}\n\\bigg)$$\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThe other expressions are the same as before.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eObjective\u003c/strong\u003e:\u003c/p\u003e\n\u003cp\u003eThe objective hasn\u0026rsquo;t changed.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eMaximize profit:\n$\\text{maximize} \\quad \\text{revenue} - \\text{total_material_cost}$\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eConstraints\u003c/strong\u003e:\u003c/p\u003e\n\u003cp\u003eNow, to finalize, we have the extra constraints mentioned before.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eProduction under demand:\n$\\text{prod_normal}_{p} \\leq \\text{demand}_p, \\quad p \\in \\mathcal{P}$\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eNonnegativity:\n$\\text{prod_normal}_{p}, \\ \\text{prod_extra}_{p} \\geq 0$\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eInteger production:\n$\\text{prod_normal}_{p}, \\ \\text{prod_extra}_{p} \\in \\mathbb{Z}$\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eTime Availability:\n$\\text{spent_time} \\leq \\text{time_available}$\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"results\"\u003eResults\u003c/h3\u003e\n\u003cp\u003eThe solution is below. Check the video for the implementation details.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/blog/2023-06-28/solution-strategy-1.gif\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/blog/2023-06-28/revenue-strategy1.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003ch2 id=\"strategy-2-demand-is-a-function-of-price\"\u003eStrategy 2: Demand is a function of price\u003c/h2\u003e\n\u003cp\u003eOur second approach is to consider that the demand for the products depends on their price and to add this relation into the model.\nIn other words, we are not only deciding how many products we will build, we will decide at which price we will sell them.\u003c/p\u003e\n\u003cp\u003eTo do that we have to assume that we know how the demand depends on the price, which is not something trivial to figure out.\nFor today, let\u0026rsquo;s assume that this dependency will be linear:\u003c/p\u003e\n\u003cp\u003e$\\text{demand} = \\text{intercept} + \\text{slope} \\times \\text{price},$\u003c/p\u003e\n\u003cp\u003eand that we now the intercept and slope values for each product.\u003c/p\u003e\n\u003cp\u003eBelow are the plots of the values that we assume represent the demand.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/blog/2023-06-28/demand-given-price1.png\" alt=\"\"\u003e\n\u003cimg src=\"/blog/2023-06-28/demand-given-price2.png\" alt=\"\"\u003e\n\u003cimg src=\"/blog/2023-06-28/demand-given-price3.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003ch3 id=\"modeling-1\"\u003eModeling\u003c/h3\u003e\n\u003cp\u003eThere are a few more nuanced differences in this model.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eSets\u003c/strong\u003e:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eProducts: $p \\in \\mathcal{P}$\u003c/li\u003e\n\u003cli\u003eMaterials: $m \\in \\mathcal{M}$\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eParameters\u003c/strong\u003e:\u003c/p\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth style=\"text-align: left\"\u003eName\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003eUnit\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003eIdentifier\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003eSet\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003eTime availability\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eh\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e$\\text{time_available}$\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e(new) Demand of product $p$ (intercept)\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eunit\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e$\\text{demand_intercept}_p$\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e$p \\in \\mathcal{P}$\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e(new) Demand of product $p$ (slope)\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eunit / [‚Ç¨]\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e$\\text{demand_slope}_p$\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e$p \\in \\mathcal{P}$\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003eHours to assemble product $p$\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eh / unit\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e$\\text{assemble_time}_p$\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e$p \\in \\mathcal{P}$\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003eMaterial $m$ cost\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e‚Ç¨ / [$m$]\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e$\\text{material_cost}_m$\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e$m \\in \\mathcal{M}$\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003eAmount of $m$ per unit of $p$\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e[$m$] / unit\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e$\\text{mat_per_prod}_{p,m}$\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e$p \\in \\mathcal{P}, m \\in \\mathcal{M}$\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cstrong\u003eVariables\u003c/strong\u003e:\u003c/p\u003e\n\u003cp\u003eThe selling price is not a parameter anymore.\nInstead, we have a variable, which we called \u003ccode\u003edecided_price\u003c/code\u003e to differentiate, that will inform the value at which the product is sold.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAmount of product $p$ assembled and sold (unit): $\\quad \\text{prod}_p, \\quad p \\in \\mathcal{P}$\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e(New) Price of product $p$ (‚Ç¨)\u003c/strong\u003e: $\\quad \\text{decided_price}_p, \\quad p \\in \\mathcal{P}$\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eExpressions\u003c/strong\u003e:\u003c/p\u003e\n\u003cp\u003eA few things changed here.\nFirst, the demand is an expression now, which we will use in the constraints.\u003c/p\u003e\n\u003cp\u003eSecond, and maybe most important, the revenue is quadratic now.\nThis by itself is not an issue, but when coupled with the integrality of the variable $\\text{prod}_p$, we have a much harder problem on our hands.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e(New) Demand\u003c/strong\u003e: $$\\begin{align}\\text{demand_given_price}_p = \u0026amp; \\text{demand_intercept}_p + \\\\\n\u0026amp; \\text{demand_slope}_p \\times \\text{decided_price}_p, \\quad p \\in \\mathcal{P}\n\\end{align}$$\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eRevenue:\n$\\displaystyle \\text{revenue} = \\sum_{p \\in \\mathcal{P}} \\text{decided_price}_p \\times \\text{prod}_p$\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThe other expressions have not changed.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eObjective\u003c/strong\u003e:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eMaximize profit:\n$\\text{maximize} \\quad \\text{revenue} - \\text{total_material_cost}$\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eConstraints\u003c/strong\u003e:\u003c/p\u003e\n\u003cp\u003eThe new constraint of the model is relating the production to the price via the demand.\nNotice that the actual constraint could be written using equality.\nHowever, since the production is an integer, and the price is a floating-point number, it might be that the actual demand value (which should be an integer), is just a little bit off.\nDepending on the solver, it might help.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e(New) Produce what you can sell\u003c/strong\u003e:\n$$\\text{prod}_p \\leq \\text{demand_given_price}_p, \\quad p \\in \\mathcal{P}$$\u003c/li\u003e\n\u003cli\u003eTime Availability:\n$\\text{spent_time} \\leq \\text{time_available}$\u003c/li\u003e\n\u003cli\u003eNon-negativity:\n$\\text{prod}_p, \\ \\text{decided_price}_p \\geq 0, \\quad p \\in \\mathcal{P}$\u003c/li\u003e\n\u003cli\u003eInteger production:\n$\\text{prod}_p \\in \\mathbb{Z}$\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"implementation\"\u003eImplementation\u003c/h2\u003e\n\u003cp\u003eLast time we used the Cbc solver to solve our problem.\nIt had integer variables, but it was otherwise linear.\u003c/p\u003e\n\u003cp\u003eThis time, the objective is quadratic.\nTherefore, we need to use a different solver.\nSCIP is a good open-source choice.\u003c/p\u003e\n\u003ch2 id=\"results-1\"\u003eResults\u003c/h2\u003e\n\u003cp\u003eThe solution is below. Check the video for the implementation details.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/blog/2023-06-28/solution-strategy-2.gif\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/blog/2023-06-28/revenue-strategy2-40.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eNotice that there are diminishing returns in producing more.\nFurthermore, if you decrease the price too much to sell more products, you start to lose money.\nTherefore, eventually you stop producing more, and your profit stabilizes.\nThe plot below shows the situation if you worked more than 40 hours:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/blog/2023-06-28/revenue-strategy2-80.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"questions\"\u003eQuestions\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003eIn strategy 1, what if you had extra levels of price? For instance, for new products, you produce few with a high price. After selling those, you have a secondary price for a larger amount of products. After that, you have a sale for the remaining products. How do you model that?\u003c/li\u003e\n\u003cli\u003eIn strategy 2, the profit stabilizes after working about 60 hours. If, for instance, Javier gets a partner, it wouldn\u0026rsquo;t make sense to work more than 30 hours each to satisfy the demand. What would you do in this situation?\u003c/li\u003e\n\u003c/ol\u003e\n\u003chr\u003e\n","description":null,"image":"/blog/2023-06-28/banner.jpg","permalink":"/blog/2023-06-28-demand-of-your-art/","title":"Demand of your art"},{"content":"\u003cp\u003eI just released a video about using mathematical modeling to solve a production planning with the thematic of selling your art on the beach.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://youtu.be/IOUi1juD5HQ\"\u003e\u003cimg src=\"/blog/2023-06-14/banner.jpg\" alt=\"Banner for youtube video\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eYou can check the pluto notebook html \u003ca href=\"/blog/2023-06-14/selling-art-on-the-beach.html\"\u003ehere\u003c/a\u003e or download the notebook \u003ca href=\"https://github.com/abelsiqueira/youtube/blob/main/selling-art-on-the-beach.jl\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eI have an excert down here, but for more details, check the video.\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003eIn Brazil, a common joke between undergrad students (usually during exams) is that \u0026ldquo;maybe I should give up and go sell my art on the beach\u0026rdquo;.\u003c/p\u003e\n\u003cp\u003eIn this series, let\u0026rsquo;s follow a situation like that, by following the story of Javier, who just decided to leave his applied math program and sell beaded jewelry.\u003c/p\u003e\n\u003cp\u003eJavier spends his days on the beach, where he showcases his products, and while not selling, he can work on more of them.\nIt\u0026rsquo;s a simple life.\u003c/p\u003e\n\u003cp\u003eHowever, while working on his art, Javier\u0026rsquo;s mind wanders into his optimization class. He realizes that he could some use some of the basics of that class to improve his production.\u003c/p\u003e\n\u003cp\u003eJavier has 3 products:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eNecklaces\u003c/li\u003e\n\u003cli\u003eBracelets\u003c/li\u003e\n\u003cli\u003eEarrings\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eTo create these products, he uses 3 materials:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eBeads\u003c/li\u003e\n\u003cli\u003eString\u003c/li\u003e\n\u003cli\u003eWire\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eLet\u0026rsquo;s simplify, and assume all necklaces are equal, all bracelets are equal, etc.\u003c/p\u003e\n\u003cp\u003eFor each product, you have a different use of materials, a different selling price, and a different time to assemble them.\nAdditionally, there are costs for the materials.\nFinally, Javier assumes that having variety is good for business, so he wants at least some amount of each product.\nThese values can be seen in the \u003ca href=\"https://youtu.be/IOUi1juD5HQ\"\u003evideo\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"modeling\"\u003eModeling\u003c/h2\u003e\n\u003cp\u003eThe way that Javier learned to model was using the Sets, Parameters, and Variables.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eSets\u003c/strong\u003e:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eProducts: $p \\in \\mathcal{P}$\u003c/li\u003e\n\u003cli\u003eMaterials: $m \\in \\mathcal{M}$\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eParameters\u003c/strong\u003e:\u003c/p\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth style=\"text-align: left\"\u003eName\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003eUnit\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003eIdentifier\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003eSet\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003eTime availability\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eh\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e$\\text{time_available}$\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003eProduct $p$ selling price\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e‚Ç¨ / unit\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e$\\text{selling_price}_p$\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e$p \\in \\mathcal{P}$\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003eMaterial $m$ cost\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e‚Ç¨ / [$m$]\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e$\\text{material_cost}_m$\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e$m \\in \\mathcal{M}$\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003eHours to assemble product $p$\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eh / unit\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e$\\text{assemble_time}_p$\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e$p \\in \\mathcal{P}$\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003eMinimum production of product $p$\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eunit\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e$\\text{min_prod}_p$\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e$p \\in \\mathcal{P}$\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003eAmount of $m$ per unit of $p$\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e[$m$] / unit\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e$\\text{mat_per_prod}_{p,m}$\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e$p \\in \\mathcal{P}, m \\in \\mathcal{M}$\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cstrong\u003eVariables\u003c/strong\u003e:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAmount of product $p$ assembled and sold (unit): $\\text{prod}_p, \\quad p \\in \\mathcal{P}$\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eExpressions\u003c/strong\u003e:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eRevenue: $$\\text{revenue} = \\sum_{p \\in \\mathcal{P}} \\text{selling_price}_p \\times \\text{prod}_p$$\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eTotal Used Material: $$\\text{total_used_material}_m = \\sum_{p \\in \\mathcal{P}} \\text{mat_per_prod}_{p,m} \\times \\text{prod}_p, \\quad m \\in \\mathcal{M}$$\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eTotal Material Cost:\n$$\\text{total_material_cost} = \\sum_{m \\in \\mathcal{M}} \\text{total_used_mat}_m \\times \\text{material_cost}_m, \\quad m \\in \\mathcal{M}$$\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eTime expenditure: $$\\text{time_spent} = \\sum_{p \\in \\mathcal{P}} \\text{assemble_time}_p \\times \\text{prod}_p$$\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eObjective\u003c/strong\u003e:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eMaximize profit: $$\\text{maximize} \\quad \\text{revenue} - \\text{total_material_cost}$$\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eConstraints\u003c/strong\u003e:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTime Availability: $$\\text{spent_time} \\leq \\text{time_available}$$\u003c/li\u003e\n\u003cli\u003eMinimum production: $$\\text{prod}_p \\geq \\text{min_prod}_p, \\quad p \\in \\mathcal{P}$$\u003c/li\u003e\n\u003cli\u003eInteger production: $$\\text{prod}_p \\in \\mathbb{Z}$$\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"code\"\u003eCode\u003c/h2\u003e\n\u003cp\u003eThe code below needs data to work, so check the video or the code (links in the top).\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-julia\" data-lang=\"julia\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eusing\u003c/span\u003e JuMP, Cbc\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e optimize_production(time_availability)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  model \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e Model(Cbc\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eOptimizer)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  set_attribute(model, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;logLevel\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  products_index \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eDict\u003c/span\u003e(p \u003cspan style=\"color:#f92672\"\u003e=\u0026gt;\u003c/span\u003e i \u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e (i, p) \u003cspan style=\"color:#66d9ef\"\u003ein\u003c/span\u003e enumerate(products))\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  materials_index \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eDict\u003c/span\u003e(m \u003cspan style=\"color:#f92672\"\u003e=\u0026gt;\u003c/span\u003e i \u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e (i, m) \u003cspan style=\"color:#66d9ef\"\u003ein\u003c/span\u003e enumerate(materials))\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003e@variable\u003c/span\u003e(model,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    prod[p\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003eproducts] \u003cspan style=\"color:#f92672\"\u003e‚â•\u003c/span\u003e min_prod[products_index[p]],\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eInt\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  )\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003e@expression\u003c/span\u003e(model,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    total_used_material[m\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003ematerials],\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    sum(\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      material_per_product[products_index[p], materials_index[m]] \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e prod[p]\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e p \u003cspan style=\"color:#66d9ef\"\u003ein\u003c/span\u003e products\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    )\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  )\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#75715e\"\u003e# total_mat_cost = sum(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#75715e\"\u003e# \ttotal_used_material[m] * material_cost[m]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#75715e\"\u003e# \tfor m, _ in enumerate(materials)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#75715e\"\u003e# )\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  total_mat_cost \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e sum(total_used_material \u003cspan style=\"color:#f92672\"\u003e.*\u003c/span\u003e material_cost)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#75715e\"\u003e# total_mat_cost = dot(total_used_material, material_cost)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  revenue \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e sum(prod \u003cspan style=\"color:#f92672\"\u003e.*\u003c/span\u003e selling_price)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  profit \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e revenue \u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e total_mat_cost\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  time_expenditure \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e sum(hours_to_assemble \u003cspan style=\"color:#f92672\"\u003e.*\u003c/span\u003e prod)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003e@objective\u003c/span\u003e(model, Max, profit)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003e@constraint\u003c/span\u003e(model, time_expenditure \u003cspan style=\"color:#f92672\"\u003e‚â§\u003c/span\u003e time_availability)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  optimize!(model)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e [value(prod[p]) \u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e p \u003cspan style=\"color:#66d9ef\"\u003ein\u003c/span\u003e products], objective_value(model), model\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eend\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"results\"\u003eResults\u003c/h2\u003e\n\u003cp\u003eRunning this code for different time availabilities, we get the following plots:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/blog/2023-06-14/results.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eThe actual values only make sense within the context of the prices, so I won\u0026rsquo;t show them here.\nWhat is interesting, though, is that you can see the nonlinearity of the profit with respect to time availability.\nIf you only worked with linear programming before, it is often surprising how \u0026ldquo;simply\u0026rdquo; forcing the variables to be integer lead to such cases.\u003c/p\u003e\n\u003chr\u003e\n","description":null,"image":"/blog/2023-06-14/banner.jpg","permalink":"/blog/2023-06-14-selling-art-on-the-beach/","title":"Selling art on the beach"},{"content":"\u003cp\u003eI have a new video out where I talk about solving an RPG puzzle using Julia:\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://youtu.be/L4QgBuiMmUk\"\u003e\u003cimg src=\"/blog/2023-04-27/banner.jpg\" alt=\"Banner for youtube video\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eYou can check the pluto notebook html \u003ca href=\"/blog/2023-04-27/rpg-puzzle.html\"\u003ehere\u003c/a\u003e or download the notebook \u003ca href=\"/blog/2023-04-27/rpg-puzzle.jl\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eHere\u0026rsquo;s a more fantastic setup than I used in the video:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eYou walk into a large room with a 3 pointed star painted on the floor.\nThree triangular stones sit on top of the points of the star.\nOne of the points of the triangle complement the point of the star, indicating that there is a correct orientation for it.\nAround the star, 3 circular stone platforms stand with a circular crank in the middle.\nThe crank can be turned clockwise or counter-clockwise, but it only stops at three positions: the initial position, a third of a full rotation, or two thirds of a full rotation.\nMoving the cranks make the triangles move as well (I will not explain here how, see the gif below or the video).\nYou have to find the configuration that aligns the triangle with the star.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eHere\u0026rsquo;s an animated version of the rotation:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/blog/2023-04-27/rpg-puzzle-3dial.gif\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eThe 3-dial version should be easy enough to solve without slowing down the game.\nThe idea in this game was to activate a teleport.\nTo make it more challenging, when two triangles are aligned, a rift to the astral plane appears and githyanki pirates randomly appear.\nThat being said, if your players really hate puzzle and want to brute force the solution, they might eventually try to force the triangle to turn. What to do?\u003c/p\u003e\n\u003ch2 id=\"forcing-the-triangles-directly\"\u003eForcing the triangles directly\u003c/h2\u003e\n\u003cp\u003eThe basic solutions for your players to try to turn the triangles directly are:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eSay \u0026ldquo;you can\u0026rsquo;t\u0026rdquo; (which is not great).\u003c/li\u003e\n\u003cli\u003eSay \u0026ldquo;you do it\u0026rdquo; (which invalidates the existence of the puzzle).\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eInstead, we can say \u0026ldquo;no, but\u0026rdquo;:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u0026ldquo;When you force the triangle (with a DC 20 Str, maybe?), the triangle gives move a little/an inch, but a much stronger force holds it from moving more. However, you can see that the dials also moved a little.\nWhen you release the triangle, the dials also move back\u0026rdquo;.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThe idea here is that there is a sequence of movements in the dials that will essentially move \u003cstrong\u003eonly\u003c/strong\u003e one of the triangle.\nThis goes back to linear algebra working for modular arithmetic (see video).\nThe displacement of the triangles is given by the following equation:\u003c/p\u003e\n\u003cp\u003e$$ \\begin{bmatrix} \\Delta t_1 \\\\ \\Delta t_2 \\\\ \\Delta t_3 \\end{bmatrix}\n= \\Delta t = A \\Delta d\n= A \\begin{bmatrix} \\Delta d_1 \\\\ \\Delta d_2 \\\\ \\Delta d_3 \\end{bmatrix}. $$\u003c/p\u003e\n\u003cp\u003ewhere $\\Delta t_i$ is the angular displacement of the triangle $i$, $\\Delta d_i$ is the angular displacement of the dial $i$, and $A$ is a matrix.\nAll of these values are modulo 3 for our puzzle.\nSee the video or the notebook for the actual matrix $A$.\nThe relevant conclusion here is\u003c/p\u003e\n\u003cp\u003e$$ \\Delta d = A^{-1} \\Delta t,$$\u003c/p\u003e\n\u003cp\u003ethat is, you can see how the dials should move when the triangles are moving.\nSo if you want to move the first triangle clockwise once, you can just look at the first column of $A^{-1}$.\nIf you want to move the second triangle counter-clockwise once, you can just look at the opposite of the second column.\nIf you have enough players, they could push all triangles at the same time, and just the see the solution directly.\u003c/p\u003e\n\u003cp\u003eNotice that this only works because the set of modulo 3 numbers has 3 values.\nThis means that the movements can be describe as either \u0026ldquo;stands still\u0026rdquo;, \u0026ldquo;moves clockwise\u0026rdquo;, or \u0026ldquo;moves counter-clockwise\u0026rdquo;.\nFor the harder 5-dial version, it is harder to describe in an immersive kind of way.\nAlso, it probably is not a fun in-game puzzle.\u003c/p\u003e\n\u003cp\u003eBut if \u003cstrong\u003eyou\u003c/strong\u003e want to try to solve the 5-dial version, here is the animation showing the dial movements:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/blog/2023-04-27/rpg-puzzle-5dial.gif\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eAnd if you want to see the animated solution, look here:\u003c/p\u003e\n\u003cp\u003e\n\n\u003cdetails\u003e\n\u003csummary\u003eSolution\u003c/summary\u003e\n\n\n\u003cimg src=\"/blog/2023-04-27/rpg-puzzle-solution.gif\" alt=\"\"\u003e\n\n\n\u003c/details\u003e\n\n\u003c/p\u003e\n","description":null,"image":"/blog/2023-04-27/banner.gif","permalink":"/blog/2023-04-27-solving-an-rpg-puzzle-with-julia/","title":"Solving an RPG puzzle with Julia"},{"content":"\u003cp\u003eI worked on this blog post working for the Netherlands eScience Center.\u003c/p\u003e\n\u003cp\u003eCheck the blog post \u003ca href=\"https://blog.esciencecenter.nl/10-examples-of-embedding-julia-in-c-c-66282477e62c\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n","description":null,"image":"https://miro.medium.com/max/1400/1*B3Ij2uByzm7qAj9GWbJ6Nw.webp","permalink":"/blog/2022-11-03-10-examples-of-embedding-julia-in-c-cpp/","title":"10 examples of embedding Julia in C/C++"},{"content":"\u003cp\u003eI worked on this blog post working for eScience Center.\nThis is the third and last part of a three-part series.\nCo-authored by Faruk Diblen.\u003c/p\u003e\n\u003cp\u003eCheck the blog post \u003ca href=\"https://blog.esciencecenter.nl/can-python-with-julia-be-faster-than-low-level-code-cd71a72fbcf4\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n","description":null,"image":"https://miro.medium.com/max/720/1*Bta22zk1Dv3nsfacxEyK0A.jpeg","permalink":"/blog/2022-02-11-python-and-julia-3/","title":"Can Python with Julia be faster than low-level code?"},{"content":"\u003cp\u003eI worked on this blog post working for the Netherlands eScience Center.\nThis is the second part of a three-part series.\nCo-authored by Faruk Diblen.\u003c/p\u003e\n\u003cp\u003eCheck the blog post \u003ca href=\"https://blog.esciencecenter.nl/speed-up-your-python-code-using-julia-f97a6c155630\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n","description":null,"image":"https://miro.medium.com/max/720/1*4pbcALDvrchxB1s72pD-mA.jpeg","permalink":"/blog/2022-01-26-python-and-julia-2/","title":"Speed up your Python code using Julia"},{"content":"\u003cp\u003eI worked on this blog post working for the Netherlands eScience Center.\nThis is the first part of a three-part series.\nCo-authored by Faruk Diblen.\u003c/p\u003e\n\u003cp\u003eCheck the blog post \u003ca href=\"https://blog.esciencecenter.nl/how-to-call-julia-code-from-python-8589a56a98f2\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n","description":null,"image":"https://miro.medium.com/max/720/1*rO_VWgfXj4zuFDtX28Uc1g.jpeg","permalink":"/blog/2022-01-19-python-and-julia-1/","title":"How to call Julia code from Python"},{"content":"\u003cp\u003eI worked on this blog post working for eScience Center.\nCo-authored by Faruk Diblen.\u003c/p\u003e\n\u003cp\u003eCheck the blog post \u003ca href=\"https://blog.esciencecenter.nl/cffinit-now-is-the-time-to-get-more-recognition-for-your-software-e2e6ef617f8e\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2021-12-03-cffinit/","title":"cffinit: NOW is the time to get more recognition for your software!"},{"content":"\u003cp\u003e\u003cem\u003eUpdate 2022-12-30: J√° n√£o uso mais Franklin.jl\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eH√° algum tempo o Jekyll tem me dado trabalho.\nComo n√£o sou usu√°rio de Ruby, volta e meia falta alguma coisa na minha instala√ß√£o e eu passo horas tentando corrigir o problema pra fazer meu site rodar localmente.\nPara o CiDAMO, eu considerei o Hugo, j√° que tem mais suporte e eu n√£o seria a √∫nica pessoa a cuidar do site.\nJ√° para meu site pessoal, e o site do \u003ca href=\"https://juliasmoothoptimizers.github.io\"\u003eJulia Smooth Optimizers\u003c/a\u003e, resolvi usar Franklin, j√° que eu quero mais √© usar Julia mesmo.\u003c/p\u003e\n\u003ch2 id=\"vantagens\"\u003eVantagens\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eFranklin.jl √© Julia,\u003c/strong\u003e ent√£o eu tenho mais facilidade em manter e at√© mesmo de contribuir.\nO site √© um reposit√≥rio Julia, ent√£o tudo est√° dentro do esperado.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eFranklin.jl roda Julia,\u003c/strong\u003e isto √©, d√° pra usar Julia pra gerar conte√∫do \u003cstrong\u003eE\u003c/strong\u003e pra fazer tutoriais.\nPor exemplo, a lista de posts na p√°gina principal do blog √© gerada por um script em Julia que l√™ os diret√≥rios e imprime o markdown para a p√°gina.\nPor outro lado, os tutoriais do JSO e minhas notas de C√°lculo Num√©rico rodam o c√≥digo mostrado e a sa√≠da √© mostrada, ent√£o o c√≥digo est√° sempre atualizado (ou visivelmente quebrado).\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eBuilda\u003c/em\u003e no GitHub actions.\u003c/strong\u003e Ent√£o, eu consigo hostear no pr√≥prio github. √â como GHA √© o padr√£o do Julia, √© f√°cil de achar suporte.\u003c/p\u003e\n\u003ch2 id=\"desvantagens\"\u003eDesvantagens\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003ePode ficar lento,\u003c/strong\u003e j√° que tem que compilar e rodar o c√≥digo.\nPor exemplo, as notas de c√°lculo num√©rico levam 40 minutos para rodar, porque tem dezenas de imagens e algumas anima√ß√µes.\nEu tive que fazer uma gambiarra para separar as notas do site. Falo mais sobre isso \u003ca href=\"#gambiarra\"\u003eaqui\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eN√£o √© √≥bvio como manter layouts diferentes.\u003c/strong\u003e Por exemplo, se eu quiser ter um layout de \u003ccode\u003eblog\u003c/code\u003e separado de um layout de \u003ccode\u003epage\u003c/code\u003e, n√£o parece √≥bvio como.\nEu posso colocar \u003ccode\u003eif\u003c/code\u003es pra separar conte√∫do, mas n√£o √© t√£o natural.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eAinda n√£o est√° muito est√°vel.\u003c/strong\u003e Naturalmente, j√° que √© bem novo, mas d√° pra sentir quando se precisa achar alguma coisa espec√≠fica.\u003c/p\u003e\n\u003ch2 id=\"gambiarra\"\u003eGambiarra\u003c/h2\u003e\n\u003cp\u003eMeu site tem 3 partes:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ea base, que consiste principalmente de material est√°tico que eu pretendo atualizar de vez em quando (novos pacotes, pesquisa, orienta√ß√µes, cargos, etc.);\u003c/li\u003e\n\u003cli\u003eas notas de c√°lculo num√©rico, que depois de pronto deve ver pouca atualiza√ß√£o, mas que leva 40 minutos pra compilar no GitHub Actions.\u003c/li\u003e\n\u003cli\u003eo blog, que idealmente v√™ atualiza√ß√µes frequentes, e por isso vou fingir que ter√° atualiza√ß√µes frequentes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSe eu coloco todos juntos, ent√£o qualquer mudan√ßa na base ou no blog leva 40 minutos pra compilar no GitHub Actions por causa das notas de c√°lculo num√©rico.\u003c/p\u003e\n\u003cp\u003ePor outro lado, se eu separo todas, mudan√ßas no CSS, layout, javascript, etc., n√£o s√£o atualizadas.\u003c/p\u003e\n\u003cp\u003eA solu√ß√£o, simples, √© de s√≥ manter os arquivos de CSS, layout, javascript, etc., na base e copi√°-los no build do GitHub Actions para os outros reposit√≥rios.\nAl√©m disso, adiciono essas pastas no \u003ccode\u003e.gitignore\u003c/code\u003e, e localmente √© s√≥ copi√°-las para os reposit√≥rios que precisam dela.\nAqui a adi√ß√£o ao GitHub actions:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e- \u003cspan style=\"color:#f92672\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eClone abelsiqueira.github.io\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003erun\u003c/span\u003e: |\u003cspan style=\"color:#e6db74\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e    wget https://github.com/abelsiqueira/abelsiqueira.github.io/archive/refs/heads/main.zip\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e    unzip main.zip\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e    mv abelsiqueira.github.io-main/_layout .\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e    mv abelsiqueira.github.io-main/_css .\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e    mv abelsiqueira.github.io-main/_libs .\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e    rm -rf abelsiqueira.github.io-main main.zip\u003c/span\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"conclus√£o\"\u003eConclus√£o\u003c/h2\u003e\n\u003cp\u003eNo fim das contas, sair do Jekyll para o Franklin vai ser uma experi√™ncia interessante.\nDevo fazer alguns posts atualizados usando as novas capacidades do Franklin, e a√≠ veremos se valeu a pena ou n√£o.\nTamb√©m queria ter usado a oportunidade para aprender o Hugo, mas uma coisa de cada vez.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2021-06-28-migracao-franklin/","title":"Migra√ß√£o do site para Franklin.jl"},{"content":"\u003cp\u003e\u003ca href=\"https://github.com/abelsiqueira/koch-holidays\"\u003eCode for these images\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eI hope you\u0026rsquo;re familiar with the \u003ca href=\"https://en.wikipedia.org/wiki/Koch_snowflake\"\u003eKoch curve\nfractal or snowflake\u003c/a\u003e.\nIt essentially consists taking a line segment, splitting it in three, and substituting\nthe middle part by two segments that form an equilateral triangle without the base.\nFrom one segment you obtain four. For each new segment, repeat the process.\u003c/p\u003e\n\u003cp\u003eImages:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/blog/koch/line-koch-0.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/blog/koch/line-koch-1.png\" alt=\"\"\u003e\n\u003cimg src=\"/blog/koch/line-koch-2.png\" alt=\"\"\u003e\n\u003cimg src=\"/blog/koch/line-koch-3.png\" alt=\"\"\u003e\n\u003cimg src=\"/blog/koch/line-koch-4.png\" alt=\"\"\u003e\n\u003cimg src=\"/blog/koch/line-koch-5.png\" alt=\"\"\u003e\n\u003cimg src=\"/blog/koch/line-koch-6.png\" alt=\"\"\u003e\n\u003cimg src=\"/blog/koch/line-koch-7.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eThe most important aspect of the koch line is that it looks awesome. Furthermore, you\ncan do it for any image that is a collection of segments. In particular, regular\npolygons, both outward and inward.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/blog/koch/polygon-2.png\" alt=\"\"\u003e\n\u003cimg src=\"/blog/koch/polygon-reverse-2.png\" alt=\"\"\u003e\n\u003cimg src=\"/blog/koch/polygon-3.png\" alt=\"\"\u003e\n\u003cimg src=\"/blog/koch/polygon-reverse-3.png\" alt=\"\"\u003e\n\u003cimg src=\"/blog/koch/polygon-4.png\" alt=\"\"\u003e\n\u003cimg src=\"/blog/koch/polygon-reverse-4.png\" alt=\"\"\u003e\n\u003cimg src=\"/blog/koch/polygon-5.png\" alt=\"\"\u003e\n\u003cimg src=\"/blog/koch/polygon-reverse-5.png\" alt=\"\"\u003e\n\u003cimg src=\"/blog/koch/polygon-6.png\" alt=\"\"\u003e\n\u003cimg src=\"/blog/koch/polygon-reverse-6.png\" alt=\"\"\u003e\n\u003cimg src=\"/blog/koch/polygon-7.png\" alt=\"\"\u003e\n\u003cimg src=\"/blog/koch/polygon-reverse-7.png\" alt=\"\"\u003e\n\u003cimg src=\"/blog/koch/polygon-8.png\" alt=\"\"\u003e\n\u003cimg src=\"/blog/koch/polygon-reverse-8.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eAnother way to define the four new segments is this: Given the endpoints of the segment\n$P_1$ and $P_2$, we define $\\vec{v} = \\vec{P_1P_2}$. The five points that define the\nfour new segments, in order, are $P_1$, $P_1 + \\frac{1}{3}\\vec{v}$,\n$P_1 + \\frac{1}{2}\\vec{v} + \\alpha R\\vec{v}$, $P1 + \\frac{2}{3}\\vec{v}$ and $P_2$,\nwhere $\\alpha = \\sqrt{3}/6$.\nA simple thing one can do is change the value of $\\alpha$ to obtain different images:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/blog/koch/star.png\" alt=\"\"\u003e\nUsing a diamond with $\\alpha = 1.25$.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/blog/koch/reverse-star.png\" alt=\"\"\u003e\nUsing a square with $\\alpha = 1.2$.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/blog/koch/stargon-3.png\" alt=\"\"\u003e\n\u003cimg src=\"/blog/koch/stargon-4.png\" alt=\"\"\u003e\n\u003cimg src=\"/blog/koch/stargon-5.png\" alt=\"\"\u003e\nUsing polygons with $N$ equals to 3, 4 and 5 sides, and $\\alpha = 3\\sqrt{N}/5$.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/blog/koch/tri-3.png\" alt=\"\"\u003e\n\u003cimg src=\"/blog/koch/tri-4.png\" alt=\"\"\u003e\n\u003cimg src=\"/blog/koch/tri-5.png\" alt=\"\"\u003e\nUsing a line segment from the center to the vertex and back and to next vertex, etc.,\nwith $\\alpha = 1$.\u003c/p\u003e\n\u003cp\u003eAnd to close off, here\u0026rsquo;s a traditional triangle, repeated, with alternating colors.\n\u003cimg src=\"/blog/koch/koch.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eHere\u0026rsquo;s a larger scale version:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/blog/koch/koch-large.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eHappy holidays!\n\u003cimg src=\"/blog/koch/koch-julia.png\" alt=\"\"\u003e\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2018-12-12-koch-snowflakes-for-the-holidays/","title":"Koch snowflakes for the holidays"},{"content":"\u003cp\u003eThis is a quick post on package development in Julia 1.0. Let me know if you\u0026rsquo;re\ninterested in more, and what.\u003c/p\u003e\n\u003cp\u003eSuppose you\u0026rsquo;re developing a package - say, \u003ccode\u003eMyPackage.jl\u003c/code\u003e - whether from scratch, or\nupdating from Julia 0.6.\nFirst, and foremost, you need to be able to run and test it.\nOn Julia 1.0, this is one possible way, while using the REPL.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eChoose a folder to develop it and create the necessary files\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eYou\u0026rsquo;ll need\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e- MyPackage.jl/\n  - src/\n    - MyPackage.jl\n  - test/\n    - runtests.jl\n  - README.md (eventually)\n  - LICENSE.md (eventually)\n  - .travis.yml (eventually)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe file \u003ccode\u003esrc/MyPackage.jl\u003c/code\u003e is the file included by Julia when you enter\n\u003ccode\u003eUsing MyPackage\u003c/code\u003e. \u003ccode\u003etest/runtests.jl\u003c/code\u003e is what is run to test your package. It is\nrequired if you intend to publish your package, but most important, you need to test\nyour package before trying to publish it. README gives information about your package,\nLICENSE gives information about its license, and .travis.yml defines the online testing\nwith continuous integration by Travis. These are usual, but not require when you\u0026rsquo;re\nstarting to develop your package.\u003c/p\u003e\n\u003cp\u003eFor instance, consider the following files\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# src/MyPackage.jl\nmodule MyPackage\n\nexport pi_approximation\n\nfunction pi_approximation()\n  return 22.0 / 7.0\nend\n\nend # module\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# test/runtests.jl\nusing MyPackage, Test\n\nfunction tests()\n  @testset \u0026#34;Subset of tests\u0026#34; begin\n    @test pi_approximation() ‚âà pi atol=1e-2\n  end\nend\n\ntests()\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003eOpen the REPL and add your package under the development version\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eI assume Linux, but this will work with minor modifications on OSX and Windows.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eOn the terminal, enter julia to open the REPL\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ejulia\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eEnter \u003ccode\u003epkg\u003c/code\u003e mode by pressing \u003ccode\u003e]\u003c/code\u003e.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e(v1.0) pkg\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eInform \u003ccode\u003epkg\u003c/code\u003e that your package folder exists and is under development with \u003ccode\u003edev\u003c/code\u003e.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e(v1.0) pkg\u0026gt; dev SOME_PATH/MyPackage.jl\n\n[ Info: Assigning UUID XXXXXX to MyPackage\n Resolving package versions...\n  Updating `~/.julia/environments/v1.0/Project.toml`\n  [XXX] + MyPackage v0.0.0 [`SOME_PATH/MyPackage.jl`]\n  Updating `~/.julia/environments/v1.0/Manifest.toml`\n  [XXX] + MyPackage v0.0.0 [`SOME_PATH/MyPackage.jl`]\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eCheck that you can see your package\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e(v1.0) pkg\u0026gt; status\n    Status `~/.julia/environments/v1.0/Project.toml`\n  ...\n  [XXX] MyPackage v0.0.0 [`SOME_PATH/MyPackage.jl`]\n  ...\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eCheck that everything passes according to your (evil) plan.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e(v1.0) pkg\u0026gt; test MyPackage\n   Testing MyPackage\n Resolving package versions...\n    Status `/tmp/tmpO7CsSr/Manifest.toml`\n  [XXX] MyPackage v0.0.0 [`SOME_PATH/MyPackage.jl`]\n  ...\nTest Summary:   | Pass  Total\nSubset of tests |    1      1\n   Testing MyPackage tests passed\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWhen you\u0026rsquo;re done with your package, you can \u003ccode\u003erm MyPackage\u003c/code\u003e to remove your package from\nconsideration without deleting the code.\u003c/p\u003e\n\u003cp\u003eIf your package was already released, then it\u0026rsquo;ll have a different version number. Other\ndifferences may apply.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2018-12-05-package-development-on-julia-10/","title":"Package Development in Julia 1.0 using the REPL"},{"content":"\u003cp\u003eI just watched \u003ca href=\"https://www.youtube.com/watch?v=U33dsEcKgeQ\"\u003eThe Dollar Game -\nNumberphile\u003c/a\u003e, in which a game involving graphs is presented.\nI recommend you watch the video for complete information.\u003c/p\u003e\n\u003cp\u003eThe game involves a graph with integer values on its nodes, positive and\nnegative. For instance, the following graph:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/blog/2018-09-04/example.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eEach \u003cstrong\u003enode\u003c/strong\u003e corresponds to a person, the \u003cstrong\u003enode value\u003c/strong\u003e is the amount of\nmoney that person has, the \u003cstrong\u003eedges\u003c/strong\u003e are the people that person can give or\ntake money from.\nThe objective of the game is to have everyone have a non-negative amount of money.\nIn each \u003cstrong\u003emove\u003c/strong\u003e of the game, one person decides to give or take money,\n\u003cstrong\u003ehowever\u003c/strong\u003e, that person either takes 1 dollar from each of their connections,\nor gives 1 dollar to each one.\u003c/p\u003e\n\u003cp\u003eOn Numberphile, there are two questions: (i) does the problem has a solution?\n(ii) what\u0026rsquo;s the least amount of moves to find it?\nI\u0026rsquo;ve decided to implement this problem using optimization, since it looked\nalmost straightfoward. The optimization model was indeed very simple, and it\ntook more time drawing graphs than modelling. Still fun though.\u003c/p\u003e\n\u003ch2 id=\"the-model\"\u003eThe model\u003c/h2\u003e\n\u003cp\u003eGiven the undirected graph $G = (V, E)$, and values $w_i, i \\in V$, our\nmodel is based on the following observations:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe order of moves is irrelevant;\u003c/li\u003e\n\u003cli\u003eWhether the move is a \u003cem\u003egive\u003c/em\u003e or a \u003cem\u003etake\u003c/em\u003e, is just a question of \u003cstrong\u003esign\u003c/strong\u003e;\u003c/li\u003e\n\u003cli\u003eThe value of a node after the moves can be computed by accounting for the\nmoves done by the done and by its neighbours.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eHence, we can model it using two non-negative integer variables $g_i$ and\n$t_i$ storing the number of gives and takes of node $i$. Notice that we\ncould use $y_i = g_i - t_i$, but this is more descriptive.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eObjective: minimize the number of moves\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e$$\\min \\sum_i (g_i + t_i)$$\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eConstraint: after the moves, the values of the nodes should be non-negative\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e$$\nw_i + \\sum_i (t_i - g_i) |N_i| + \\sum_{j \\in N_i} (g_j - t_j) \\geq 0,\n\\qquad \\forall i \\in V.\n$$\u003c/p\u003e\n\u003cp\u003eAs it turns out, it\u0026rsquo;s a very simple model. The implementation is also very\nsimple. We\u0026rsquo;re using \u003ca href=\"https://julialang.org\"\u003eJulia Language\u003c/a\u003e with the\n\u003ca href=\"https://juliaopt.org\"\u003eJuMP\u003c/a\u003e modelling language, and the\n\u003ca href=\"https://juliagraphs.github.io/\"\u003eLightGraphs package from JuliaGraphs\u003c/a\u003e.\nHere\u0026rsquo;s the code:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003efunction dollar_game(g, W)\n   nv = length(vertices(g))\n   model = Model(solver = CbcSolver())\n   @variable(model, give[1:nv] \u0026gt;= 0, Int)\n   @variable(model, take[1:nv] \u0026gt;= 0, Int)\n   @objective(model, Min, sum(give[i] + take[i] for i = 1:nv))\n   @expression(model, x[i=1:nv], W[i] +\n               (take[i] - give[i]) * length(neighbors(g, i)) +\n               sum(give[j] - take[j] for j = neighbors(g, i)))\n   @constraint(model, x .\u0026gt;= 0)\n   status = solve(model)\n   println(\u0026#34;status = $status\u0026#34;)\n   if status != :Optimal\n      return zeros(nv), W\n   end\n\n   give = Int.(getvalue(give))\n   take = Int.(getvalue(take))\n   sol = Int.(getvalue(x))\n   println(\u0026#34;give = $give\u0026#34;)\n   println(\u0026#34;take = $take\u0026#34;)\n   println(\u0026#34;sol = $sol\u0026#34;)\n   return give - take, sol\nend\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe code should be pretty self-explanatory, but ping me on twitter if you need clarification.\u003c/p\u003e\n\u003cp\u003eUsing the results and \u003cdel\u003e\u003cem\u003emad plotting skillz\u003c/em\u003e\u003c/del\u003e the packages Plots and GR, we\nobtain a solution for the problem above. The moves are illustrated below, where\nblue means giving, and red means taking.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/blog/2018-09-04/example-000.png\" alt=\"\"\u003e\n\u003cimg src=\"/blog/2018-09-04/example-001.png\" alt=\"\"\u003e\n\u003cimg src=\"/blog/2018-09-04/example-002.png\" alt=\"\"\u003e\n\u003cimg src=\"/blog/2018-09-04/example-003.png\" alt=\"\"\u003e\n\u003cimg src=\"/blog/2018-09-04/example-004.png\" alt=\"\"\u003e\n\u003cimg src=\"/blog/2018-09-04/example-005.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003eThe full code is available at \u003ca href=\"https://github.com/abelsiqueira/DollarGame.jl\"\u003eGitHub\u003c/a\u003e.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2018-09-04-the-dollar-game-from-numberphile/","title":"Optimizing the Dollar Game from Numberphile"},{"content":"\u003cp\u003eLast week I had the pleasure of being invited to the \u003ca href=\"http://www.juliaopt.org/meetings/bordeaux2018/\"\u003eSecond annual JuMP-dev\nworkshop\u003c/a\u003e, which happened in June 27-29,\n2018 at Bordeaux, France.\nI\u0026rsquo;ve presented the packages from the \u003ca href=\"https://JuliaSmoothOptimizers.github.io\"\u003eJulia Smooth\nOptimizers\u003c/a\u003e organization, and had a very good\ntime meeting with the JuMP developers.\u003c/p\u003e\n\u003cp\u003eFor those still unaware, \u003ca href=\"https://github.com/JuliaOpt/JuMP.jl\"\u003eJuMP\u003c/a\u003e is a modelling\nlanguage for Mathematical Programming written in Julia. It provides access to a few\ndifferent solvers for many kinds of problems, and it works inside of Julia, so one can\nenjoy the advantages of having a robust language if there is a need for advanced usage.\u003c/p\u003e\n\u003cp\u003eI\u0026rsquo;ve used Julia in classes since 2016 for teaching numerical calculus, and the packages\nof Julia Smooth Optimizers for nonlinear optimization this last semester.\nI\u0026rsquo;ve taught a quick tutorial on JuMP in that class to solve a few nonlinear problems,\nand discuss the starting point dependency of nonlinear solvers.\nThe notebook can be found \u003ca href=\"https://abelsiqueira.github.io/cm106-2018s1/\"\u003ehere\u003c/a\u003e in\nportuguese.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2018-07-04-my-experience-in-the-jump-dev-annual-workshop/","title":"My experience in the JuMP-dev annual workshop"},{"content":"\u003cp\u003eThe comparison of algorithms is an active area of work.\nWhen we start learning algorithms, or more advanced programming,\nwe learn of different ways of doing the same complex task.\nThe most usual first example is sorting, which introduces a series of\ndifferent ways to sort a single array, such as selection sort, insertion sort,\nquick sort, merge sort, etc.\nWhen comparing these algorithms, we take into account a few things:\nhow fast it is, how much memory it needs, what are the best/worst/average-case\ncomplexities, and so on.\u003c/p\u003e\n\u003cp\u003eHowever, in some areas, specially applied mathematics, we have an added\ncomplication: does the algorithm work? (Or does it work with a given budget?)\nThat happens because some types of problems don\u0026rsquo;t have an algorithm that can\nsolve every problem. In particular, consider the problem of finding the minimum\nvalue of a function $f:\\mathbb{R}^n\\rightarrow\\mathbb{R}$ on a set\n$\\Omega \\subset \\mathbb{R}^n$. There are no algorithms that solve this problem\nfor any given $f$ and $\\Omega$, and even for specific, easier, cases, such as\nwhen $f$ is twice-continuously differentiable and $\\Omega = \\mathbb{R}^n$, it could\nhappen that the algorithm steps would take more time than allowed (or some other\nbudget contraint).\nIn these cases, we need another type of comparison between algorithms that take into\naccount the number of problems that are solved.\u003c/p\u003e\n\u003ch3 id=\"performance-profile\"\u003ePerformance Profile\u003c/h3\u003e\n\u003cp\u003eDescribed by Dolan and Mor√© [1] \u0026ndash;\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e(Edit: 08/08/2022) Professor Andr√© L. Tits brought to my attention the 1996 paper by Tits and Yang [3] that was already doing a profile comparison using a cumulative distribution of relative time.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u0026ndash; the performance profile takes into account the\nnumber of problems solved as well as the cost it took to solve it. It scaled the\ncost of solving the problem according to the best solver for that problem.\nGiven a set of problems $P$ and a set of algorithms $S$, we define\n$c _ {s,p}$ as the cost of solving problem $p \\in P$ by algorithm $s \\in S$.\nIf algorithm can\u0026rsquo;t solve the problem $p$, we define\n$c _ {s,p} = +\\infty$. We assume that at least one algorithm solves problem $p$.\nThe best algorithm for a given problem is the one that solves it with the least\ncost, i.e., we define\u003c/p\u003e\n\u003cp\u003e$$ c _ {\\min,p} = \\min _ {s\\in S} c _ {s,p}. $$\u003c/p\u003e\n\u003cp\u003eNow we define the relative cost of the algorithm on a problem:\u003c/p\u003e\n\u003cp\u003e$$ r _ {s,p} = \\frac{ c _ {s,p} }{ c _ {\\min,p} }. $$\u003c/p\u003e\n\u003cp\u003eNotice that $r _ {s,p} \\geq 1$, with $r _ {s,p} = 1$ meaning that algorithm\n$s$ is (one of) the best for problem $p$.\nFinally, the performance function of algorithm $s$ is given by\u003c/p\u003e\n\u003cp\u003e$$ P*s(t) = \\frac{ |\\{p \\in P \\mid\\ r * {s,p} \\leq t\\}| }{ |P| }. $$\u003c/p\u003e\n\u003cp\u003eSee that $P_s(1)$ is the number of problems such that $r _ {s,p} = 1$, that is\nthe number of problems for which algorithm $s$ is one of the best.\nFurthermore, $P_s(r _ {\\max})$ is the number of problems solved by algorithm\n$s$, where\u003c/p\u003e\n\u003cp\u003e$$r _ {\\max} = \\max _ {s \\in S,\\ p \\in P} r _ {s,p}. $$\u003c/p\u003e\n\u003cp\u003eThe value $P_s(1)$ is called the efficiency of algorithm $s$ and $P_s(r _\n{\\max})$ is the robustness.\u003c/p\u003e\n\u003cp\u003eThe following image shows an example of performance profile:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/blog/perprof-example.png\" alt=\"\"\u003e.\u003c/p\u003e\n\u003ch3 id=\"example\"\u003eExample\u003c/h3\u003e\n\u003cp\u003eI\u0026rsquo;m gonna create a simple example. Suppose there are 30 problems and 3 solvers\nand the the following matrix stores the values of $c _ {s,p}$:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ec = rand(30, 3)\nc[rand(1:90, 10)] = Inf # To simulate failure\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe following code computes the minimum, the ratios and the performance\nfunction plots:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ecmin = minimum(c, 2)\nR = c ./ cmin\nt = sort(unique(R))\nif t[end] == Inf\n  pop!(t)\nend\nplot(xaxis=:log)\nfor i = 1:size(c, 2)\n  plot!(t, [sum(R[:,i] .\u0026lt;= ti)/size(c,1) for ti in t], label=\u0026#34;Alg $i\u0026#34;, t=:steppre, lw=2)\nend\nylims!(0, 1)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe resulting image is\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/blog/perprof-julia.png\" alt=\"\"\u003e.\u003c/p\u003e\n\u003ch3 id=\"implementations\"\u003eImplementations\u003c/h3\u003e\n\u003cp\u003eThe traditional implementation of the performance profile was in MatLab, but I\ncan\u0026rsquo;t find it now. Let me know if you have a link to it, so I\u0026rsquo;ll add here.\u003c/p\u003e\n\u003cp\u003eAnother implementation was made by me, Raniere Gaia, and Luiz-Rafael Santos [2],\nin Python, but works as an external program too.\nWe haven\u0026rsquo;t updated it in a while. Contact me if you\u0026rsquo;re interested in helping.\nHere\u0026rsquo;s the \u003ca href=\"https://github.com/ufpr-opt/perprof-py\"\u003elink\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eLast, but not least, there is an implementation in Julia made by Dominique Orban,\nwhich is part of the\n\u003ca href=\"https://github.com/JuliaSmoothOptimizers\"\u003eJuliaSmoothOptimizers\u003c/a\u003e organization.\nThe direct link is\n\u003ca href=\"https://github.com/JuliaSmoothOptimizers/BenchmarkProfiles.jl\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\u003ch3 id=\"references\"\u003eReferences\u003c/h3\u003e\n\u003cp\u003e[1] Elizabeth D. Dolan and Jorge J. Mor√©. Benchmarking optimization software\nwith performance profiles.\n\u003cem\u003eMathematical Programming\u003c/em\u003e, 91(2):201-213, 2002.\nDOI: 10.1007/s101070100263.\u003c/p\u003e\n\u003cp\u003e[2] A. S. Siqueira, R. G. Costa da Silva, and L.-R. Santos.\nPerprof-py: A Python Package for Performance Profile of Mathematical\nOptimization Software.\n\u003cem\u003eJournal of Open Research Software\u003c/em\u003e, 4(1), p.e12, 2016.\nDOI: 10.5334/jors.81.\u003c/p\u003e\n\u003cp\u003e[3] A.L. Tits and Y. Yang.\nGlobally convergent algorithms for robust pole placement by state feedback.\n\u003cem\u003eIEEE Transactions on Automatic Control\u003c/em\u003e, 41(10):1432-1452, 1996.\nDOI: 10.1109/9.539425.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2017-05-09-introduction-to-performance-profile/","title":"Introduction to Performance Profile"},{"content":"\u003cp\u003e\u003cem\u003eDisclaimer:\u003c/em\u003e What I did here might work on Windows or OSX, but I give no\nguarantee.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eRequest by Cl√≥vis Gonzaga.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eFirst, create an account \u003ca href=\"http://www.gurobi.com/\"\u003ehere\u003c/a\u003e and login.\u003c/p\u003e\n\u003cp\u003eSecondly, download the appropriate Gurobi version clicking on \u003ca href=\"http://www.gurobi.com/downloads/user/gurobi-optimizer\"\u003e\u003cem\u003eGurobi\nOptimizer\u003c/em\u003e\u003c/a\u003e.\nIn my case, it is Linux 64 bits. Where to download this is optional, but you\nhave to remember, as we\u0026rsquo;ll use later. I use a folder \u003ccode\u003epackages\u003c/code\u003e on my home\nfolder.\u003c/p\u003e\n\u003cp\u003eThird, unpack the file. For linux, you might have a \u003cem\u003efile-roller\u003c/em\u003e that allows\nclicking and unpacking trivially, but I\u0026rsquo;ll use the command line.\nOpen a terminal and navigate to the folder where you downloaded the file.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003etar -zxf gurobi7.0.2_linux64.tar.gz\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis creates folder \u003ccode\u003egurobi702\u003c/code\u003e. Inside is folder \u003ccode\u003elinux64\u003c/code\u003e.\nInside are many folders, one being \u003ccode\u003edocs\u003c/code\u003e which include the quick start guide\nyou might want to read (or not).\u003c/p\u003e\n\u003cp\u003eFourth, your system needs to see this installation. On \u003ccode\u003ebash\u003c/code\u003e (the usual\nterminal on Ubuntu), you have to open file \u003ccode\u003e.bashrc\u003c/code\u003e on your home folder, to\ninput some variables.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003egedit $HOME/.bashrc\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003einput the following at the end of the file:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eexport GUROBI_HOME=\u0026#34;/FULL/PATH/gurobi702/linux64\u0026#34;\nexport PATH=\u0026#34;${PATH}:${GUROBI_HOME}/bin\u0026#34;\nexport LD_LIBRARY_PATH=\u0026#34;${LD_LIBRARY_PATH}:${GUROBI_HOME}/lib\u0026#34;\nexport GRB_LICENSE_FILE=\u0026#34;$HOME/gurobi.lic\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNotice the \u003ccode\u003e/FULL/PATH\u003c/code\u003e part. This is where you downloaded the package, but it\nhas to be the full path there. You can use \u003ccode\u003e$HOME\u003c/code\u003e to reference your home\nfolder. For instance, your \u003ccode\u003eDesktop\u003c/code\u003e is in \u003ccode\u003e$HOME/Desktop\u003c/code\u003e. My packages folder\nis \u003ccode\u003e$HOME/packages\u003c/code\u003e.\nAlso notice the \u003ccode\u003eGRB_LICENSE_FILE\u003c/code\u003e variable. If you intend to put your license\nsomewhere else, you\u0026rsquo;ll need to change that part.\u003c/p\u003e\n\u003cp\u003eAfter that is done you need to either (a) close and reopen the terminal or (b)\ninput \u003ccode\u003esource $HOME/.bashrc\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTo know that it\u0026rsquo;s working\u003c/strong\u003e enter \u003ccode\u003egrbgetkey\u003c/code\u003e on the terminal. If it\u0026rsquo;s working,\na message like\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eGurobi license key client (version 7.0.2)\nCopyright (c) 2017, Gurobi Optimization, Inc.\n\nEnter the Key Code for the license you are activating\n(format is xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx):\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003ewill appear. Press \u0026ldquo;CTRL+C\u0026rdquo; or close the terminal, because you need to get the\nlicense.\u003c/p\u003e\n\u003ch2 id=\"getting-the-license\"\u003eGetting the LICENSE\u003c/h2\u003e\n\u003cp\u003eIf you already applied for a license before installing Gurobi, you can go to\n\u003ca href=\"https://user.gurobi.com/download/licenses/current\"\u003ethis page\u003c/a\u003e to see your\navailable licenses. Otherwise, you need to (a) buy a license; (b) apply for\nan academic license or (c) ask for a trial license.\nI\u0026rsquo;m gonna focus on the academic license.\u003c/p\u003e\n\u003cp\u003eGet your academic license clicking on \u003ca href=\"http://www.gurobi.com/downloads/user/licenses/free-academic\"\u003e\u0026ldquo;Academic\nLicenses\u0026rdquo;\u003c/a\u003e.\nAccept the conditions and agreements and click \u0026ldquo;Request License\u0026rdquo;.\nNotice that you need to fulfill some requirement to ask for an academic\nlicense, like being a student or professor.\u003c/p\u003e\n\u003cp\u003eAfter requesting your license, you will get to a page showing your license\ninformation and a line saying\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003egrbgetkey xxxxxxxxxxxxxx\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eCopy all that line and paste on your terminal.\u003c/p\u003e\n\u003cp\u003eThe software will connect to Gurobi and check that it\u0026rsquo;s a valid serial number,\nand then will download a file \u003ccode\u003egurobi.lic\u003c/code\u003e. (Press ENTER or choose a different\nfolder). If you choose a different folder, remember to change \u003ccode\u003e.bashrc\u003c/code\u003e\naccordingly.\u003c/p\u003e\n\u003cp\u003eTo check that it\u0026rsquo;s working, enter\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003egurobi.sh\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eon a terminal. It will a \u0026ldquo;Gurobi Interactive Shell\u0026rdquo; message and a prompt\n\u0026ldquo;gurobi\u0026gt; \u0026ldquo;. It if gives any error, check the Quick User Guide.\u003c/p\u003e\n\u003ch2 id=\"gurobi-with-jump-in-julia\"\u003eGurobi with JuMP in Julia\u003c/h2\u003e\n\u003cp\u003eFor the advanced students, if you know the \u003ca href=\"https://julialang.org\"\u003eJulia\nLanguage\u003c/a\u003e, and the \u003ca href=\"https://github.com/JuliaOpt/JuMP.jl\"\u003eJuMP Modelling\nLanguage\u003c/a\u003e, you should be able to install\nGurobi with the julia command \u003ccode\u003ePkg.add(\u0026quot;Gurobi\u0026quot;)\u003c/code\u003e now. Make sure you\u0026rsquo;re in a\nterminal with all variables set.\u003c/p\u003e\n\u003cp\u003eThe following examples solves a simple problem with JuMP and Gurobi:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eusing JuMP, Gurobi\n\nm = Model(solver=GurobiSolver(Presolve=0)) # Presolve=0 otherwise it will be trivial\n@variable(m, x[1:2] \u0026gt;= 0, Int)\n@objective(m, Max, x[1] + 2*x[2])\n@constraint(m, x[1] + 10*x[2] \u0026lt;= 30)\n@constraint(m, 10*x[1] + x[2] \u0026lt;= 29)\nsolve(m)\ngetvalue(x)\n\u003c/code\u003e\u003c/pre\u003e","description":null,"image":null,"permalink":"/blog/2017-03-13-installing-gurobi-7-on-linux/","title":"Installing Gurobi 7 on Linux"},{"content":"\u003cp\u003eHoje ministrarei mais um minicurso de Julia na UFPR.\nDesta vez ser√° no IX Simp√≥sio de An√°lise Num√©rica e Otimiza√ß√£o da UFPR.\u003c/p\u003e\n\u003cp\u003ePor enquanto, deixo esta p√°gina apenas com o link para o notebook que utilizarei:\n\u003ca href=\"https://github.com/abelsiqueira/julia-simposio2017\"\u003eaqui\u003c/a\u003e.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2017-02-20-minicurso-de-julia-no-ix-simposio-de-analise-numerica-e-otimizacao-da-ufpr/","title":"Minicurso de Julia no IX Simp√≥sio de An√°lise Num√©rica e Otimiza√ß√£o da UFPR"},{"content":"\u003cp\u003eThis is a continuation of \u003ca href=\"https://abelsiqueira.github.io%7B%7Blocal_prefix%7D%7Dnlpmodelsjl-cutestjl-and-other-nonlinear-optimization-packages-on-julia/\"\u003ethis\npost\u003c/a\u003e.\nAnd again, you can follow the commands of this post in the\n\u003ca href=\"https://asciinema.org/a/103654\"\u003easciinema\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eIf you followed along last post, you should know the basics of our\nNLPModels API, including CUTEst access.\u003c/p\u003e\n\u003cp\u003eOne thing I didn\u0026rsquo;t explore, though, was constrained problems.\nIt\u0026rsquo;d complicate too much.\u003c/p\u003e\n\u003cp\u003eHowever, now that we know how to handle the basics, we can move to the\nadvanced.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eNonlinear Programming format\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eThe NLPModels internal structure is based on the CUTEst way of storing a\nproblem.\nWe use the following form for the optimization problem:\u003c/p\u003e\n\u003cp\u003e$$\n\\begin{align}\n\\min \\quad \u0026amp; f(x) \\\ns.t. \\quad \u0026amp; c_L \\leq c(x) \\leq c_U \\\n\u0026amp; \\ell \\leq x \\leq u\\end{align}\n$$\u003c/p\u003e\n\u003cp\u003eGiven an \u003ccode\u003eAbstractNLPModel\u003c/code\u003e named \u003ccode\u003enlp\u003c/code\u003e, the values for $\\ell$, $u$, $c_L$ and\n$c_U$ are stored in an \u003ccode\u003eNLPModelMeta\u003c/code\u003e structure, and can be accessed by\nthrough \u003ccode\u003enlp.meta\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eLet\u0026rsquo;s look back at the simple Rosenbrock problem of before.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eusing NLPModels\n\nf(x) = (x[1] - 1)^2 + 100*(x[2] - x[1]^2)^2\nx0 = [-1.2; 1.0]\nnlp = ADNLPModel(f, x0)\nprint(nlp.meta)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYou should be seeing this:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eMinimization problem Generic\nnvar = 2, ncon = 0 (0 linear)\nlvar = -Inf  -Inf\nuvar = Inf  Inf\nlcon = ‚àÖ\nucon = ‚àÖ\nx0 = -1.2  1.0\ny0 = ‚àÖ\nnnzh = 4\nnnzj = 0\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAlthough the meaning of these values is reasonably straigthforward, I\u0026rsquo;ll explain a bit.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003envar\u003c/code\u003e is the number of variables in a problem;\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003encon\u003c/code\u003e is the number of constraints, without counting the bounds;\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003elvar\u003c/code\u003e is the vector $\\ell$, the lower bounds on the variables;\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003euvar\u003c/code\u003e is the vector $u$, the upper bounds on the variables;\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003elcon\u003c/code\u003e is the vector $c_L$, the lower bounds of the constraints function;\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eucon\u003c/code\u003e is the vector $c_U$, the upper bounds of the constraints function;\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ex0\u003c/code\u003e is the initial approximation to the solution, aka the starting point;\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ey0\u003c/code\u003e is the initial approximation to the Lagrange multipliers;\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ennzh\u003c/code\u003e is the number of nonzeros on the Hessian¬π;\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ennzj\u003c/code\u003e is the number of nonzeros on the Jacobian¬π;\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cem\u003e¬π \u003ccode\u003ennzh\u003c/code\u003e and \u003ccode\u003ennzj\u003c/code\u003e are not consistent between models, because some consider the dense matrix, and for the Hessian, some consider only the triangle. However, if you\u0026rsquo;re possibly considering using \u003ccode\u003ennzh\u003c/code\u003e, you\u0026rsquo;re probably looking for \u003ccode\u003ehess_coord\u003c/code\u003e too, and \u003ccode\u003ehess_coord\u003c/code\u003e returns with the correct size.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThese values can be accessed directly as fields in \u003ccode\u003emeta\u003c/code\u003e with the same name above.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003enlp.meta.ncon\nnlp.meta.x0\nnlp.meta.lvar\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003eBounds\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eNow, let\u0026rsquo;s create a bounded problem.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003enlp = ADNLPModel(f, x0, lvar=zeros(2), uvar=[0.4; 0.6])\nprint(nlp.meta)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNow the bounds are set, and you can access them with\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003enlp.meta.lvar\nnlp.meta.uvar\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThat\u0026rsquo;s pretty much it. For \u003ccode\u003eSimpleNLPModel\u003c/code\u003e, it\u0026rsquo;s the same thing.\n\u003ccode\u003eMathProgNLPModel\u003c/code\u003e inherits the bounds, as expected:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eusing JuMP\n\njmp = Model()\nu = [0.4; 0.6]\n@variable(jmp, 0 \u0026lt;= x[i=1:2] \u0026lt;= u[i], start=(x0[i]))\n@NLobjective(jmp, Min, (x[1] - 1)^2 + 100*(x[2] - x[1]^2)^2)\nmpbnlp = MathProgNLPModel(jmp)\nprint(mpbnlp.meta)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eFor CUTEst, there is no differentiation on creating a problem with bounds or\nnot, since it uses the internal description of the problem.\nFor instance, \u003ccode\u003eHS4\u003c/code\u003e is a bounded problem.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eusing CUTEst\n\nclp = CUTEstModel(\u0026#34;HS4\u0026#34;)\nprint(clp.meta)\nfinalize(clp)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNotice that it can happen that one or more of the variables is unlimited\n(lower, upper or both). This is represented by the value \u003ccode\u003eInf\u003c/code\u003e in Julia.\nThis should be expected since the unconstrained problem already used these\n\u003ccode\u003eInf\u003c/code\u003e values.\u003c/p\u003e\n\u003cp\u003eOn the other hand, it could happen that $\\ell_i = u_i$, in which case the\nvariable is fixed, or that $\\ell_i \u0026gt; u_i$, in which case the variable (and the\nproblem) is infeasible.\nNote that \u003ccode\u003eNLPModels\u003c/code\u003e only creates the model, it doesn\u0026rsquo;t check whether it is\nfeasible or not, even in this simple example. That said, CUTEst shouldn\u0026rsquo;t have\nany infeasible variable.\u003c/p\u003e\n\u003cp\u003eFurthermore, all these types of bounds can be accessed from \u003ccode\u003emeta\u003c/code\u003e. Notice that\nthere are 6 possible situations:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFree variables, stored in \u003ccode\u003emeta.ifree\u003c/code\u003e;\u003c/li\u003e\n\u003cli\u003eFixed variables, stored in \u003ccode\u003emeta.ifix\u003c/code\u003e;\u003c/li\u003e\n\u003cli\u003eVariables bounded below, stored in \u003ccode\u003emeta.ilow\u003c/code\u003e;\u003c/li\u003e\n\u003cli\u003eVariables bounded above, stored in \u003ccode\u003emeta.iupp\u003c/code\u003e;\u003c/li\u003e\n\u003cli\u003eVariables bounded above and below, stored in \u003ccode\u003emeta.irng\u003c/code\u003e;\u003c/li\u003e\n\u003cli\u003eInfeasible variables, stored in \u003ccode\u003emeta.iinf\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eHere is one example with one of each of them\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003enlp = ADNLPModel(x-\u0026gt;dot(x,x), zeros(6),\n  lvar = [-Inf, -Inf, 0.0, 0.0, 0.0,  0.0],\n  uvar = [ Inf,  1.0, Inf, 1.0, 0.0, -1.0])\nnlp.meta.ifree\nnlp.meta.ifix\nnlp.meta.ilow\nnlp.meta.iupp\nnlp.meta.irng\nnlp.meta.iinf\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003eConstraints\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eConstraints are stored in NLPModels following in the format $c_L \\leq c(x) \\leq c_U$.\nThat means that an equality constraint happens when $c_{L_j} = c_{U_j}$.\nLet\u0026rsquo;s look at how to create a problem with constraints.\u003c/p\u003e\n\u003cp\u003eFor \u003ccode\u003eADNLPModel\u003c/code\u003e, you need to pass three keywords arguments: \u003ccode\u003ec\u003c/code\u003e, \u003ccode\u003elcon\u003c/code\u003e and \u003ccode\u003eucon\u003c/code\u003e,\nwhich represent $c(x)$, $c_L$ and $c_U$, respectively.\nFor instance, the problem\u003c/p\u003e\n\u003cp\u003e$$\n\\begin{align}\n\\min \\quad \u0026amp; x_1^2 + x_2^2 \\\ns.t. \\quad \u0026amp; x_1 + x_2 = 1\n\\end{align}\n$$\u003c/p\u003e\n\u003cp\u003eis created by doing\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ec(x) = [x[1] + x[2] - 1]\nlcon = [0.0]\nucon = [0.0]\nnlp = ADNLPModel(x-\u0026gt;dot(x,x), zeros(2), c=c, lcon=lcon, ucon=ucon)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eor alternatively, if you don\u0026rsquo;t want the intermediary functions\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003enlp = ADNLPModel(x-\u0026gt;dot(x,x), zeros(2), c=x-\u0026gt;[x[1]+x[2]-1], lcon=[0.0], ucon=[0.0])\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAnother possibility is to do\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003enlp = ADNLPModel(x-\u0026gt;dot(x,x), zeros(2), c=x-\u0026gt;[x[1]+x[2]], lcon=[1.0], ucon=[1.0])\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003ePersonally, I prefer the former.\u003c/p\u003e\n\u003cp\u003eFor inequalities, you can have only lower, only upper, and both.\nThe commands\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003enlp = ADNLPModel(x-\u0026gt;dot(x,x), zeros(2),\n  c=x-\u0026gt;[x[1] + x[2]; 3x[1] + 2x[2]; x[1]*x[2]],\n  lcon = [-1.0; -Inf; 1.0],\n  ucon = [Inf;   3.0; 2.0])\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eimplement the problem\u003c/p\u003e\n\u003cp\u003e$$\n\\begin{align}\n\\min \\quad \u0026amp; x_1^2 + x_2^2 \\\ns.t. \\quad \u0026amp; x_1 + x_2 \\geq -1 \\\n\u0026amp; 3x_1 + 2x_2 \\leq 3 \\\n\u0026amp; 1 \\leq x_1x_2 \\leq 2.\n\\end{align}\n$$\u003c/p\u003e\n\u003cp\u003eAgain, the types of constraints can be accessed in \u003ccode\u003emeta\u003c/code\u003e, through\n\u003ccode\u003enlp.meta.jfix\u003c/code\u003e, \u003ccode\u003ejfree\u003c/code\u003e, \u003ccode\u003ejinf\u003c/code\u003e, \u003ccode\u003ejlow\u003c/code\u003e, \u003ccode\u003ejrng\u003c/code\u003e and \u003ccode\u003ejupp\u003c/code\u003e.\nNotice if you forget to set \u003ccode\u003elcon\u003c/code\u003e and \u003ccode\u003eucon\u003c/code\u003e, there will be no\nconstraints, even though \u003ccode\u003ec\u003c/code\u003e is set. This is because the number of\nconstraints is taken from the lenght of these vectors.\u003c/p\u003e\n\u003cp\u003eNow, to access these constraints, let\u0026rsquo;s consider this simple problem.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003enlp = ADNLPModel(f, x0, c=x-\u0026gt;[x[1]*x[2] - 0.5], lcon=[0.0], ucon=[0.0])\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe function \u003ccode\u003econs\u003c/code\u003e return $c(x)$.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003econs(nlp, nlp.meta.x0)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe function \u003ccode\u003ejac\u003c/code\u003e returns the Jacobian of $c$. \u003ccode\u003ejprod\u003c/code\u003e and \u003ccode\u003ejtprod\u003c/code\u003e the\nJacobian product times a vector, and \u003ccode\u003ejac_op\u003c/code\u003e the LinearOperator.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ejac(nlp, nlp.meta.x0)\njprod(nlp, nlp.meta.x0, ones(2))\njtprod(nlp, nlp.meta.x0, ones(1))\nJ = jac_op(nlp, nlp.meta.x0)\nJ * ones(2)\nJ\u0026#39; * ones(1)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eTo get the Hessian we\u0026rsquo;ll use the same functions as the unconstrained case,\nwith the addition of a keyword parameter \u003ccode\u003ey\u003c/code\u003e.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ey = [1e4]\nhess(nlp, nlp.meta.x0, y=y)\nhprod(nlp, nlp.meat.x0, ones(2))\nH = hess_op(nlp, nlp.meta.x0, y=y)\nH * ones(2)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIf you want to ignore the objective function, or scale it by some value,\nyou can use the keyword parameter \u003ccode\u003eobj_weight\u003c/code\u003e.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003es = 0.0\nhess(nlp, nlp.meta.x0, y=y, obj_weight=s)\nhprod(nlp, nlp.meat.x0, ones(2), obj_weight=s)\nH = hess_op(nlp, nlp.meta.x0, y=y, obj_weight=s)\nH * ones(2)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eCheck the\n\u003ca href=\"http://juliasmoothoptimizers.github.io/NLPModels.jl/stable/api.html\"\u003eAPI\u003c/a\u003e\nfor more details.\u003c/p\u003e\n\u003cp\u003eWe can also create a constrained JuMP model.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ex0 = [-1.2; 1.0]\njmp = Model()\n@variable(jmp, x[i=1:2], start=(x0[i]))\n@NLobjective(jmp, Min, (x[1] - 1)^2 + 100*(x[2] - x[1]^2)^2)\n@NLcontraint(jmp, x[1]*x[2] == 0.5)\nmpbnlp = MathProgNLPModel(jmp)\ncons(mpbnlp, mpbnlp.meta.x0)\njac(mpbnlp, mpbnlp.meta.x0)\nhess(mpbnlp, mpbnlp.meta.x0, y=y)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAnd again, the access in CUTEst problems is the same.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eclp = CUTEstModel(\u0026#34;BT1\u0026#34;)\ncons(clp, clp.meta.x0)\njac(clp, clp.meta.x0)\nhess(clp, clp.meta.x0, y=clp.meta.y0)\nfinalize(clp)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003eConvenience functions\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eThere are some convenience functions to check whether a problem has only\nequalities, only bounds, etc.\nFor clarification, we\u0026rsquo;re gonna say function constraint to refer to constraints that are not bounds.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ehas_bounds\u003c/code\u003e: Returns \u003ccode\u003etrue\u003c/code\u003e is variable has bounds.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ebound_constrained\u003c/code\u003e: Returns \u003ccode\u003etrue\u003c/code\u003e if \u003ccode\u003ehas_bounds\u003c/code\u003e and no function\nconstraints;\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eunconstrained\u003c/code\u003e: No function constraints nor bounds;\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003elinearly_constrained\u003c/code\u003e: There are function constraints, and they are\nlinear; \u003cem\u003eobs: even though a \u003ccode\u003ebound_constrained\u003c/code\u003e problem is linearly\nconstrained, this will return false\u003c/em\u003e.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eequality_constrained\u003c/code\u003e: There are function constraints, and they are all equalities;\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003einequality_constrained\u003c/code\u003e: There are function constraints, and they are all inequalities;\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eExample solver\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eLet\u0026rsquo;s implement a \u0026ldquo;simple\u0026rdquo; solver for constrained optimization.\nOur solver will loosely follow the Byrd-Omojokun implementation of\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eM. Lalee, J. Nocedal, and T. Plantenga. \u003cstrong\u003eOn the implementation of an algorithm for large-scale equality constrained optimization\u003c/strong\u003e. SIAM J. Optim., Vol. 8, No. 3, pp. 682-706, 1998.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003efunction solver(nlp :: AbstractNLPModel)\n  if !equality_constrained(nlp)\n    error(\u0026#34;This solver is for equality constrained problems\u0026#34;)\n  elseif has_bounds(nlp)\n    error(\u0026#34;Can\u0026#39;t handle bounds\u0026#34;)\n  end\n\n  x = nlp.meta.x0\n\n  fx = obj(nlp, x)\n  cx = cons(nlp, x)\n\n  ‚àáfx = grad(nlp, x)\n  Jx = jac_op(nlp, x)\n\n  Œª = cgls(Jx\u0026#39;, -‚àáfx)[1]\n  ‚àá‚Ñìx = ‚àáfx + Jx\u0026#39;*Œª\n  norm‚àá‚Ñìx = norm(‚àá‚Ñìx)\n\n  Œî = max(0.1, min(100.0, 10norm‚àá‚Ñìx))\n  Œº = 1\n  v = zeros(nlp.meta.nvar)\n\n  iter = 0\n  while (norm‚àá‚Ñìx \u0026gt; 1e-4 || norm(cx) \u0026gt; 1e-4) \u0026amp;\u0026amp; (iter \u0026lt; 10000)\n    # Vertical step\n    if norm(cx) \u0026gt; 1e-4\n      v = cg(Jx\u0026#39;*Jx, -Jx\u0026#39;*cx, radius=0.8Œî)[1]\n      Œîp = sqrt(Œî^2 - dot(v,v))\n    else\n      fill!(v, 0)\n      Œîp = Œî\n    end\n\n    # Horizontal step\n    # Simplified to consider only ‚àá‚Ñìx = proj(‚àáf, Nu(A))\n    B = hess_op(nlp, x, y=Œª)\n    B‚àá‚Ñìx = B * ‚àá‚Ñìx\n    gtBg = dot(‚àá‚Ñìx, B‚àá‚Ñìx)\n    gtŒ≥ = dot(‚àá‚Ñìx, ‚àáfx + B * v)\n    t = if gtBg \u0026lt;= 0\n      norm‚àá‚Ñìx \u0026gt; 0 ? Œîp/norm‚àá‚Ñìx : 0.0\n    else\n      t = min(gtŒ≥/gtBg, Œîp/norm‚àá‚Ñìx)\n    end\n\n    d = v - t * ‚àá‚Ñìx\n\n    # Trial step acceptance\n    xt = x + d\n    ft = obj(nlp, xt)\n    ct = cons(nlp, xt)\n    Œ≥ = dot(d, ‚àáfx) + 0.5*dot(d, B * d)\n    Œ∏ = norm(cx) - norm(Jx * d + cx)\n    normŒª = norm(Œª, Inf)\n    if Œ∏ \u0026lt;= 0\n      Œº = normŒª\n    elseif normŒª \u0026gt; Œ≥/Œ∏\n      Œº = min(normŒª, 0.1 + Œ≥/Œ∏)\n    else\n      Œº = 0.1 + Œ≥/Œ∏\n    end\n    Pred = -Œ≥ + Œº * Œ∏\n    Ared = fx - ft + Œº * (norm(cx) - norm(ct))\n\n    œÅ = Ared/Pred\n    if œÅ \u0026gt; 1e-2\n      x .= xt\n      fx = ft\n      cx .= ct\n      ‚àáfx = grad(nlp, x)\n      Jx = jac_op(nlp, x)\n      Œª = cgls(Jx\u0026#39;, -‚àáfx)[1]\n      ‚àá‚Ñìx = ‚àáfx + Jx\u0026#39;*Œª\n      norm‚àá‚Ñìx = norm(‚àá‚Ñìx)\n      if œÅ \u0026gt; 0.75 \u0026amp;\u0026amp; norm(d) \u0026gt; 0.99Œî\n        Œî *= 2.0\n      end\n    else\n      Œî *= 0.5\n    end\n\n    iter += 1\n  end\n\n  return x, fx, norm‚àá‚Ñìx, norm(cx)\nend\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eToo loosely, in fact.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe horizontal step computes only the Cauchy step;\u003c/li\u003e\n\u003cli\u003eNo special updates;\u003c/li\u003e\n\u003cli\u003eNo second-order correction;\u003c/li\u003e\n\u003cli\u003eNo efficient implementation beyond the easy-to-do.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eTo test how good it is, let\u0026rsquo;s run on the Hock-Schittkowski constrained problems.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003efunction runcutest()\n  problems = filter(x-\u0026gt;contains(x, \u0026#34;HS\u0026#34;) \u0026amp;\u0026amp; length(x) \u0026lt;= 5, CUTEst.select(only_free_var=true, only_equ_con=true))\n  sort!(problems)\n  @printf(\u0026#34;%-7s  %15s  %15s  %15s\\n\u0026#34;,\n          \u0026#34;Problem\u0026#34;, \u0026#34;f(x)\u0026#34;, \u0026#34;‚Äñ‚àá‚Ñì(x,Œª)‚Äñ\u0026#34;, \u0026#34;‚Äñc(x)‚Äñ\u0026#34;)\n  for p in problems\n    nlp = CUTEstModel(p)\n    try\n      x, fx, nlx, ncx = solver(nlp)\n      @printf(\u0026#34;%-7s  %15.8e  %15.8e  %15.8e\\n\u0026#34;, p, fx, nlx, ncx)\n    catch\n      @printf(\u0026#34;%-7s  %s\\n\u0026#34;, p, \u0026#34;failure\u0026#34;)\n    finally\n      finalize(nlp)\n    end\n  end\nend\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eI\u0026rsquo;m gonna print the output of this one, so you can compare it with yours.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eProblem             f(x)        ‚Äñ‚àá‚Ñì(x,Œª)‚Äñ           ‚Äñc(x)‚Äñ\nHS26      5.15931251e-07   9.88009545e-05   5.24359322e-05\nHS27      4.00000164e-02   5.13264248e-05   2.26312672e-09\nHS28      7.00144545e-09   9.46563681e-05   2.44249065e-15\nHS39     -1.00000010e+00   1.99856691e-08   1.61607518e-07\nHS40     -2.50011760e-01   4.52797064e-05   2.53246505e-05\nHS42      1.38577292e+01   5.06661945e-05   5.33092868e-05\nHS46      3.56533430e-06   9.98827045e-05   8.00086215e-05\nHS47      3.53637757e-07   9.71339790e-05   7.70496596e-05\nHS48      4.65110036e-10   4.85457139e-05   2.27798719e-15\nHS49      3.14248189e-06   9.94899395e-05   2.27488138e-13\nHS50      1.36244906e-12   2.16913725e-06   2.90632554e-14\nHS51      1.58249170e-09   8.52213221e-05   6.52675179e-15\nHS52      5.32664756e+00   3.35626559e-05   3.21155766e-14\nHS56     -3.45604528e+00   9.91076239e-05   3.14471179e-05\nHS6       5.93063756e-13   6.88804464e-07   9.61311292e-06\nHS61     -1.43646176e+02   1.06116455e-05   1.80421875e-05\nHS7      -1.73205088e+00   1.23808109e-11   2.60442422e-07\nHS77      2.41501014e-01   8.31210333e-05   7.75367223e-05\nHS78     -2.91972281e+00   2.27102179e-05   2.88776440e-05\nHS79      7.87776482e-02   4.77319205e-05   7.55827729e-05\nHS8      -1.00000000e+00   0.00000000e+00   2.39989802e-06\nHS9      -5.00000000e-01   1.23438228e-06   3.55271368e-15\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIf you compare against the Hock-Schitkowski paper, you\u0026rsquo;ll see that\nthe method converged for all 22 problems.\nConsidering our simplifications, this is a very exciting.\u003c/p\u003e\n\u003cp\u003eThat\u0026rsquo;s all for now. Use our RSS feed to keep updated.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2017-02-17-nlpmodelsjl-and-cutestjl-constrained-optimization/","title":"NLPModels.jl and CUTEst.jl: Constrained optimization"},{"content":"\u003cp\u003eA couple of weeks ago me and Professor \u003ca href=\"https://dpo.github.io\"\u003eDominique Orban\u003c/a\u003e have finally made a release of\nCUTEst.jl, a wrapper for the CUTEst repository of problems for nonlinear\noptimization (which I\u0026rsquo;ve mentioned before).\nAlong with this release, we\u0026rsquo;ve done a release of NLPModels.jl, the underlying\npackage. I think it\u0026rsquo;s time I explain a little about these packages, others,\nand how to use them together.\nIf you want to see the output of the commands, you can open\n\u003ca href=\"https://asciinema.org/a/102371\"\u003ethis ASCIInema\u003c/a\u003e\nside by side.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eObs.: Tutorial using Julia 0.5.0\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eEdit: Second part is\n\u003ca href=\"https://abelsiqueira.github.io%7B%7Blocal_prefix%7D%7Dnlpmodelsjl-and-cutestjl-constrained-optimization/\"\u003ehere\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eJuliaSmoothOptimizers\u003c/strong\u003e\n\u003ca href=\"https://juliasmoothoptimizers.github.io\"\u003e\u003cimg src=\"https://juliasmoothoptimizers.github.io/assets/logo.png\" alt=\"JuliaSmoothOptimizers logo\"\u003e{: .img-view }\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eMost packages mentioned here will be a part of the JuliaSmoothOptimizers (JSO)\norganization. There are more packages in the organization that I won\u0026rsquo;t mention here, but you should check it out.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eNLPModels.jl\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eNLPModels is a package for creating Nonlinear Optimization Models. It is\nfocused on the needs of the solver writer, such as the ability to write one\nsolver that works on many models.\nThe package defines a few models, and there are others on the horizon.\nThe ones already done are:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eADNLPModel\u003c/strong\u003e: A model with automatic differentiation;\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eMathProgNLPModel\u003c/strong\u003e: A model for \u003ca href=\"https://github.com/JuliaOpt/MathProgBase.jl\"\u003eMathProgBase\u003c/a\u003e/\u003ca href=\"http://github.com/JuliaOpt/JuMP.jl\"\u003eJuMP\u003c/a\u003e conversion, whose utility will be shown below (obs: MPB and JuMP are packages from the JuliaOpt organization);\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSimpleNLPModel\u003c/strong\u003e: A model in which nothing is automatic, i.e., all functions have to be provided by the user.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSlackModel\u003c/strong\u003e: A model that changes all inequalities to equalities adding extra variables;\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eLBFGSModel\u003c/strong\u003e and \u003cstrong\u003eLSR1Model\u003c/strong\u003e: Models that create quasi-Newton models from another model.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThe first two models are designed to be easy to use; the third is useful for\nefficient model creation in specific cases; the last ones are utility models.\u003c/p\u003e\n\u003cp\u003eLet\u0026rsquo;s begin by installing NLPModels.jl, and a couple of optional requirements.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ePkg.add(\u0026#34;NLPModels.jl\u0026#34;)\nPkg.add(\u0026#34;JuMP.jl\u0026#34;) # Installs ForwardDiff also.\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis should install version 0.1.0. After that, just do\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eusing NLPModels\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNow, let\u0026rsquo;s create a simple function: Rosenbrock\u0026rsquo;s.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ef(x) = (x[1] - 1)^2 + 100*(x[2] - x[1]^2)^2\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe Rosenbrock problem traditionally starts from $(-1.2,1.0)$.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ex0 = [-1.2; 1.0]\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNow, we are ready to create the problem.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eadnlp = ADNLPModel(f, x0)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNow, we can access the function and derivatives using the \u003ca href=\"https://juliasmoothoptimizers.github.io/NLPModels.jl/stable/api.html\"\u003eNLPModels API\u003c/a\u003e\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eobj(adnlp, adnlp.meta.x0)\ngrad(adnlp, adnlp.meta.x0)\nhess(adnlp, adnlp.meta.x0)\nobjgrad(adnlp, adnlp.meta.x0)\nhprod(adnlp, adnlp.meta.x0, ones(2))\nH = hess_op(adnlp, adnlp.meta.x0)\nH * ones(2)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAt this point, we can\u0026rsquo;t differentiate many things from simply using\n\u003ccode\u003eForwardDiff\u003c/code\u003e interface directly, but two things stand out: \u003ccode\u003eobjgrad\u003c/code\u003e returns\nboth functions at once, and \u003ccode\u003ehess_op\u003c/code\u003e returns a\n\u003ca href=\"https://github.com/JuliaSmoothOptimizers/LinearOperators.jl\"\u003eLinearOperator\u003c/a\u003e,\nanother structure created in JuliaSmoothOptimizers.\nThis one defines a linear operator, extending Julia matrices in the sense that if\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eusing LinearOperators\nn = 100\nA = rand(n, n)\nB = rand(n, n)\nopA = LinearOperator(A)\nopB = LinearOperator(B)\nv = rand(n)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003ethen \u003ccode\u003e(A * B) * v\u003c/code\u003e computes the matrix product, whereas \u003ccode\u003e(opA * opB) * v\u003c/code\u003e won\u0026rsquo;t.\nFurthermore, the linear operator can be created from the functions\n\u003ccode\u003ev-\u0026gt;Mp(v)\u003c/code\u003e and \u003ccode\u003ev-\u0026gt;Mtp(v)\u003c/code\u003e, defining the product of the linear operator times a vector and its transpose times a vector.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eT = LinearOperator(2, 2, # sizes\n                   false, false,\n                   v-\u0026gt;[-v[2]; v[1]], v-\u0026gt;[v[2]; -v[1]])\nv = rand(2)\nT * v\nT\u0026#39; * v\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cem\u003eObs: In the \u003ccode\u003eADNLPModel\u003c/code\u003e case, \u003ccode\u003ehess_op\u003c/code\u003e returns a linear operator that is actually\ncomputing the matrix, but this is a issue to be tackled on the future (PRs\nwelcome). But we\u0026rsquo;ll be back with uses for \u003ccode\u003ehess_op\u003c/code\u003e soon.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe next model is the \u003ccode\u003eMathProgNLPModel\u003c/code\u003e. This model\u0026rsquo;s main use is the \u003ccode\u003eJuMP\u003c/code\u003e\nmodelling language. This is very useful for more elaborate writing, specially\nwith constraints. It does create a little more overhead though, so keep that\nin mind.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eusing JuMP\njmp = Model()\n@variable(jmp, x[i=1:2], start=(x0[i])) # x0 from before\n@NLobjective(jmp, Min, (x[1] - 1)^2 + 100*(x[2] - x[1]^2)^2)\nmpbnlp = MathProgNLPModel(jmp)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eTry the commands again.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eobj(mpbnlp, mpbnlp.meta.x0)\ngrad(mpbnlp, mpbnlp.meta.x0)\nhess(mpbnlp, mpbnlp.meta.x0)\nobjgrad(mpbnlp, mpbnlp.meta.x0)\nhprod(mpbnlp, mpbnlp.meta.x0, ones(2))\nH = hess_op(mpbnlp, mpbnlp.meta.x0)\nH * ones(2)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIt should be pretty much the same, though there is a little difference in \u003ccode\u003ehess\u003c/code\u003e.\nJuMP creates the sparse Hessian, which is better, from a computational point of\nview.\u003c/p\u003e\n\u003cp\u003eNotice how the commands are the same. I\u0026rsquo;ve actually copy-pasted the commands\nfrom above.\nThis allows the write of a solver in just a couple of commands.\nFor instance, a simple \u003cstrong\u003eNewton method\u003c/strong\u003e.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003efunction newton(nlp :: AbstractNLPModel)\n  x = nlp.meta.x0\n  fx = obj(nlp, x)\n  gx = grad(nlp, x)\n  ngx = norm(gx)\n  while ngx \u0026gt; 1e-6\n    Hx = hess(nlp, x)\n    d = -gx\n    try\n      G = chol(Hermitian(Hx, :L)) # Make Cholesky work on lower-only matrix.\n      d = -G\\(G\u0026#39;\\gx)\n    catch e\n      if !isa(e, Base.LinAlg.PosDefException); rethrow(e); end\n    end\n    t = 1.0\n    xt = x + t * d\n    ft = obj(nlp, xt)\n    while ft \u0026gt; fx + 0.5 * t * dot(gx, d)\n      t *= 0.5\n      xt = x + t * d\n      ft = obj(nlp, xt)\n    end\n    x = xt\n    fx = ft\n    gx = grad(nlp, x)\n    ngx = norm(gx)\n  end\n  return x, fx, ngx\nend\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAnd we run in the problems with\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003enewton(adnlp)\nnewton(mpbnlp)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cem\u003eWrite once, use on problems from different sources.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eNow, to have more fun, let\u0026rsquo;s get another package:\n\u003ca href=\"https://github.com/JuliaSmoothOptimizers/OptimizationProblems.jl\"\u003eOptimizationProblems.jl\u003c/a\u003e.\nThis package doesn\u0026rsquo;t have a release yet, so we have to clone it:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ePkg.clone(\u0026#34;https://github.com/JuliaSmoothOptimizers/OptimizationProblems.jl\u0026#34;)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWhat we have here is a collection of JuMP models implementing some of the\nCUTEst problems. Together with \u003ccode\u003eNLPModels.jl\u003c/code\u003e, we have a good opportunity to test our Newton implementation.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eusing OptimizationProblems\n\nx, fx, ngx = newton(MathProgNLPModel( rosenbrock() ))\nx, fx, ngx = newton(MathProgNLPModel( dixmaanj() ))\nx, fx, ngx = newton(MathProgNLPModel( brownbs() ))\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cem\u003eAn issue with OptimizationProblems is that it still doesn\u0026rsquo;t have a way to get\nall unconstrained problems, for instance. (PRs are welcome).\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eSo far we used 3 packages from JSO: \u003ccode\u003eNLPModels.jl\u003c/code\u003e, \u003ccode\u003eLinearOperators.jl\u003c/code\u003e and \u003ccode\u003eOptimizationProblems.jl\u003c/code\u003e. It\u0026rsquo;s time to meet another important package.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eCUTEst.jl\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eCUTEst, the Constrained and Unconstrained Testing Environment with safe\nthreads, is a package written in Fortran providing over a thousand problems to\nallow testing of Nonlinear Programming solvers. However, CUTEst is hard to use\nby first-timers. Just installing it was already hard.\nCUTEst.jl provides an interface for CUTEst that is simple to install and use\n(comparing to the original).\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eObs.: CUTEst.jl does not work on Windows for now. In fact, there is no plan to\nmake it work on Windows because \u0026ldquo;people interested in doing it\u0026rdquo;‚à©\u0026ldquo;people capable\nof doing it\u0026rdquo; = ‚àÖ, as far as we\u0026rsquo;ve looked. If you are in this set, PRs are\nwelcome.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eTo install CUTEst.jl you need to install something manually. Unfortunately,\nthis is specific for each system. Except for OSX, actually, which is using\n\u003ca href=\"https://github.com/optimizers/homebrew-cutest\"\u003ehomebrew-cutest\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eFor Linux users, check out \u003ca href=\"http://juliasmoothoptimizers.github.io/CUTEst.jl/latest/#Installing-1\"\u003ethis\npage\u003c/a\u003e.\nEssentially, we need \u003ccode\u003elibgfortran.so\u003c/code\u003e in a visible place. And it\u0026rsquo;s especially\nannoying that some distritions don\u0026rsquo;t put it in a visible place.\u003c/p\u003e\n\u003cp\u003eWith that done, enter\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ePkg.add(\u0026#34;CUTEst\u0026#34;)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003ewhich should install CUTEst.jl 0.1.0.\u003c/p\u003e\n\u003cp\u003eYes, it takes some time.\u003c/p\u003e\n\u003cp\u003eFinally, we start using CUTEst with\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eusing CUTEst\n\nnlp = CUTEstModel(\u0026#34;ROSENBR\u0026#34;)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003ccode\u003eROSENBR\u003c/code\u003e is a CUTEst problem, in case you want the list, see\n\u003ca href=\"http://www.cuter.rl.ac.uk/Problems/mastsif.html\"\u003ehere\u003c/a\u003e. Keep reading for a way\nto select them, though.\u003c/p\u003e\n\u003cp\u003eNow, let\u0026rsquo;s solve this CUTEst problem with our Newton method.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ex, fx, ngx = newton(nlp)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003eYes, exactly like before!\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eCUTEst is a little more annoying in other aspect also. Like, you can\u0026rsquo;t have two\nor more problems open at the same time, and you have to close this problem\nbefore opening a new one. (Again, PRs are welcome).\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003efinalize(nlp)\nnlp = CUTEstModel(\u0026#34;HIMMELBB\u0026#34;)\nx, fx, ngx = newton(nlp)\nfinalize(nlp)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis allows a simple workflow for writing optimization solvers.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWrite some problems by hand (using \u003ccode\u003eADNLPModel\u003c/code\u003e or \u003ccode\u003eMathProgNLPModel\u003c/code\u003e);\u003c/li\u003e\n\u003cli\u003eTest your solvers with these hand-written problems;\u003c/li\u003e\n\u003cli\u003eRepeat last two steps until you believe you\u0026rsquo;re ready to competitive comparison;\u003c/li\u003e\n\u003cli\u003eTest with CUTEst problems seamlessly.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eNow, let\u0026rsquo;s get back to \u003ccode\u003ehess_op\u003c/code\u003e. Remember that it used Matrix vector products?\nWell, CUTEst has separate functions for the product of the Hessian at a point\nand a vector. Which means that \u003ccode\u003ehprod\u003c/code\u003e actually computes this product without\nhaving to create the matrix. Which means it is, at least, memory-efficient.\nFurthermore, \u003ccode\u003ehess_op\u003c/code\u003e will be created with the \u003ccode\u003ehprod\u003c/code\u003e function, which means\nit is also memory-efficient.\u003c/p\u003e\n\u003cp\u003eLet\u0026rsquo;s look at a huge problem to feel the difference.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003enlp = CUTEstModel(\u0026#34;BOX\u0026#34;)\nnlp.meta.nvar\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eLet\u0026rsquo;s make a simple comparison\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003efunction foo1()\n  H = hess(nlp, nlp.meta.x0)\n  v = ones(nlp.meta.nvar)\n  return Hermitian(H, :L) * v\nend\n\nfunction foo2()\n  H = hess_op(nlp, nlp.meta.x0)\n  v = ones(nlp.meta.nvar)\n  return H * v\nend\n\n@time w1 = foo1();\n@time w2 = foo2();\nnorm(w1 - w2)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYes, that\u0026rsquo;s a huge difference.\u003c/p\u003e\n\u003cp\u003eThis is a very good reason to use \u003ccode\u003ehess_op\u003c/code\u003e and \u003ccode\u003ehprod\u003c/code\u003e. But let\u0026rsquo;s take a step further.\u003c/p\u003e\n\u003cp\u003eWe can\u0026rsquo;t implement Cholesky using only \u003ccode\u003ehprod\u003c/code\u003es, so our Newton method would\nactually take a long time to reach a solution for the problem above.\nTo circunvent that, we could try using the Conjugate Gradients Method instead\nof Cholesky. This would only use Hessian-vector products.\u003c/p\u003e\n\u003cp\u003eWe arrive on a new package,\n\u003ca href=\"https://github.com/JuliaSmoothOptimizers/Krylov.jl\"\u003eKrylov.jl\u003c/a\u003e, which\nimplements Krylov methods. In particular, Conjugate Gradients.\nThis package is also unreleased, so we need to clone it.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ePkg.clone(\u0026#34;https://github.com/JuliaSmoothOptimizers/Krylov.jl\u0026#34;)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eConsider a simple example\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eusing Krylov\nA = rand(3,3)\nA = A*A\u0026#39;\nb = A*ones(3)\ncg(A, b)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAs expected, the system is solver, and the solution is $(1,1,1)$.\nBut let\u0026rsquo;s do something more.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eA = -A\ncg(A, b)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYes, Krylov does indeed solves the non-positive definite system using Conjugate Gradient.\nWell, actually, a variant.\u003c/p\u003e\n\u003cp\u003eThat\u0026rsquo;s not enough tough. Krylov.jl also accepts an additional argument \u003ccode\u003eradius\u003c/code\u003e\nto set a trust-region radius.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ecg(A, b, radius=0.1)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWell, as an exercise I suggest you implement a trust-region version of Newton\nmethod, but for now, let\u0026rsquo;s continue with our line-search version.\u003c/p\u003e\n\u003cp\u003eWe know now how \u003ccode\u003ecg\u003c/code\u003e behaves for non-positive definite systems, we can\u0026rsquo;t make\nthe changes for a new method.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003efunction newton2(nlp :: AbstractNLPModel)\n  x = nlp.meta.x0\n  fx = obj(nlp, x)\n  gx = grad(nlp, x)\n  ngx = norm(gx)\n  while norm(gx) \u0026gt; 1e-6\n    Hx = hess_op(nlp, x)\n    d, _ = cg(Hx, -gx)\n    slope = dot(gx, d)\n    if slope \u0026gt;= 0 # Not a descent direction\n      d = -gx\n      slope = -dot(d,d)\n    end\n    t = 1.0\n    xt = x + t * d\n    ft = obj(nlp, xt)\n    while ft \u0026gt; fx + 0.5 * t * slope\n      t *= 0.5\n      xt = x + t * d\n      ft = obj(nlp, xt)\n    end\n    x = xt\n    fx = ft\n    gx = grad(nlp, x)\n    ngx = norm(gx)\n  end\n  return x, fx, ngx\nend\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNow, running \u003ccode\u003enewton2\u003c/code\u003e on our large problem, we obtain\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ex, fx, ngx = newton2(nlp)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWhich is the method working very fast. Less that a second here.\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003eThere is actually another package I\u0026rsquo;d like to talk about, but it needs some\nmore work for it to be ready for a release:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eOptimize.jl\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eOptimize.jl is a package with solvers. We intend to implement some high quality\nsolvers in there, but there is actually more to it. We have in there tools to\nbenchmark packages. These tools should allow the testing of a set of solvers in\na set of problems without much fuss, while creating the comparison information,\nincluding the performance profile.\nIt also includes, or will include, \u0026ldquo;parts\u0026rdquo; of solvers to create your own\nsolver. Like trust-region and line-search algorithms and auxiliary functions\nand types.\nUnfortunately, it\u0026rsquo;s not done enough for me to extend on it, and this is already\ngetting too long.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eEnd\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eI hope you enjoyed this overview of packages.\nSubscribe to the RSS feed to keep updated in future tutorials. I intend to talk\nabout the constrained part of NLPModels soon.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2017-02-07-nlpmodelsjl-cutestjl-and-other-nonlinear-optimization-packages-on-julia/","title":"NLPModels.jl, CUTEst.jl and other Nonlinear Optimization Packages on Julia"},{"content":"\u003cp\u003eI wanted a background that would update automatically in some\ninteresting way, instead of just random images.\nAfter some thought, I decided to use some \u003ca href=\"https://en.wikipedia.org/wiki/Julia_set\"\u003eJulia\nfractals\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eI made a code to create the Julia fractals in the \u003ca href=\"https://julialang.org\"\u003eJulia\nlanguage\u003c/a\u003e, and then some code to run it for a random\npoint.\u003c/p\u003e\n\u003cp\u003eThe code is \u003ca href=\"https://github.com/abelsiqueira/juliabg\"\u003ehere\u003c/a\u003e, including some\nexplaining on how to use and install it.\u003c/p\u003e\n\u003cp\u003eHere are some examples:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://raw.githubusercontent.com/abelsiqueira/juliabg/master/ex1.png\" alt=\"\"\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/abelsiqueira/juliabg/master/ex2.png\" alt=\"\"\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/abelsiqueira/juliabg/master/ex3.png\" alt=\"\"\u003e\n\u003cimg src=\"https://raw.githubusercontent.com/abelsiqueira/juliabg/master/ex4.png\" alt=\"\"\u003e\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2017-01-15-julia-fractal-on-julia/","title":"Julia Fractal on Julia"},{"content":"\u003cp\u003eLast year I discovered by chance a code competition that happens in the month\nof December: The \u003ca href=\"http://adventofcode.com\"\u003eAdvent of Code\u003c/a\u003e.\nThis event consists of small puzzles release every day of December, up to the\n25th. Which amounts to 25 problems! (I can do math).\u003c/p\u003e\n\u003cp\u003eLast year I tried doing some on Bash, and latter switched to Julia, but never\ngot to finish them.\nThis year I decided to use \u003ca href=\"https://julialang.org\"\u003eJulia\u003c/a\u003e, because I want to\ntest it for these general problems. Some problems are very hard, and I want\nto have the packages at my disposal.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eThere is a leaderboard\u003c/strong\u003e, which revolves around the first 100 solvers for\neach day. Most problems are solved in the first 5 minutes of its release, and\nthe 100th place is usually less than 15 minutes. The best I got was 30 minutes,\ngetting the 135th position and zero points. However, I\u0026rsquo;m usually not trying to\nget there because the problems are release at 3am for me (Brazil), and by that\ntime I\u0026rsquo;m usually sleeping.\u003c/p\u003e\n\u003cp\u003eThis year I\u0026rsquo;m trying to follow more closely the dates, managed to solve one by\nday until a gigantic workload halted my progress for a week. Yesterday I\nreturned to these problems and solved the missing ones up until now.\u003c/p\u003e\n\u003cp\u003eIf you like coding, you should give it a try. My code for this year is\navailable at \u003ca href=\"https://github.com/abelsiqueira/AoC2016\"\u003eGitHub\u003c/a\u003e, but only open\nit if you decided not to play. Be warned that most of my answers were poorly\nwritten because I still want to do it fast, and am not worried about cleaning\nof efficiency.\u003c/p\u003e\n\u003cp\u003eHappy new year, holidays, and coding.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2016-12-18-advent-of-code-2016-in-julia/","title":"Advent of Code 2016 in Julia"},{"content":"\u003cp\u003eNos dias 30 de Novembro √† 2 de Dezembro de 2016 acontece o \u003ca href=\"http://eventos.ufpr.br/smne/SMNE1\"\u003eprimeiro Simp√≥sio\nde M√©todos Num√©ricos em Engenharia\u003c/a\u003e.\nNeste simp√≥sio darei um minicurso sobre Julia.\u003c/p\u003e\n\u003cp\u003eDeixo aqui o material preliminar para os alunos do minicurso, ou interessados.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"/blog/smne-julia.ipynb\"\u003eNotebook (necess√°rio)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/blog/exemplo.jl\"\u003eexemplo.jl (necess√°rio)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/blog/smne-julia.html\"\u003eHTML est√°tico do notebook - para quem n√£o conseguiu\ninstalar\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eTamb√©m deixo \u003ca href=\"https://pad.riseup.net/p/aCXYqUjz3cCS\"\u003eaqui\u003c/a\u003e o link do Etherpad\npara usarmos na aula.\u003c/p\u003e\n\u003cp\u003eQuem n√£o conseguiu instalar at√© agora, pode tentar usar o\n\u003ca href=\"https://juliabox.com/\"\u003eJuliaBox\u003c/a\u003e, que roda Julia online. \u003cstrong\u003eN√£o sei se teremos\ninternet boa o suficiente no evento\u003c/strong\u003e.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2016-11-29-smne-2016-julia/","title":"Apresenta√ß√£o de Julia no SMNE"},{"content":"\u003cp\u003eFor some time, one of my concerns is bibliography management.\nSee my \u003ca href=\"http://abelsiqueira.github.io/en/projects/\"\u003eprojects page\u003c/a\u003e if you have\ninterest on working with something like that.\u003c/p\u003e\n\u003cp\u003eIn the past, what we had was simply writing all your bibliographies directly on\na .tex file. Then, if you needed to write again, you would copy-paste it\nsomewhere. If you made a mistake, you would have to fix it by hand. If the\njournal changed styles, you would have to change everything by hand.\n\u003cstrong\u003eIf you\u0026rsquo;re still doing this. STOP.\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eThen, we got BibTeX and all it\u0026rsquo;s reimplementations. BibTeX allows you to define\nkey-value pairs and process to the specific style desired.\nSo, this\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\\bibitem{key} Author, S.: Some Title. Journal of Something, 10, 200-230, (2016)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003ewhich was written directly in the .tex, changed to this\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e@journal{key,\nauthor = \u0026#34;Some Author\u0026#34;,\ntitle = \u0026#34;Some title\u0026#34;,\njournal = \u0026#34;Journal of something\u0026#34;,\nvolume = \u0026#34;10\u0026#34;,\npages = \u0026#34;200-230\u0026#34;,\nyear = \u0026#34;2016\u0026#34;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003ein a different .bib file, and the .tex had 4-5 lines adding a package, options,\nstyle, the .bib file, and where to put the bib.\u003c/p\u003e\n\u003cp\u003eThis is useful. Really, it is. Perhaps you don\u0026rsquo;t think so, because you have to\nlearn something new, and it looks strange (?), and nobody uses it (??), but\nreally, it is useful. Keep reading.\u003c/p\u003e\n\u003cp\u003eNow, we need something new. BibTeX was created 31 years ago, and it really\nneeded something new. Well, it has. You wanna you \u003cstrong\u003eBibLaTeX\u003c/strong\u003e now, instead of\nBibTeX, but it works in the same way. But what we really need is something new,\nand smarter.\u003c/p\u003e\n\u003cp\u003eComputers are very fast and smart now, we can have something more useful.\nSomething in the cloud (#thereisnocloud), some server-like thing using HTML5.\nUse JSON.\u003c/p\u003e\n\u003cp\u003eAnyway, the BibTeX problem is a part of the LaTeX problem, which is also too\nold, but there is nothing fully working as good right now.\u003c/p\u003e\n\u003cp\u003eFor now, I found some middle ground, specially if you\u0026rsquo;re trying to leave writing\ndirectly on the .tex, and wants to create a .bib file.\u003c/p\u003e\n\u003cp\u003eUse JabRef + JabFox. Search each entry of your bibliography and use JabFox to\nsave it. There is an option to update the entries that have DOI, so do that too.\nThen you can generate your .bib as needed.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2016-08-21-a-quasi-solution-to-my-bib-problem/","title":"A quasi-solution to my bib problem"},{"content":"\u003cp\u003eNesta semana que passou, dos dias 01 a 03 de Agosto, aconteceu uma Oficina de\nFerramentas Computacionais na UFPR. Essa oficina seguiu os moldes das oficinas\ndo \u003ca href=\"http://software-carpentry.org/\"\u003eSoftware Carpentry\u003c/a\u003e e\n\u003ca href=\"http://datacarpentry.org/\"\u003eData Carpentry\u003c/a\u003e.\nEsta foi a segunda oficina neste padr√£o que organizei, a\n\u003ca href=\"/blog/2015-05-30-resultado-da-oficina-de-ferramentas-computacionais-para-pesquisadores/\"\u003eprimeira\u003c/a\u003e\nfoi h√° um pouco mais de um ano, e foi apenas um dia.\nNesta tivemos 3 dias de atividades, e v√°rios participantes.\u003c/p\u003e\n\u003cp\u003eA oficina teve 28 participantes, por√©m nem todos vieram a todos os tutoriais.\nO maior n√∫mero de pessoas num mesmo tutorial foi 23 e o menor foi 15.\nTivemos aulas de Shell, Julia, R, LaTeX, Git e RMarkdown.\u003c/p\u003e\n\u003cp\u003eOs instrutores foram o \u003ca href=\"http://www.leg.ufpr.br/doku.php/pessoais:fernandomayer\"\u003eFernando\nMayer\u003c/a\u003e, a\nKally Chung, e eu.\nN√≥s mesmos nos revezamos como monitores.\u003c/p\u003e\n\u003cp\u003eA maior parte dos participantes eram da p√≥s-gradua√ß√£o, e da computa√ß√£o.\nTivemos uma quantidade saud√°vel de pessoas da gradua√ß√£o, e dois professores.\nTivemos participantes da matem√°tica, da matem√°tica industrial, da f√≠sica, da\nqu√≠mica, e um participante da farm√°cia.\u003c/p\u003e\n\u003cp\u003eCome√ßamos com uma breve introdu√ß√£o e um help pra instalar o Julia. Tivemos muita\ndificuldade em fazer o Julia funcionar por motivos variados. Essencialmente\ndeveria precisar come√ßar instalando o Jupyter pelo IJulia. Talvez funcionasse\nassim. Seguimos para um breve coffee.\u003c/p\u003e\n\u003cp\u003eDepois do coffee, fizemos uma aula de Shell. Come√ßamos mais cedo e ficamos quase\numa hora a mais do que o planejado. Como sempre o tempo ficou bastante apertado.\nMostramos no fim que existem comandos um pouco mais interessantes, como o \u003ccode\u003egrep\u003c/code\u003e\ne o \u003ccode\u003efind\u003c/code\u003e. N√£o deu pra falar muito mais, mas chegamos no \u003ccode\u003efor\u003c/code\u003e e \u003ccode\u003escripts\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eDepois do almo√ßo fizemos a aula de Julia. Havia planejado 3 a 4 aulas com um\npouco de an√°lise de dados. No fim das contas consegui passar apenas o m√≠nimo de\nJulia. Mostrando um pouco de √°lgebra linear num√©rica, mas n√£o for, while e if.\u003c/p\u003e\n\u003cp\u003ePor fim tivemos R, que tamb√©m ficou razoavelmente limitado aos comandos b√°sicos.\u003c/p\u003e\n\u003cp\u003eNo segundo dia tivemos a primeira aula de Git, que foi bem. Considerando a\ncomplexidade da ferramenta, tivemos bons resultados.\u003c/p\u003e\n\u003cp\u003eO segundo tutorial da manh√£ foi a segunda parte de R. Nessa parte vimos os\ngr√°ficos e a an√°lise de dados.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/blog/2016-08-01-swc3.jpg\" alt=\"Fernando\"\u003e\u003c/p\u003e\n\u003cp\u003eA tarde foi apenas de LaTeX. Fizemos uma aula lendo um .tex pronto e modificando\nalgumas coisas. Conseguimos fazer as partes principais para fazer uma tese.\nInclusive BibTeX com Biblatex (b√°sico).\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/blog/2016-08-01-swc4.jpg\" alt=\"Abel\"\u003e\u003c/p\u003e\n\u003cp\u003eO √∫ltimo dia de workshop teve o fim da aula de Git: a parte remota.\nFizemos contas no github, subimos o trabalho do dia anterior, baixamos e fizemos\nmodifica√ß√µes.\u003c/p\u003e\n\u003cp\u003eDepois fizemos a segunda aula de Julia, onde pude apresentar for, while, if,\nplots e arquivos.\u003c/p\u003e\n\u003cp\u003ePor fim, fizemos uma aula de RMarkdown, finalizando em como montar um site com\nele.\u003c/p\u003e\n\u003cp\u003eComo sempre, tivemos algumas dificuldades com tempo e internet.\u003c/p\u003e\n\u003cp\u003eFotos:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/blog/2016-08-01-swc1.jpg\" alt=\"Wrap 1\"\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/blog/2016-08-01-swc2.jpg\" alt=\"Wrap 2\"\u003e\u003c/p\u003e\n\u003cp\u003eInfelizmente n√£o tiramos fotos da Kally ensinando.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2016-08-07-oficina-de-ferramentas-computacionais-na-ufpr-01-de-agosto-de-2016/","title":"Oficina de Ferramentas Computacionais na UFPR, 01 de Agosto de 2016"},{"content":"\u003cp\u003eHello, it\u0026rsquo;s been a long time since my last post, and a lot has\nhappened since.\nI\u0026rsquo;ve had difficulty finding time to write a good post, or even a bad\npost, sometimes, but now I return with a brief explaining, and some\npossible continuation posts.\u003c/p\u003e\n\u003cp\u003eFirst, during the classes period, I have a lot of obligations that use\na lot of time: Preparing classes, tests, projects, grading, etc.\nThis was most of my time.\u003c/p\u003e\n\u003cp\u003eAdditionally, in May, I went to two conferences in my field, the\nOptimization Days 2016, in Montreal, Canada, and the XI Brazilian Workshop on\nContinuos Optimization, in Manaus/Amazonas, here in Brazil.\nFor the first, I left at the end of April, but I had no visa, so I had\nto rush to get everything in order, then get the tickets and the\nhotel, while preparing the talk. I also worked with Dominique Orban in\nthere, which you should know from CUTEst.\u003c/p\u003e\n\u003cp\u003eFurthermore, I also gave a talk about Games and Artificial\nIntelligence for undergrad students around April and a talk about\nJulia for the Informatics grad program around May.\u003c/p\u003e\n\u003cp\u003eJune was a month of closures. I (re)done an old paper with Francisco\nGomes and submitted it. I almost finished the content of a paper with\nGeovani Grapiglia. CUTEst (and related) is (are) almost ready for\nrelease. The classes finished.\u003c/p\u003e\n\u003cp\u003eThis week, the first of July, I had the pleasure of having Miles\nLubin, from MIT, over at UFPR. He gave a tutorial on JuMP, presenting\na linear and a non-linear model. People were very interested, and it\nwas very popular. There were 28 people attending it, with interest\nfrom the audience and a wide range of fields. I do plan to use JuMP in\nfuture classes, and some colleagues might too.\nAlso this week, there is a Term Paper defense, and the second part of my\ntenure-track avaliation.\u003c/p\u003e\n\u003cp\u003eNow that I\u0026rsquo;ll have more time again, I\u0026rsquo;ll probably make more posts. I\nhave one about CUTEst, which I expected to make when released, but\nmaybe I\u0026rsquo;ll have to do earlier to avoid confusion.\nI also want to make more applications of mathematics with Julia, but\nlet\u0026rsquo;s see what happens.\u003c/p\u003e\n\u003cp\u003eSee you soon.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2016-07-06-long-time-away/","title":"Long time away"},{"content":"\u003cp\u003eEver since I can remember I liked puzzles. My father had a book on puzzles, and\nthere were also puzzle magazines. I liked it much\nI also liked gaming very much. I don\u0026rsquo;t remember where it started, but I played\na lot.\nWell, today I\u0026rsquo;ll talk about games that have programming involved, albeit\nindirectly.\u003c/p\u003e\n\u003ch2 id=\"light-bothttpwwwkongregatecomgamescoolio_niatolight-bot\"\u003e\u003ca href=\"http://www.kongregate.com/games/Coolio_Niato/light-bot\"\u003eLight-Bot\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a very simple game at first. It scales after some levels, but a\nprogrammer shouldn\u0026rsquo;t have much trouble completing it.\nFor a non-programmer, it is a great starting point. It really is made for\nbeginners.\u003c/p\u003e\n\u003cp\u003eThere is also a Light-Bot 2.0, which you can continue after.\u003c/p\u003e\n\u003cp\u003eThey also made Light-Bot Rewired, but that is only the first game again to get\nmoney from you.\u003c/p\u003e\n\u003ch2 id=\"tile-factoryhttpwwwkongregatecomgamesduerigtile-factory\"\u003e\u003ca href=\"http://www.kongregate.com/games/duerig/tile-factory\"\u003eTile Factory\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a good continuation. It is very big, but it starts easy enough.\nAfter some levels you will get some headache with timing and \u0026ldquo;crossing lanes\u0026rdquo;,\nbut it still very good.\nThe \u003ca href=\"https://github.com/Tile-Factory-Unbound/tile-factory-unbound\"\u003esource was\nopened\u003c/a\u003e\nsome time ago, so maybe a continuation can be made from interest people.\nTell me it that\u0026rsquo;s the case.\u003c/p\u003e\n\u003ch2 id=\"manufactoriahttpwwwkongregatecomgamespleasingfungusmanufactoria\"\u003e\u003ca href=\"http://www.kongregate.com/games/PleasingFungus/manufactoria\"\u003eManufactoria\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eNow things get ugly (or beautiful). This game really increases the difficulty.\nYou must use conditionals and loops from the early game.\nThis is easily my favorite of the list, althought it is very hard.\nI can\u0026rsquo;t even remember if I finished all levels (in part because I eventually\nhave to change computers and start again).\u003c/p\u003e\n\u003cp\u003eIf you already are a programmer, you have to try it.\u003c/p\u003e\n\u003ch2 id=\"other-games\"\u003eOther games\u003c/h2\u003e\n\u003cp\u003eSome other games I must mention:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://www.kongregate.com/games/krispykrem/kohctpyktop-engineer-of-the-people\"\u003eKOHCTPYKTOP\u003c/a\u003e:\nA game in which you design integrated circuits. It involves a little more\nknowledge of circuits than I have, so it became quite hard to do anything.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.kongregate.com/games/krispykrem/the-codex-of-alchemical-engineering\"\u003eThe Codex of Alchemical\nEngineering\u003c/a\u003e:\nThis is similar to lightbot, but a little more difficult. For some reason, I\ndidn\u0026rsquo;t enjoyed this enough.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eAll these games were played on Kongregate because I spent a lot of time on that,\nbut most can be played on other sites too.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2016-03-20-games-for-programmers/","title":"Games for Programmers"},{"content":"\u003cp\u003eFirst, what is Test Driven Development (TDD)?\nWell, I\u0026rsquo;m not an expert, so don\u0026rsquo;t quote me, but in practice it means that you\ndevelop your code to fulfill tests that you define prior to beginning your work.\nYou do not define \u003cstrong\u003eall\u003c/strong\u003e your tests first, though. You define a single test,\nand produce code to pass it. Then you define another code, and produce code to\npass both. And so forth until you complete your specification.\u003c/p\u003e\n\u003cp\u003eThis is good because:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWherever you stop, you know what is working.\u003c/li\u003e\n\u003cli\u003eWhen you finish, your code already has tests.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://c2.com/cgi/wiki?PrematureOptimization\"\u003eYou don\u0026rsquo;t have to optimize prematurely.\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThe steps of TDD can be described as \u003ca href=\"https://en.wikipedia.org/wiki/Test-driven_development\"\u003efrom\nWikipedia\u003c/a\u003e\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003eAdd tests\u003c/strong\u003e: These should be useful, \u003cem\u003eand should fail\u003c/em\u003e.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eRun tests\u003c/strong\u003e: Verify that the test fails. If not, go back to 1.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eWrite code\u003c/strong\u003e: Write enough code to pass the test.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eRun tests\u003c/strong\u003e: Verify that \u003cstrong\u003eall\u003c/strong\u003e tests pass. If some of the tests fail, go back to 3.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eRefactor\u003c/strong\u003e: Now that everything passes, make the code looks nicer. This is harder for non-seasoned programmers, because it\u0026rsquo;s vague. Essentially, it means removing duplicate code, magic numbers, clarifying names, etc.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eRun tests\u003c/strong\u003e: Again. Should be done during refactoring, to guarantee you\u0026rsquo;re not breaking anything. But just to be very clear: \u003cem\u003eyour tests should pass at the end of refactoring\u003c/em\u003e.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eRepeat\u003c/strong\u003e.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eThis is one way of describing TDD, but there are other. Many others, by the way.\nIn fact, there are many images describing it, so you can print one and staple it\naround.\u003c/p\u003e\n\u003ch2 id=\"julia\"\u003eJulia\u003c/h2\u003e\n\u003cp\u003eFirst, we are gonna follow the \u003cem\u003epackage\u003c/em\u003e layout in Julia.\n\u003ca href=\"%7B%7Blocal_prefix%7D%7D/automated-testing/\"\u003eThis post\u003c/a\u003e mentions it at the end.\nBasically, we need\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFolder PackageName.jl\n\u003cul\u003e\n\u003cli\u003eFolder \u003ccode\u003esrc\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003ePackageName.jl\u003c/li\u003e\n\u003cli\u003eFolder \u003ccode\u003etest\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eruntests.jl\u003c/li\u003e\n\u003cli\u003eREADME.md\u003c/li\u003e\n\u003cli\u003eLICENSE.md\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIn our example, we\u0026rsquo;re gonna write a program to convert Roman numbers to decimal,\nand vice-versa.\nThis was inspired by \u003ca href=\"http://codingdojo.org/cgi-bin/index.pl?KataRomanNumerals\"\u003ethis\nsite\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eImportant: You should use git, but I\u0026rsquo;ll skip it here\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eLet\u0026rsquo;s begin writing the outline of the project\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emkdir RomanNumerals.jl\ncd RomanNumerals\nmkdir src test\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# File src/RomanNumerals.jl\nmodule RomanNumerals\n\nend\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# File test/runtests.jl\nusing RomanNumerals\n\ninclude(\u0026#34;test_digits.jl\u0026#34;)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis defines the building blocks. Note that \u003ccode\u003etest_digits.jl\u003c/code\u003e does not exist. We\u0026rsquo;re\ngonna create it to test the individuals digits.\u003c/p\u003e\n\u003cp\u003eOur testing environment will consist of having a terminal open at all\ntimes at the root of this project. Our testing command will be\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ejulia -L src/RomanNumerals.jl test/runtests.jl\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThere are different ways to issue the same command, but this is locally good.\u003c/p\u003e\n\u003ch2 id=\"tests\"\u003eTests\u003c/h2\u003e\n\u003cp\u003eJulia comes with a \u003ccode\u003eBase.Test\u003c/code\u003e package, which is the least you should use.\nFor all basic things it is enough. It provides the \u003ccode\u003e@test\u003c/code\u003e macro, which you can\nuse as\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eusing Base.Test\n@test 1 == 1 # This will pass\n@test 1 == 0 # This will fail\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWe\u0026rsquo;re gonna go a step beyong and use\n\u003ca href=\"https://github.com/JuliaLang/FactCheck.jl\"\u003eFactCheck.jl\u003c/a\u003e.\nThis provides more information about the tests.\u003c/p\u003e\n\u003cp\u003eWe\u0026rsquo;re gonna implement the function \u003ccode\u003eroman_to_dec\u003c/code\u003e which receives a string with\nroman numerals and returns the decimal equivalent of the number.\nWith \u003ccode\u003eFactCheck\u003c/code\u003e, our first test will be\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# File test/test_digits.jl\nusing FactCheck\n\nfacts(\u0026#34;Testing digits\u0026#34;) do\n  @fact roman_to_dec(\u0026#34;I\u0026#34;) --\u0026gt; 1\nend\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWhen we run our test, we\u0026rsquo;ll get\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eTesting digits\n  Error :: (line:-1)\n    Expression: roman_to_dec(\u0026#34;I\u0026#34;) --\u0026gt; 1\n    UndefVarError: roman_to_dec not defined\n      ...\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eLook, \u003ccode\u003eroman_to_dec not defined\u003c/code\u003e. Well, let\u0026rsquo;s define it.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# File src/RomanNumerals.jl\n...\nexport roman_to_dec\n\nfunction roman_to_dec(s)\nend\n...\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eRunning again, we get an even better message\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eTesting digits\n  Error :: (line:-1) :: fact was false\n    Expression: roman_to_dec(\u0026#34;I\u0026#34;) --\u0026gt; 1\n      Expected: 1\n      Occurred: nothing\nOut of 1 total fact:\n  Failed:   1\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eExpected 1, nothing ocurred. Well, that\u0026rsquo;s easy.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# File src/RomanNumerals.jl\n...\nfunction roman_to_dec(s)\n  return 1\nend\n...\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eTesting digits\n1 fact verified\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eDone. We\u0026rsquo;re successful. Rejoice. Back to work.\u003c/p\u003e\n\u003cp\u003eWe\u0026rsquo;ve written a test, we\u0026rsquo;ve tested it, we\u0026rsquo;ve written code to fix it, we tested\nit. Not much to refactor, this is a silly example.\u003c/p\u003e\n\u003cp\u003eRepeat. Let\u0026rsquo;s improve the tests.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# File test/test_digits.jl\n...\nfacts(\u0026#34;Testing digits\u0026#34;) do\n  @fact roman_to_dec(\u0026#34;I\u0026#34;) --\u0026gt; 1\n  @fact roman_to_dec(\u0026#34;V\u0026#34;) --\u0026gt; 5\nend\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eRunning, we obtain\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eTesting digits\n  Error :: (line:-1) :: fact was false\n    Expression: roman_to_dec(\u0026#34;V\u0026#34;) --\u0026gt; 5\n      Expected: 5\n      Occurred: 1\nOut of 2 total fact:\n  Verified: 1\n  Failed:   1\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNow, that\u0026rsquo;s better. Improving the code.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# File src/RomanNumerals.jl\n...\nfunction roman_to_dec(s)\n  if s == \u0026#34;I\u0026#34;\n    return 1\n  else\n    return 5\n  end\nend\n...\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis too will pass. Notice that this example is very silly. It is instructional,\nof course. On a real application, you could start with all digits at once, for\ninstance.\u003c/p\u003e\n\u003cp\u003eMore tests and solutions:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# File test/test_digits.jl\n...\nfacts(\u0026#34;Testing digits\u0026#34;) do\n  @fact roman_to_dec(\u0026#34;I\u0026#34;) --\u0026gt; 1\n  @fact roman_to_dec(\u0026#34;V\u0026#34;) --\u0026gt; 5\n  @fact roman_to_dec(\u0026#34;X\u0026#34;) --\u0026gt; 10\nend\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# File src/RomanNumerals.jl\n...\nfunction roman_to_dec(s)\n  if s == \u0026#34;I\u0026#34;\n    return 1\n  elseif s == \u0026#34;V\u0026#34;\n    return 5\n  else\n    return 10\n  end\nend\n...\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNow we can refactor, because it\u0026rsquo;s getting very ugly.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# File src/RomanNumerals.jl\n...\nconst digits = Dict(\u0026#34;I\u0026#34;=\u0026gt;1, \u0026#34;V\u0026#34;=\u0026gt;5, \u0026#34;X\u0026#34;=\u0026gt;10)\n\nfunction roman_to_dec(s)\n  return digits[s]\nend\n...\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWe can also refactor the test.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# File test/test_digits.jl\n...\nfacts(\u0026#34;Testing digits\u0026#34;) do\n  for (digit,value) in [(\u0026#34;I\u0026#34;,1), (\u0026#34;V\u0026#34;,5), (\u0026#34;X\u0026#34;,10)]\n    @fact roman_to_dec(digit) --\u0026gt; value\n  end\nend\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eTest. Now we can add more tests for digits, and it will be much easier (because\nit\u0026rsquo;s refactored) to both create the test and to solve it.\u003c/p\u003e\n\u003cp\u003eUnderstanding the logic now, you can add all the rest of the digits at once.\n\u003cstrong\u003eRemember to test before start fixing,\u003c/strong\u003e even though is very easy now.\nThis could be a breaking moment on your code. If, when trying to fix it, you\nrealize it\u0026rsquo;s not as simple as you expected. Remove the test, and add a smaller\none. At this time it will be very useful to have been using git.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# File test/test_digits.jl\n...\nfacts(\u0026#34;Testing digits\u0026#34;) do\n  for (digit,value) in [(\u0026#34;I\u0026#34;,1), (\u0026#34;V\u0026#34;,5), (\u0026#34;X\u0026#34;,10), (\u0026#34;L\u0026#34;,50), (\u0026#34;C\u0026#34;,100),\n      (\u0026#34;D\u0026#34;,500), (\u0026#34;M\u0026#34;,1000)]\n    @fact roman_to_dec(digit) --\u0026gt; value\n  end\nend\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# File src/RomanNumerals.jl\n...\nconst digits = Dict(\u0026#34;I\u0026#34;=\u0026gt;1, \u0026#34;V\u0026#34;=\u0026gt;5, \u0026#34;X\u0026#34;=\u0026gt;10, \u0026#34;L\u0026#34;=\u0026gt;50, \u0026#34;C\u0026#34;=\u0026gt;100, \u0026#34;D\u0026#34;=\u0026gt;500,\n  \u0026#34;M\u0026#34;=\u0026gt;1000)\n...\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"next-test\"\u003eNext test\u003c/h2\u003e\n\u003cp\u003eWe\u0026rsquo;ve completed a test. Let\u0026rsquo;s do the next.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# File test/runtests.jl\nusing RomanNumerals\n\ninclude(\u0026#34;test_digits.jl\u0026#34;)\ninclude(\u0026#34;test_double_digits.jl\u0026#34;)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eDouble digits are more complex that single digits (by at least at factor of 2?\n:) ). Let\u0026rsquo;s break it down using \u003ccode\u003econtext\u003c/code\u003e.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# File test/test_double_digits.jl\nusing FactCheck\n\nfacts(\u0026#34;Testing double digits\u0026#34;) do\n  context(\u0026#34;Repeated digits\u0026#34;) do\n    @fact roman_to_dec(\u0026#34;II\u0026#34;) --\u0026gt; 2\n  end\nend\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eTesting this will fail (as it should), with a \u003ccode\u003eKeyError: II not found\u003c/code\u003e, because\nwe\u0026rsquo;re using the dictionary, and \u0026ldquo;II\u0026rdquo; is not in it.\u003c/p\u003e\n\u003cp\u003eBefore reading the solution, try to fix it yourself. There are many ways to do\nit.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# File src/RomanNumerals.jl\n...\nfunction roman_to_dec(s)\n  dec = 0\n  for i = 1:length(s)\n    dec += digits[s[i:i]]\n  end\n  return dec\nend\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis fixes it. Now to refactor. You may have noticed that \u003ccode\u003es[i]\u003c/code\u003e does not work\ninside \u003ccode\u003edigits\u003c/code\u003e. That is because julia differentiates characters and single\ndigits strings (like C, unlike Python). One refactor option is to change the\ndictionary to use chars.\nAnother option is to use a better variable instead of s, since it start to\nbecome a nuisance to read.\nYet another, is to use another way to make the sum.\u003c/p\u003e\n\u003cp\u003eSince this post explains the usage of TDD, it ends here.\nYou can continue with this problem until you can make a complete conversor of\nroman to decimal.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2016-03-13-test-driven-development-in-julia/","title":"Test Driven Development in Julia"},{"content":"\u003cp\u003eThis post is just to introduce two new tools I found.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/ftilmann/latexdiff\"\u003eLatexDiff\u003c/a\u003e is a tool that compares two\ntex files and generates a third marking the differences between them.\nIt is great, for instance, when you update a thesis or article, and want to show\nthe differences to your advisor or colleague.\u003c/p\u003e\n\u003cp\u003eBeware that this tool is not without mistakes. Sometimes it fails to mark a\ndifference, specially in equations.\u003c/p\u003e\n\u003cp\u003eThe other tools is \u003ca href=\"https://gitlab.com/latexpand/latexpand\"\u003eLatexpand\u003c/a\u003e, which\nreads a .tex file and replace \u003ccode\u003einput\u003c/code\u003e and \u003ccode\u003einclude\u003c/code\u003e commands with the content of\nthe tex.\nThis tools isn\u0026rsquo;t really necessary in a normal context because latexdiff can do\nthis expansion (or flattening) if you use the argument \u003ccode\u003e--flatten\u003c/code\u003e. I haven\u0026rsquo;t\ntried it, though.\u003c/p\u003e\n\u003cp\u003eWhat I did was use them with git. If you want to compare two files under git,\none simple option is\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003egit checkout old-commit\nlatexpand main.tex \u0026gt; oldmain.tex\ngit checkout new-commit\nlatexpend main.tex \u0026gt; newmain.tex\nlatexdiff oldmain.tex newmain.tex \u0026gt; diffmain.tex\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eI\u0026rsquo;m still going to try it under git difftool.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2016-03-06-latex-tools-for-revision/","title":"LaTeX tools for revision"},{"content":"\u003cp\u003eSemana passada, nos dias 22 a 24 de Fevereiro aconteceu o VIII Simp√≥sio de\nAn√°lise Num√©rica e Otimiza√ß√£o.\nNesse evento, eu apresentei um minicurso de Julia com foco em Otimiza√ß√£o n√£o\nLinear.\nEntre 10 e 15 pessoas participaram no total, entre alunos de gradua√ß√£o, de\np√≥s-gradua√ß√£o, e professores.\nO objetivo principal era apresentar a linguagem e alguns detalhes importante\npara otimiza√ß√£o n√£o linear, o que foi obtido.\nPor outro lado, as aulas foram mais longas do que deveriam, e o conte√∫do ficou\nmuito esparso, pois tive que variar entre o b√°sico e uma aplica√ß√£o mais\navan√ßada.\nPara o pr√≥ximo workshop, provavelmente focarei na introdu√ß√£o, que foi a primeira\naula.\u003c/p\u003e\n\u003cp\u003eO conte√∫do pode ser obtido\n\u003ca href=\"https://github.com/abelsiqueira/julia-workshop\"\u003eaqui\u003c/a\u003e, e consiste de tr√™s\n\u003ca href=\"http://jupyter.org/\"\u003enotebooks em Jupyter\u003c/a\u003e, uma introdu√ß√£o e outros arquivos.\u003c/p\u003e\n\u003cp\u003ePara rodar os notebooks, voc√™ precisa instalar o\n\u003ca href=\"http://jupyter.org/\"\u003eJupyter\u003c/a\u003e, o \u003ca href=\"http://julialang.org/\"\u003eJulia\u003c/a\u003e e o\n\u003ca href=\"https://github.com/JuliaLang/IJulia.jl\"\u003eIJulia\u003c/a\u003e.\nAlternativamente, use o \u003ca href=\"https://juliabox.org/\"\u003eJuliaBox\u003c/a\u003e para rod√°-los online.\u003c/p\u003e\n\u003cp\u003eAl√©m disso, para a segunda aula em diante voc√™ precisa do CUTEst, que pode ser\ninstalado seguindo\n\u003ca href=\"%7B%7Blocal_prefix%7D%7D/installing-cutest-and-cutest.jl/\"\u003eeste post\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eMinha recomenda√ß√£o de editor √© o \u003ca href=\"http://atom.io\"\u003eAtom\u003c/a\u003e, com os plugins\n\u003ccode\u003elanguage-julia\u003c/code\u003e e \u003ccode\u003elatex-completions\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003ePara uma experi√™ncia com testes automatizados, veja tamb√©m\n\u003ca href=\"%7B%7Blocal_prefix%7D%7D/automated-testing/\"\u003eeste post\u003c/a\u003e.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2016-02-28-minicurso-de-julia-para-otimizacao/","title":"Minicurso de Julia para Otimiza√ß√£o"},{"content":"\u003cp\u003eSome time ago, I helped a colleague \u003ca href=\"%7B%7Blocal_prefix%7D%7D/instalando-o-ubuntu-14.10-no-sony-vaio/\"\u003einstall Ubuntu in a Sony Vaio, which ended\nup having SSD\nproblems\u003c/a\u003e.\nToday, his computer started without the bar and menu from Unity.\nOnly the desktop and icons were appearing, and the keyboards shortcuts were also\nnot working.\u003c/p\u003e\n\u003cp\u003eTo fix, I found \u003ca href=\"http://askubuntu.com/questions/17381/unity-doesnt-load-no-launcher-no-dash-appears\"\u003ethis askubuntu\nquestion\u003c/a\u003e,\nthat worked like a charm.\u003c/p\u003e\n\u003cp\u003eThe steps were simply:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eEnter the terminal mode with Ctrl+Shift+F2 (or other number);\u003c/li\u003e\n\u003cli\u003eLogin;\u003c/li\u003e\n\u003cli\u003eEnter the commands\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eexport DISPLAY=:0\nsudo dconf reset -f /org/compiz/\nsetsid unity\n\u003c/code\u003e\u003c/pre\u003e\u003col start=\"4\"\u003e\n\u003cli\u003eReboot with\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003esudo reboot\n\u003c/code\u003e\u003c/pre\u003e\u003col start=\"5\"\u003e\n\u003cli\u003eVerify everything is working now.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eThis was enough to fix it.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2016-02-23-ubuntu-graphic-interface-stopped-working/","title":"Ubuntu graphic interface stopped working"},{"content":"\u003cp\u003eWe\u0026rsquo;re gonna learn how to make a test for your Julia code that runs whenever you\npublish it online. We\u0026rsquo;re gonna use\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://github.com\"\u003eGitHub\u003c/a\u003e to store the code;\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://travis-ci.com\"\u003eTravis CI\u003c/a\u003e to run your tests;\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://coveralls.io\"\u003eCoveralls.io\u003c/a\u003e to verify which lines of code your test are missing.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eAlternatively, for a open source alternative, see \u003ca href=\"http://gitlab.com\"\u003eGitLab\u003c/a\u003e,\nwhich I don\u0026rsquo;t know enough yet.\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003eLet\u0026rsquo;s make a litte code to solve a linear system, paying attention to the\nproblems it may arise, like incorrect dimensions, underdetermined and\noverdetermined systems, singular matrices, etc.\nAnd we\u0026rsquo;ll be using the factorizations, but not \u003ccode\u003e\\\u003c/code\u003e.\u003c/p\u003e\n\u003ch2 id=\"the-math\"\u003eThe math\u003c/h2\u003e\n\u003cp\u003eA simple (not cheap) way to do it is using Singular Value Decomposition (SVD).\nWe have\u003c/p\u003e\n\u003cp\u003e$$\nA = U\\Sigma V^T = \\sum_{i=1}^r \\sigma_i u_i v_i^T.\n$$\u003c/p\u003e\n\u003cp\u003ewhere $r$ is the rank of $A$.\nSince the columns of $V$ form a basis for $\\mathbb{R}^n$ (where $x$ resides),\nthen\u003c/p\u003e\n\u003cp\u003e$$\nx = \\sum_{j=1}^n \\alpha_j v_j.\n$$\u003c/p\u003e\n\u003cp\u003eNow, we have\u003c/p\u003e\n\u003cp\u003e$$\nAx = \\sum_{i=1}^r \\sum_{j=1}^n \\sigma_i \\alpha_j u_i v_i^Tv_j\n= \\sum_{i=1}^r \\sigma_i \\alpha_i u_i\n$$\u003c/p\u003e\n\u003cp\u003eIf the system has a solution, that is $Ax = b$, then we multiply by $u_j^T$,\nobtaining\u003c/p\u003e\n\u003cp\u003e$$\nu_j^TAx = \\sum_{i=1}^r \\sigma_i \\alpha_i u_j^Tu_i\n= \\sigma_j\\alpha_j = u_j^Tb\n$$\u003c/p\u003e\n\u003cp\u003eThus, $ \\alpha_j = \\dfrac{u_j^Tb}{\\sigma_j} $.\nIf the system doesn\u0026rsquo;t have a solution, this still holds. I\u0026rsquo;ll leave the steps to\nyou.\u003c/p\u003e\n\u003cp\u003eIf $r \u0026lt; n$, then $\\alpha$ has undetermined values. However, when that\u0026rsquo;s the\ncase, the solution we\u0026rsquo;ll use is the one with the smallest norm, that is, the one\nthat minimizes $\\Vert x\\Vert$.\nSince $v_i$ are orthonormal, then\n$$ \\Vert x\\Vert^2 = \\sum_{i=1}^n \\alpha_i^2.$$\nSo, in order to minimize the norm of x, we use $\\alpha_i = 0$ for $i \u0026gt; r$.\u003c/p\u003e\n\u003ch2 id=\"the-code\"\u003eThe code\u003c/h2\u003e\n\u003cp\u003eWe\u0026rsquo;ll store the code on\n\u003ca href=\"http://github.com/abelsiqueira/BlogAutomatedTesting.jl\"\u003ethis\u003c/a\u003e GitHub\nrepository.\nNote, however, that it will point to the completed version.\u003c/p\u003e\n\u003cp\u003eA possible implementation of our code is as follows:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# File src/solve_linear.jl\n{% include_relative {{ page.name }}/solve_linear1.jl %}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eTo test it, open julia on the root folder and do\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ejulia\u0026gt; A = rand(5,5); b = rand(5)\njulia\u0026gt; include(\u0026#34;src/solve_linear.jl\u0026#34;)\njulia\u0026gt; norm(linear_system(A,b) - A\\b)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIf the result is around $10^{-16}$, then everything went well.\nVery rarely, the generated matrix could be ill-conditioned.\nRun again, to verify if that\u0026rsquo;s the case.\u003c/p\u003e\n\u003cp\u003eIf everything went well, we\u0026rsquo;ll write a test now.\u003c/p\u003e\n\u003cp\u003eFor now, let\u0026rsquo;s write a simple test running a lot of square linear systems.\nFor each system, to avoid using \u003ccode\u003eA\\b\u003c/code\u003e, we\u0026rsquo;ll create a vector \u003ccode\u003eb\u003c/code\u003e from a known\nsolution. Then we\u0026rsquo;ll \u003cstrong\u003eassure\u003c/strong\u003e that $\\Vert Ax-b\\Vert \u0026lt; \\epsilon$\nand $\\Vert x-e\\Vert \u0026lt; \\epsilon$.\nTo do that, we\u0026rsquo;ll use \u003ccode\u003eBase.Test\u003c/code\u003e.\nNote however, that the condition of the matrix influences the error, and there\nare numerical errors involved. So we\u0026rsquo;ll use the condition\n$$\\Vert x-e\\Vert \u0026lt; 10^{-12} \\text{cond}(A).$$\nThe code is\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# file test/test1.jl\n{% include_relative {{ page.name }}/test1.jl %}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eRun with\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ julia test/test1.jl\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNothing should appear.\u003c/p\u003e\n\u003cp\u003eThe first line is a kludge to read the correct file from wherever the run the\ncode. If you\u0026rsquo;re not building a module, this is ok. But normally you\u0026rsquo;ll want to\nbuild a module. Ignore that for now.\nThe first for varies the dimension, and the second for runs the code a specific\nnumber of times.\nThis totals a hundred square linear systems being run.\nThe \u003ccode\u003e@test\u003c/code\u003e macro verifies that the given expression is true.\nIf any solution is wrong, the code will be wrong. Also, if you use a smaller\ntolerance, the numerical rounding may give a error here.\u003c/p\u003e\n\u003cp\u003eOk, first thing you wanna do now is commit this code.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ git init\n$ git add src test\n$ git commit -m \u0026#39;First commit\u0026#39;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThen, go to GitHub, create an account, then a repository for this code (e.g.\nlinear_system.jl), then push the code.\n\u003cstrong\u003eUse the name with .jl in the end for the repository.\u003c/strong\u003e\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ git add origin http://link/to/your/github/repository/\n$ git push -u origin master\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eEnter your password and verify the code is online.\u003c/p\u003e\n\u003ch2 id=\"online-testing\"\u003eOnline testing\u003c/h2\u003e\n\u003cp\u003eNow go to Travis and create an account. Go to your profile and\nclick on the \u003ccode\u003eSync account\u003c/code\u003e button if necessary.\nFind your repository and set the button to on.\nNow, with the next commit, a test will start. Let\u0026rsquo;s make it happen.\u003c/p\u003e\n\u003cp\u003eCreate a file \u003ccode\u003e.travis.yml\u003c/code\u003e (yes, with a leading dot) with information for the\nbuild. Here\u0026rsquo;s a simple file:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# file .travis.yml\n{% include_relative {{ page.name }}/travis1.yml %}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eInclude the file and push\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ git add .travis.yml\n$ git commit -m \u0026#39;Add .travis.yml\u0026#39;\n$ git push\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNow, go to your travis page, and after a while you\u0026rsquo;ll see your repository with a\ntest running (or already finished, because it is short).\nYou should have a passing test. If not, verify your files again, then the error\non travis.\nNotice that you can see the complete log of what is run.\u003c/p\u003e\n\u003cp\u003eUsing an online automated testing is useful for many reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eEveryone can see if the code is working;\u003c/li\u003e\n\u003cli\u003ePull requests generate a travis build, so you can see if it\u0026rsquo;s working;\u003c/li\u003e\n\u003cli\u003eYou don\u0026rsquo;t forget to test;\u003c/li\u003e\n\u003cli\u003eYou test on a clean environment;\u003c/li\u003e\n\u003cli\u003eYou can test with multiple versions of Julia (or other linguage).\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"coverage\"\u003eCoverage\u003c/h2\u003e\n\u003cp\u003eNow, let\u0026rsquo;s see the code coverage.\nFirst, for coverage you\u0026rsquo;ll need a package to see the coverage, and the service\nto publish the coverage.\u003c/p\u003e\n\u003cp\u003eUse \u003ca href=\"https://github.com/JuliaCI/Coverage.jl\"\u003eCoverage.jl\u003c/a\u003e to see your coverage\n(including locally).\nInstall with\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ejulia\u0026gt; Pkg.add(\u0026#34;Coverage\u0026#34;)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThen run\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ julia --code-coverage=user --inline=no test/test1.jl\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis will generate a file \u003ccode\u003esrc/solve_linear.jl.xxx.cov\u003c/code\u003e with the information.\nThe option \u003ccode\u003e--inline=no\u003c/code\u003e gives more accurate results, but slow down the code.\nYou can see which function are not being run by reading it, but it\u0026rsquo;s better to\nsee it online.\u003c/p\u003e\n\u003cp\u003eTo see a summary, use\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ejulia\u0026gt; using Coverage\njulia\u0026gt; cov = process_folder()\njulia\u0026gt; c, t = get_summary(cov)\njulia\u0026gt; println(\u0026#34;$(100c/t)% of lines covered\u0026#34;)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eBut we want to see it online. So go to Coveralls.io and create an account.\nClick on \u003ccode\u003eAdd repos\u003c/code\u003e and find you repository.\nEnable it, and change the \u003ccode\u003e.travis.yml\u003c/code\u003e file to\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# file .travis.yml\n{% include_relative {{ page.name }}/travis2.yml %}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAfter a success, we install Coverage and run the relevant code.\nCheck your repository on Coveralls to see the results.\nNotice how the \u003ccode\u003eerror\u003c/code\u003e line on our code never gets called.\u003c/p\u003e\n\u003ch2 id=\"improving-to-a-module\"\u003eImproving to a module\u003c/h2\u003e\n\u003cp\u003eIf you want people to use your code, you should use a module in Julia.\nThis allows easy installation of your code, and not much more work.\nChanging to a module is very simple, so I\u0026rsquo;ll run through it.\nThe folders \u003ccode\u003esrc\u003c/code\u003e and \u003ccode\u003etest\u003c/code\u003e are required. But we also need\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eA file in src with the same name as the repository;\u003c/li\u003e\n\u003cli\u003eThe keyword \u003ccode\u003emodule\u003c/code\u003e on that file;\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eexport\u003c/code\u003e the relevant functions;\u003c/li\u003e\n\u003cli\u003eA file \u003ccode\u003etest/runtests.jl\u003c/code\u003e that run the tests;\u003c/li\u003e\n\u003cli\u003eA \u003ccode\u003eREADME.md\u003c/code\u003e for people to know about your thing;\u003c/li\u003e\n\u003cli\u003eA \u003ccode\u003eLICENSE.md\u003c/code\u003e for people to know what they can do with your file;\u003c/li\u003e\n\u003cli\u003eDifferent \u003ccode\u003e.travis.yml\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI\u0026rsquo;m using the name \u003ccode\u003eBlogAutomatedTesting.jl\u003c/code\u003e, so a create the file\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# file src/BlogAutomatedTesting.jl\n{% include_relative {{ page.name }}/main.jl %}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eI edit the file\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# file src/solve_linear.jl\n{% include_relative {{ page.name }}/solve_linear2.jl %}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThen file\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# file test/runtests.jl\ninclude(\u0026#34;test1.jl\u0026#34;)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eand\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# file test/test1.jl\n{% include_relative {{ page.name }}/test12.jl %}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAnd create a \u003ccode\u003eREADME.md\u003c/code\u003e\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# BlogAutomatedTesting.jl\n\nThis package was created from the tutorial on\n[Abel Siqueira\u0026#39;s blog]({{ site.url }}/{{local_prefix}}{{ post.url }})\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe \u003ccode\u003eLICENSE.md\u003c/code\u003e file is up which license you\u0026rsquo;ll choose.\nSee \u003ca href=\"choosealicense.com\"\u003ethis site\u003c/a\u003e for options.\nCopy the contents to the file.\u003c/p\u003e\n\u003cp\u003eNow change \u003ccode\u003e.travis.yml\u003c/code\u003e to treat your code like a package.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# file .travis.yml\n{% include_relative {{ page.name }}/travis3.yml %}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eCommit and verify your update on Travis and Coveralls\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ git add .\n$ git commit -m \u0026#39;Change to module\u0026#39;\n$ git push\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eI hope this was helpful enough.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2016-02-21-automated-testing/","title":"Automated testing"},{"content":"\u003cp\u003eNos dias 22 a 24 de Fevereiro de 2016 acontecer√° o \u003ca href=\"http://www.mat.ufpr.br/verao/2016/m4_otimiza.html\"\u003eVIII Simp√≥sio de An√°lise\nNum√©rica e Otimiza√ß√£o\u003c/a\u003e.\n√â uma √≥tima oportunidade para interagir com colegas e conhecer alguns assuntos\nnovos de pesquisa.\u003c/p\u003e\n\u003cp\u003eEm particular, nesse simp√≥sio apresentarei um minicurso sobre Julia com foco em\nOtimiza√ß√£o. O minicurso √© voltado para pessoas que conhecem um pouco de MatLab\nou alguma outra linguagem. Ser√£o tr√™s dias, com uma introdu√ß√£o √† linguagem,\nalguns exemplos, o \u003ca href=\"http://github.com/JuliaOptimizers/CUTEst.jl\"\u003eCUTEst.jl\u003c/a\u003e,\ne um workflow para criar um pacote de otimiza√ß√£o com transi√ß√£o para C e Fortran.\u003c/p\u003e\n\u003cp\u003eO material para o minicurso est√° dispon√≠vel\n\u003ca href=\"https://github.com/abelsiqueira/julia-workshop\"\u003eaqui\u003c/a\u003e\n(neste momento ainda incompleto).\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2016-02-14-viii-simposio-de-analise-numerica/","title":"VIII Simp√≥sio de An√°lise Num√©rica e Otimiza√ß√£o - Minicurso de Julia"},{"content":"\u003cp\u003eTL; DR: Make a professional web page, like \u003ca href=\"%7B%7Blocal_prefix%7D%7D/../\"\u003emine\u003c/a\u003e,\nand/or a blog, like \u003ca href=\"%7B%7Blocal_prefix%7D%7D\"\u003emine\u003c/a\u003e. Use\n\u003ca href=\"https://jekyllrb.com/\"\u003eJekyll\u003c/a\u003e and my links:\n\u003ca href=\"http://github.com/abelsiqueira/abelsiqueira.github.io\"\u003ework page\u003c/a\u003e,\n\u003ca href=\"http://github.com/abelsiqueira/blog\"\u003eblog page\u003c/a\u003e.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"summary\"\u003eSummary:\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"#summary\"\u003eSummary:\u003c/a\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"#introduction\"\u003eIntroduction\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#general-information\"\u003eGeneral Information\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#using-my-site-as-a-starting-point\"\u003eUsing my site as a starting point\u003c/a\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"#work-page---easy-way\"\u003eWork page - Easy way\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#work-page---hard-way\"\u003eWork page - Hard way\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#blog-page---easy-way\"\u003eBlog page - Easy way\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#blog-page---hard-way\"\u003eBlog page - Hard way\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#both---hard-way\"\u003eBoth - Hard way\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eWe live in the age of information.\nIt is easier than ever to find someone from another site of the planet, and\ncontact them.\nThat said, that is only possible if you are online.\u003c/p\u003e\n\u003cp\u003eMost of us are online, some way or another. If you google your full name,\nchances are you\u0026rsquo;re gonna find some information about you. Possibly a Facebook or\nother social media page.\nMaybe an old blog, that you forgot to delete.\nPossibly things you didn\u0026rsquo;t even know were online, like public documents with\nyour name, or aggregator sites with your information.\nMost of all, you\u0026rsquo;ll probably find things that aren\u0026rsquo;t you.\u003c/p\u003e\n\u003cp\u003eSuppose someone is trying to find you, but they know only your name, and\npossibly occupation. Could they?\nFurthermore, could they contact you?\nDo you have enough information for they to discern if it is really you?\nDo they have to contact you to see your area of expertise? Your projects?\nFor that end, it is usually a good idea to store some information about youself\nin a webpage mantained by yourself.\u003c/p\u003e\n\u003cp\u003eI\u0026rsquo;ll will show an example of web page management that takes little effort, and\nyou can use for a personal page and/or a blog.\u003c/p\u003e\n\u003ch3 id=\"general-information\"\u003eGeneral Information\u003c/h3\u003e\n\u003cp\u003eThe name of the game is\n\u003ca href=\"https://jekyllrb.com/\"\u003eJekyll\u003c/a\u003e. This software mantains web pages using\ntemplates, page snippets, and a little programming to make your job easier.\nIf you enter \u003ca href=\"http://github.com/abelsiqueira/blog\"\u003ethis blog\u003c/a\u003e, you\u0026rsquo;ll see what\nit looks like.\u003c/p\u003e\n\u003cp\u003eThe most important folder is \u003ccode\u003e_posts\u003c/code\u003e. This is where you write your posts. The\nnaming follows the format \u003ccode\u003eYYYY-MM-DD-name-of-the-post.ext\u003c/code\u003e, and you begin the\nfile with a little header like\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e---\nlayout: post\ntitle:  Professional site and blog for researchers, professors and students\ndate:   2016-02-13\nname:   2016-02-13-professional-site-and-blog-for-researchers-professores-and-students\n---\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eand then you can write the content.\nOn a clean project, just creating a new file like this is enough for you to have\na new blog post, but now you want to make it look good.\nTo create a page that is not a post, like my \u003ccode\u003eabout\u003c/code\u003e page, you can simply create\na file inside the folder, create a similar header, and write the page. See my\nown\n\u003ca href=\"https://raw.githubusercontent.com/abelsiqueira%7B%7Blocal_prefix%7D%7Dgh-pages/about.md\"\u003eabout.md\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThe first thing you\u0026rsquo;ll notice is the \u003ccode\u003elayout\u003c/code\u003e part. In the folder \u003ccode\u003e_layouts\u003c/code\u003e\nthere are some templates for a site. For instance, the \u0026ldquo;default\u0026rdquo; layout is an\nhtml documeent that includes a head.html, then a header.html, then the content,\nthen a footer.html. These included files reside in the folder \u003ccode\u003e_includes\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eNotice that the content is written between\n\u003ccode\u003e{{\u003c/code\u003e and \u003ccode\u003e}}\u003c/code\u003e. This is the language\nthat Jekyll interprets to generate the site. This between\n\u003ccode\u003e{%\u003c/code\u003e and \u003ccode\u003e%}\u003c/code\u003e are for\ncommands, and between\n\u003ccode\u003e{{\u003c/code\u003e and \u003ccode\u003e}}\u003c/code\u003e are for variable input.\nFor instance, to print the current page\u0026rsquo;s title somewhere in your text, you may\nuse \u003ccode\u003e{{ page.title }}\u003c/code\u003e. Not very useful so far, but if want\nto put a list of posts in a page you may use\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e{% for pt in site.posts %}\n  - {{ pt.date }}: {{ pt.title }}\n{% endfor %}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis is only a simple example, and you\u0026rsquo;ll probably want to improve your list to\nyour liking.\nIn addition, you can play around with conditionals and filters. For instance,\nthe navigation bar on my work site is a list of all pages with a title, of the\nsame language of the one you\u0026rsquo;re in, ordered by an internal value.\u003c/p\u003e\n\u003cp\u003eTo create a clean site and test these fun things, first install Jekyll (follow\nthe instructions on the site for your system), and then issue the commands in\nthe terminal\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ejekyll new mysite\ncd mysite\njekyll serve -w\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYour site will be built and available at\n\u003ccode\u003elocalhost:4000\u003c/code\u003e.\nTo get the site to look good, however, you\u0026rsquo;ll need to edit a few things, like\nthe layouts for your liking, the css, and so on.\nTo avoid doing that, you can use my own site as a starting point. I show you how\nin the next section.\u003c/p\u003e\n\u003ch3 id=\"using-my-site-as-a-starting-point\"\u003eUsing my site as a starting point\u003c/h3\u003e\n\u003cp\u003eFirst, let\u0026rsquo;s create a work page. If you don\u0026rsquo;t want one, then jump to the blog\npart.\nAlso, if you know git, and are familiar with GitHub, you can jump a few steps.\u003c/p\u003e\n\u003ch4 id=\"work-page---easy-way\"\u003eWork page - Easy way\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a \u003ca href=\"http://github.com\"\u003eGitHub\u003c/a\u003e account.\u003c/li\u003e\n\u003cli\u003eGo to \u003ca href=\"http://github.com/abelsiqueira/abelsiqueira.github.io\"\u003emy github page\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eFork the page, finding the button that says fork and clicking on it.\u003c/li\u003e\n\u003cli\u003eIn your page, with name \u003ca href=\"http://github.com/youruser/abelsiqueira.github.io\"\u003ehttp://github.com/youruser/abelsiqueira.github.io\u003c/a\u003e, go to\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003esettings, and rename the repository to `youruser.github.io`.\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003eEdit the file \u003ccode\u003e_config.yml\u003c/code\u003e and change all pertinent information. Don\u0026rsquo;t leave\nanything with my user.\n\u003cstrong\u003eYou can edit and create files directly on GitHub, but you can\u0026rsquo;t preview\nyour site before publishing. To edit, click on edit, make your modifications\nand then on the bottom of the page click on commit. To create, click on the +\nbutton, and do similar steps.\u003c/strong\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThis is sufficient for a site to appear on \u003ccode\u003ehttp://youruser.github.io\u003c/code\u003e in at\nmost a few minutes. Now you only need to edit to your liking.\nFor a multilingual support (default), I suggest you create files with the format\n\u003ccode\u003ename.lg.md\u003c/code\u003e where \u003ccode\u003ename\u003c/code\u003e is whatever name you want to give, like \u003ccode\u003eresearch\u003c/code\u003e and\n\u003ccode\u003elg\u003c/code\u003e is a language prefix. There is no real need to follow this, but it\u0026rsquo;s\ncleaner.\nThen inside this file, you need to fill\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e---\nlayout: page\ntitle:  Page Title\nkey:    name\nlang:   lg\norder:  Where you want the page in the navigation bar. Lower if leftmost.\npermalink: /lg/name/\n---\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eSee the files \u003ccode\u003eresearch.br.md\u003c/code\u003e and \u003ccode\u003eresearch.en.md\u003c/code\u003e for the differences.\u003c/p\u003e\n\u003cp\u003eIt\u0026rsquo;s very important that pages that are translations for each other to have the\nsame key. Also, for the flag image to appear, you need a file \u003ccode\u003elg.png\u003c/code\u003e in the\nfolder \u003ccode\u003eassets\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eI keep a folder \u003ccode\u003edisciplinas\u003c/code\u003e for my teaching files. You may erase it.\u003c/p\u003e\n\u003cp\u003eIf you don\u0026rsquo;t want a blog, you probably want to delete the navigation bar\u0026rsquo;s\n\u003ccode\u003eblog\u003c/code\u003e, which is hardcoded. Go to file \u003ccode\u003e_includes/header.html\u003c/code\u003e and find the\nlines with \u003ccode\u003e\u0026lt;a class=...Blog\u0026lt;/a\u0026gt;\u003c/code\u003e and delete it.\u003c/p\u003e\n\u003cp\u003eChange the picture.\u003c/p\u003e\n\u003ch4 id=\"work-page---hard-way\"\u003eWork page - Hard way\u003c/h4\u003e\n\u003cp\u003eRead the easy way first, but don\u0026rsquo;t do anything yet.\nDownload my page\u0026rsquo;s source code, either using git or zip.\nModify as you see fit, following the guidelines above.\nTest the page with \u003ccode\u003ejekyll serve -w\u003c/code\u003e as I said before, and build it for\npublishing with \u003ccode\u003ejekyll build\u003c/code\u003e.\nYour page\u0026rsquo;s files will be inside the folder \u003ccode\u003e_site\u003c/code\u003e.\nYou can publish them however you want. If you have a site at your university,\nyou can send these files there (probably). For that, you\u0026rsquo;ll have to check with\nyour IT department.\u003c/p\u003e\n\u003cp\u003eThe advantage of this is that you don\u0026rsquo;t have to use GitHub (or even git) for\nanything. The disavantage is that you need to install Jekyll, and you won\u0026rsquo;t have\na default site location.\u003c/p\u003e\n\u003ch4 id=\"blog-page---easy-way\"\u003eBlog page - Easy way\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a \u003ca href=\"http://github.com\"\u003eGitHub\u003c/a\u003e account.\u003c/li\u003e\n\u003cli\u003eGo to \u003ca href=\"http://github.com/abelsiqueira/blog\"\u003emy github blog page\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eFork the page, finding the button that says fork and clicking on it.\u003c/li\u003e\n\u003cli\u003eEdit the file \u003ccode\u003e_config.yml\u003c/code\u003e and change all pertinent information. Don\u0026rsquo;t leave\nanything with my user.\n\u003cstrong\u003eYou can edit and create files directly on GitHub, but you can\u0026rsquo;t preview\nyour site before publishing. To edit, click on edit, make your modifications\nand then on the bottom of the page click on commit. To create, click on the +\nbutton, and do similar steps.\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003eEdit the \u003ccode\u003eabout.md\u003c/code\u003e file to be about you.\u003c/li\u003e\n\u003cli\u003eDelete all posts in \u003ccode\u003e_posts\u003c/code\u003e, except maybe one to use as a beginning point.\u003c/li\u003e\n\u003cli\u003eWrite your post.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIf you access \u003ccode\u003ehttp://youruser.github.io{{local_prefix}}\u003c/code\u003e, you\u0026rsquo;ll see your blog. Notice\nthat, if you haven\u0026rsquo;t created the work page, \u003ccode\u003ehttp://youruser.github.io\u003c/code\u003e won\u0026rsquo;t\nexist, although your blog will.\nAlso, you won\u0026rsquo;t want the \u003ccode\u003eWork\u003c/code\u003e entry on the navigation bar.\nGo to the file \u003ccode\u003e_includes/header.html\u003c/code\u003e and modify the line\n\u003ccode\u003e\u0026lt;a class=\u0026quot;page-link\u0026quot; href=\u0026quot;/\u0026quot;\u0026gt;Work\u0026lt;/a\u0026gt;\u003c/code\u003e.\nIf you don\u0026rsquo;t have a work page, then delete it.\nIf you do, you can change the \u0026ldquo;/\u0026rdquo; to your work page url.\u003c/p\u003e\n\u003ch4 id=\"blog-page---hard-way\"\u003eBlog page - Hard way\u003c/h4\u003e\n\u003cp\u003eRead everything. Do as in the hard part of the work page.\u003c/p\u003e\n\u003ch4 id=\"both---hard-way\"\u003eBoth - Hard way\u003c/h4\u003e\n\u003cp\u003eIf you want both, when publishing the content of the blog, remember to publish\nthe blog pages to a folder \u003ccode\u003eblog\u003c/code\u003e.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2016-02-13-professional-site-and-blog-for-researchers-professores-and-students/","title":"Professional site and blog for researchers, professors and students"},{"content":"\u003cp\u003eFui convidado a fazer alguma apresenta√ß√£o para os semin√°rios Poincar√© do PET\nMatem√°tica da UFPR.\nIrei falar sobre o M√©todo de Newton para zeros de fun√ß√µes, sistemas n√£o\nlineares, e para otimiza√ß√£o.\u003c/p\u003e\n\u003cp\u003eA apresenta√ß√£o ser√° hoje, dia 20 de Novembro, √†s 17h40. Os slides voc√™ pode\npegar \u003ca href=\"/blog/pres-poincare-2015.pdf\"\u003eaqui\u003c/a\u003e ou ver o c√≥digo no\n\u003ca href=\"https://github.com/abelsiqueira/pres-poincare-2015\"\u003eGitHub\u003c/a\u003e.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2015-11-20-apresentacao-no-poincare---2015/","title":"Apresenta√ß√£o no Poincar√© - 2015"},{"content":"\u003cp\u003eI just got a new notebook at work. This is a HP computer, with a AMD a10-4600M\nprocessor, 4GB of RAM and 320GB of HD space.\nI have a personal notebook with a similar configuration and my work desktop also\nhas a similar configuration, so this isn\u0026rsquo;t a great improvement.\nHowever, we\u0026rsquo;re gonna have an additional monitor, so this is good enough.\nAlso, I\u0026rsquo;ll leave the other one as the always-on screen+irssi computer.\nLet\u0026rsquo;s try to use it. Talk to me again in a week.\u003c/p\u003e\n\u003cp\u003eI\u0026rsquo;ll leave a list of commands I used to install Archlinux on it for future\nreference. Maybe someday I\u0026rsquo;ll comment it, but most things here can be found on\n\u003ca href=\"https://wiki.archlinux.org/index.php/beginners'_guide\"\u003ethe beginners\u0026rsquo; guide\u003c/a\u003e.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003els /sys/firmware/efi/efivars\nip link set enp1s0 down\nnetctl start MYCONFIGURATION\nmkparted /dev/sda\nmklabel gpt\nparted /dev/sda\n(parted) mkpart primary ext4 1MiB 100MiB\n(parted) set 1 boot on\n(parted) mkpart primary ext4 100MiB 30GiB\n(parted) mkpart primary linux-swap 30GiB 38GiB\n(parted) mkpart primary ext4 38GiB 100%\n(parted) quit\nmkfs.ext4 /dev/sda1\nmkfs.ext4 /dev/sda2\nmkfs.ext4 /dev/sda4\nmkswap /dev/sda3\nswapon /dev/sda3\nmount /dev/sda2 /mnt\nmkdir -p /mnt/{boot,home}\nmount /dev/sda1 /mnt/boot\nmount /dev/sda4 /mnt/home\ncd /etc/pacman.d\ncp mirrorlist{,.bk}\n#grep Brazil -A 1 mirrorlist.bk | sed \u0026#39;/--/d\u0026#39; \u0026gt; mirrorlist\ngrep c3sl -B 1 mirrorlist.bk \u0026gt; mirrorlist\npacstrap -i /mnt base base-devel vim screen git\ngenfstab -U /mnt \u0026gt; /mnt/etc/fstab\narch-chroot /mnt /bin/bash\nvim /etc/locale.gen # Uncomment en_US.UTF-8 and others\nlocate-gen\necho LANG=en_US.UTF-8 \u0026gt; /etc/locale.conf\nln -s /usr/share/zoneinfo/America/Sao_Paulo /etc/localtime\nhwclock --systohc --utc\nmkinitcpio -p linux\npacman -S syslinux gptfdisk\nsyslinux-install_update -i -a -m\nvim /boot/syslinux/syslinux.cfg\necho myhostname \u0026gt; /etc/hostname\npacman -S iw wpa_supplicant dialog\npasswd\nexit # From the chroot\ncp /etc/netctl/ufpr-static /mnt/etc/netctl/ufpr-static\numount -R /mnt\nreboot\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003enetctl start ufpr-static\npacman -S xorg-server i3-wm i3lock i3status xorg-xinit xorg-twm xterm dmenu\npacman -S xf86-input-synaptics\nuseradd abel -g users -G wheel -m -s /bin/bash\npasswd abel\nvisudo\n# Log as abel\nstartx # possibly pkill X\n# Download b43-firmware and install it\n# Rejoice\n\u003c/code\u003e\u003c/pre\u003e","description":null,"image":null,"permalink":"/blog/2015-11-16-new-computer-at-work/","title":"New computer at work"},{"content":"\u003cp\u003eThis post will tell you how to install CUTEst using a different tool that makes\nit much easier. Also, I\u0026rsquo;ll install CUTEst.jl, the CUTEst interface for Julia.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eEdit:\u003c/strong\u003e \u003cem\u003eNow, CUTEst.jl install CUTEst by itself. Check \u003ca href=\"https://abelsiqueira.com/blog/nlpmodelsjl-cutestjl-and-other-nonlinear-optimization-packages-on-julia/\"\u003ethis\npost\u003c/a\u003e.\nAlso, for Linux, I\u0026rsquo;ve created \u003ca href=\"https://github.com/abelsiqueira/linux-cutest\"\u003ethis CUTEst\ninstaller\u003c/a\u003e, which should be\neasier to use. February, 11, 2017\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eEdit:\u003c/strong\u003e \u003cem\u003eSome corrections were made on February, 15, 2016\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eEdit:\u003c/strong\u003e \u003cem\u003eSome corrections were made on November, 11, 2015\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eBy now you probably know\n\u003ca href=\"http://ccpforge.cse.rl.ac.uk/gf/project/cutest/wiki\"\u003eCUTEst\u003c/a\u003e,\nthe repository for testing and comparing nonlinear programming algorithms.\nIt\u0026rsquo;s widely used in the community for some time (considering CUTE and CUTEr,\nthe previous versions).\nIf not, this is a good change to test it, using\n\u003ca href=\"http://www.julialang.org\"\u003eJulia\u003c/a\u003e to play around.\nThis is a not a post to convince you to use Julia, but I have to say that it is\nmuch easier to use CUTEst on Julia than on MatLab.\nSo, if you are starting on it, I suggest you take a look.\u003c/p\u003e\n\u003cp\u003eWe will use Homebrew to install CUTEst, for two reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIt\u0026rsquo;s much easier (when you learn it)\u003c/li\u003e\n\u003cli\u003eJulia requires shared libraries, that the original installation did not\nprovide.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eHomebrew is a kind of package manager (such as apt-get, pip, etc.).\nFor linux, there are many things that we don\u0026rsquo;t need from Homebrew, because you\nnormally already have a package manager. However, Homebrew is widely used by OSX\nusers, so it has a lot of packages.\nThe linux version is \u003ca href=\"https://github.com/Homebrew/linuxbrew\"\u003eLinuxbrew\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThe installation is quite simple:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eInstall brew\u003c/li\u003e\n\u003cli\u003eInstall CUTEst\u003c/li\u003e\n\u003cli\u003eInstall CUTEst.jl\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI just made these steps and record my terminal, so you can check\n\u003ca href=\"https://asciinema.org/a/27127\"\u003eAsciinema\u003c/a\u003e, or the embedded version on the\nbottom of the page. Be warned, though, that I was \u0026ldquo;cold running\u0026rdquo; them, so some\nparts are very slow.\u003c/p\u003e\n\u003cp\u003eTo install brew, I recommend you check the page. For the impatient,\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eruby -e \u0026#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/linuxbrew/go/install)\u0026#34;\necho \u0026#39;export PATH=\u0026#34;$HOME/.linuxbrew/bin:$PATH\u0026#34;\u0026#39; \u0026gt;\u0026gt; $HOME/.bashrc\nsource $HOME/.bashrc\nsudo apt-get install build-essential subversion\nbrew doctor\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eTo install CUTEst, read the\n\u003ca href=\"https://github.com/optimizers/homebrew-cutest\"\u003etap cutest\u003c/a\u003e.\nAgain, for the impatient\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ebrew tap optimizers/cutest\nbrew install cutest\nbrew install mastsif\nfor f in archdefs mastsif sifdecode cutest; do \\\n  echo \u0026#34;source $(brew --prefix $f)/$f.bashrc\u0026#34; \u0026gt;\u0026gt; \\\n  $HOME/.bashrc; \\\ndone\necho \u0026#39;export LD_LIBRARY_PATH=\u0026#34;$HOME/.linuxbrew/lib:$LD_LIBRARY_PATH\u0026#34;\u0026#39; \u0026gt;\u0026gt; $HOME/.bashrc\nsource $HOME/.bashrc\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis should get CUTEst installed.\nNotice the \u003ccode\u003eLD_LIBRARY_PATH\u003c/code\u003e variable, which points to where the CUTEst library\nwill be.\u003c/p\u003e\n\u003cp\u003eTest it with\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ebrew test sifdecode\nbrew test cutest\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThat\u0026rsquo;s it. You have CUTEst installed to use with Fortran or C.\nA can\u0026rsquo;t provide a simple example, because they aren\u0026rsquo;t simple (enough).\nI\u0026rsquo;ll now go to Julia, and I recommend you try it.\u003c/p\u003e\n\u003cp\u003eTo install Julia, go to their page, then downloads, then download the\nstatic version of the stable release (or do what you want, I\u0026rsquo;m not your boss).\nThen, in julia, to install\n\u003ca href=\"https://github.com/abelsiqueira/CUTEst.jl\"\u003eCUTEst.jl\u003c/a\u003e,\nissue the commands\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ePkg.clone(\u0026#34;https://github.com/abelsiqueira/CUTEst.jl\u0026#34;)\nPkg.checkout(\u0026#34;CUTEst\u0026#34;, \u0026#34;fix/issue4\u0026#34;)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIf nothing goes wrong, then you can play around.\nFor instance, to open problem HS32 and get the objective function value at point\n(2,3), we do\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eusing CUTEst\nnlp = CUTEstModel(\u0026#34;HS32\u0026#34;)\nf = obj(nlp, [2.0;3.0])\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIf you\u0026rsquo;re familiar with CUTEst, you can use the classic functions \u003ccode\u003ecfn\u003c/code\u003e and\n\u003ccode\u003eufn\u003c/code\u003e too, in the default way (as called from C) or a more Julian way.\nThis would become too long to explain now, so I\u0026rsquo;ll make a post in a few days (or\nmonths).\nIf you need it, please contact me.\u003c/p\u003e\n\u003cp\u003eThis concludes the new installation of CUTEst.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eWarning\u003c/strong\u003e: Due to current limitations we cannot open two problems at the same\ntime in CUTEst without the possibility of a segmentation fault.\nSo, if you need to run cutest for a list of problems, I suggest you use a bash\nscript to loop over each problem and call your Julia code passing the problem as\nan input argument.\u003c/p\u003e\n\u003cp\u003eThs embedded Asciinema video is below.\u003c/p\u003e\n\u003cscript type=\"text/javascript\" src=\"https://asciinema.org/a/27127.js\"\nid=\"asciicast-27127\" async\u003e\u003c/script\u003e\n","description":null,"image":null,"permalink":"/blog/2015-10-01-installing-cutest-and-cutestjl/","title":"Installing CUTEst and CUTEst.jl"},{"content":"\u003cp\u003eHoje aconteceu a Oficina de Ferramentas Computacionais para\nPesquisadores.\nComo era esperado, tivemos um pouco de atrasado, mas n√£o tanto.\nConseguimos come√ßar uns 5 minutos depois do esperado, mas n√£o conseguimos fazer\nchamada. O per√≠odo da manh√£ teve por volta de 20 participantes, sendo que alguns\neram meus alunos que vieram pelo Julia. Algumas pessoas foram embora durante o\nalmo√ßo, e a oficina acabou com 15 participantes.\u003c/p\u003e\n\u003cp\u003eVeja tamb√©m o \u003ca href=\"http://blog.rgaiacs.com/2015/05/31/ufpr.html\"\u003epost do Raniere\u003c/a\u003e\nsobre a oficina.\u003c/p\u003e\n\u003ch2 id=\"material\"\u003eMaterial\u003c/h2\u003e\n\u003cp\u003eEu utilizei os materiais\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"/blog/2015-05-30-slides-julia.pdf\"\u003eSlides de Julia\u003c/a\u003e -\n\u003ca href=\"http://gitlab.com/abelsiqueira/pres-julia\"\u003eC√≥digo\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/blog/2015-05-30-slides-git.pdf\"\u003eSlides de Git\u003c/a\u003e -\n\u003ca href=\"http://github.com/abelsiqueira/workshop\"\u003eC√≥digo\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"dificuldades\"\u003eDificuldades\u003c/h2\u003e\n\u003cp\u003eComo √© natural nesse tipo de evento, tivemos algumas dificuldades com\ncompatibilidade. Algumas pessoas n√£o conseguiram instalar as ferramentas, outras\ntinham vers√µes diferentes. Felizmente, conseguimos arrumar a maior parte desses\nproblemas.\u003c/p\u003e\n\u003cp\u003eA internet tamb√©m foi um problema. Os pontos de cabo eram com IP est√°tico, ent√£o\ntrouxemos um roteador e configuramos internet wireless.\nIsso nos permitiu instalar programas para os que n√£o conseguiram, e tamb√©m nos\npermitiu fazer a parte de git remoto. Infelizmente a internet estava muita\nlenta, em muitos momentos, por motivos que n√£o sabemos.\u003c/p\u003e\n\u003cp\u003eTamb√©m n√£o conseguimos apoio financeiro, ent√£o trouxemos nossa cafeteira e\ncompramos dois pacotes de bolacha √°gua e sal, daquelas redondas, tradicionais\npara evento.\u003c/p\u003e\n\u003cp\u003eTamb√©m tivemos o problema de tempo, mas isso n√£o pode ser resolvido \u003cem\u003eno tempo\ndispon√≠vel\u003c/em\u003e.\u003c/p\u003e\n\u003ch2 id=\"planos-futuros\"\u003ePlanos futuros\u003c/h2\u003e\n\u003cp\u003eConsidero essa oficina um sucesso. Tivemos v√°rios interessados, e conseguimos\npassar uma boa quantidade de conte√∫do. Todos sa√≠ram com alguma coisa\nfuncionando, e a maioria saiu com um usu√°rio do GitHub.\u003c/p\u003e\n\u003cp\u003eIdealmente, faremos outras oficinas, e agora que temos mais pessoas\ncapacitando-se, podemos ter outras pessoas apresentando. E fazer algumas\napresenta√ß√µes mais avan√ßadas.\u003c/p\u003e\n\u003ch2 id=\"agradecimentos\"\u003eAgradecimentos\u003c/h2\u003e\n\u003cp\u003eAgrade√ßo o Raniere, por ter aceitado participar do evento, e tamb√©m\n√† Kally Chung e ao \u003ca href=\"https://fernandomayer.github.io/\"\u003eFernando Mayer\u003c/a\u003e que\ntoparam ficar de monitores.\u003c/p\u003e\n\u003ch2 id=\"certificados\"\u003eCertificados\u003c/h2\u003e\n\u003cp\u003eAlguns certificados ser√£o emitidos, e ser√£o disponibilizados aqui, ou enviados\npor e-mail, em breve.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2015-05-30-resultado-da-oficina-de-ferramentas-computacionais-para-pesquisadores/","title":"Resultado da Oficina de Ferramentas Computacionais Para Pesquisadores"},{"content":"\u003cp\u003eI\u0026rsquo;ve struggled with remembering appointments and tasks for a long time.\nDuring my undergraduate courses, I learned to manage the tasks I had because\nthey were few and regular.\nIt\u0026rsquo;s easy to remember you have class at 7h30 if every weekday you have class at\n7h30. Also, you normally have a group of people around you doing the same\nthings, so someone usually remembers when something is due.\u003c/p\u003e\n\u003cp\u003eAs years advanced, I started using what I could to remeber tasks. Mostly sending\ne-mails to myself, setting alarms on my phone and using Google Agenda.\nWell, I still send e-mails to myself, or mark e-mails as unread because it\nannoys me to have unread messages, but I mostly use that for \u003cem\u003eread you later\u003c/em\u003e\nthings, or things without time limit.\nAlso, I still use the phone alarm to remind myself that a class will start soon.\nHowever, some things have a time frame, so using a calendar-type tool is\nnecessary, and I also needed a way to move things around.\u003c/p\u003e\n\u003cp\u003eI have tried Google Agenda,\n\u003ca href=\"https://trello.com/abelsiqueira/recommend\"\u003eTrello\u003c/a\u003e,\n\u003ca href=\"http://taskwarrior.org/\"\u003eTask Warrior\u003c/a\u003e, and\npost-its on my computed screen.\nTrello is a good for collaborative work, but is not open source. I used it\nmainly to work in a group project.\nTask Warrior is a good CLI tool, which I have installed, but there are too many\nthings to learn for it to be effective.\nPost-its are not home-work shared.\u003c/p\u003e\n\u003cp\u003eNow I am trying another tool:\n\u003ca href=\"https://www.roaringpenguin.com/products/remind\"\u003eremind\u003c/a\u003e.\nRemind is only a CLI tool that reads a file and prints what you want.\nThere are some GUI tools that use remind, but I like the CLI approach.\nIt has a calendar feature that prints by week, and lets you color appointments,\nmark recurrent events, holidays, and so forth.\nYou can also print a printable version of your calendar (PS format), which is\nnice, when you can predict a month (not my case yet).\nThe reasons I like remind are that it is a CLI tool, it\u0026rsquo;s open source and you\nedit a reminder file to use it.\u003c/p\u003e\n\u003cp\u003eTo use it, first install according to your distribution, then create a\n\u003ccode\u003ereminders.rem\u003c/code\u003e file. In this file, write your appointments, following a\nspecific format. For instance\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eREM 13 Apr 2015 SPECIAL COLOR 255 0 0 Write about remind\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis should be self-explanatory. Then, run\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eremind reminders.rem\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis should print your reminders for your current day. If it happens that today\nisn\u0026rsquo;t 13 Apr 2015 for you, then probably you\u0026rsquo;ll have an empty output. Make the\nappropriate changes and run again.\nMy preferred syntax is\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eremind -ccu+3 reminders.rem\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003ccode\u003e-c\u003c/code\u003e prints a calendar;\n\u003ccode\u003e-cc\u003c/code\u003e prints a calendar in colors;\n\u003ccode\u003e-ccu\u003c/code\u003e prints a calendar in colors with unicode chars;\n\u003ccode\u003e-ccu+3\u003c/code\u003e print today plus 3 weeks of a calendar etc..\u003c/p\u003e\n\u003cp\u003eIn my setup, I use \u003ca href=\"http://entrproject.org/\"\u003eentr\u003c/a\u003e, and leave a workspace only\nfor remind. Whenever I update my remind file, the calendar is updated. Also, to\nwork from home, my remind file is inside my Dropbox, and I link it to my home\nfolder in each computer.\nThe full command I use is\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003els .reminders | entr sc -c \u0026#34;clear; remind -b1 -ccu+5 -w$COLUMNS .reminders \\\n| head -n $LINES\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e","description":null,"image":null,"permalink":"/blog/2015-04-13-a-cli-reminder-remind/","title":"A CLI Reminder - Remind"},{"content":"\u003ch2 id=\"sobre\"\u003eSobre\u003c/h2\u003e\n\u003cp\u003eNo dia 30 de Maio de 2015 acontecer√° uma Oficina de Ferramentas Computacionais\npara Pesquisadores.\nEssa oficina ser√° focada em tr√™s ferramentas b√°sicas para desenvolvimento de\nsoftware:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eBash\u003c/li\u003e\n\u003cli\u003eGit\u003c/li\u003e\n\u003cli\u003eJulia\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eO Bash √© o terminal tradicinal dos sistemas GNU/Linux (a tela preta).\nAs possibilidades de uso s√£o ilimitadas, mas vamos focar no b√°sico,\ntentando chegar at√© a cria√ß√£o de um script simples.\u003c/p\u003e\n\u003cp\u003eO Git √© uma ferramenta para controlar vers√µes de softwares e outros arquivos.\nVoc√™ consegue guardar vers√µes anteriores dos seus arquivos, assim como vers√µes\nalternativas, com uma estrutura escondida que melhora a organiza√ß√£o e o design.\nEla √© usada principalmente para controle de vers√µes de software, permitindo que\ncada programador saiba o que foi feito por quem e quando, mas tamb√©m pode ser\nutilizado para controle de vers√µes de artigos, teses e apresenta√ß√µes.\nO \u003ca href=\"https://github.com/lpoo/modelo_tese_imecc\"\u003emodelo de tese do IMECC - UNICAMP\u003c/a\u003e\nusa o Git, e este site est√° \u003ca href=\"https://github.com/abelsiqueira/abelsiqueira.github.io\"\u003earmazenado usando o\nGit\u003c/a\u003e.\n√â uma das ferramentas principais para gerenciamento de vers√µes, e \u003ca href=\"https://git.wiki.kernel.org/index.php/GitProjects\"\u003emuitos\nprojetos importantes o usam\u003c/a\u003e.\nO Git pode ser usado apenas em seu computador, mas o uso comum envolve algum\nservidor remoto (principalmente para colabora√ß√£o). A oficina tentar√° mostrar um\npouco de cada.\u003c/p\u003e\n\u003cp\u003eJulia √© uma nova linguagem de programa√ß√£o que tem o objetivo de ser r√°pido como\nC/Fortran, permitindo uma interfaca simples entre C e Fortran, e com sintaxe\nparecida com a de Matlab e Python.\nComo √© uma linguagem livre, acreditamos ser uma escolha melhor que o Matlab para\nsoftware livre.\nTamb√©m √© uma boa linguagem inicial por ser pr√°tica, e tem muito espa√ßo para\nexpans√£o por nova.\u003c/p\u003e\n\u003ch2 id=\"ministrantes\"\u003eMinistrantes\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eEu - Trabalho com GNU/Linux desde minha gradua√ß√£o,\ne trabalho com software livre. Meus trabalhos individuais s√£o de c√≥digo\naberto, e acredito que esse √© o caminho mais correto para o desenvolvimento\nacad√™mico.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://rgaiacs.com/\"\u003eRaniere Gaia\u003c/a\u003e - Estuda matem√°tica aplicada na\nUniversidade Estadual de Campinas, e trabalha em alguns projetos de n√≠vel\ninternacional. Faz contribui√ß√µes para Mozilla, e √© um membro mantenedor do\nSoftware Carpentry.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"requerimentos\"\u003eRequerimentos\u003c/h2\u003e\n\u003cp\u003ePara participar da oficina voce \u003cstrong\u003eprecisa de um computador port√°til\u003c/strong\u003e\ncom alguns softwares instalados.\n\u003cstrong\u003eIdealmente\u003c/strong\u003e, um computador com algum tipo Unix (Ubuntu, Fedora, OSX) √© melhor\npara o desenvolvimento \u003cem\u003ena opini√£o do autor da p√°gina\u003c/em\u003e.\n\u003ca href=\"http://www.quora.com/Is-it-important-for-modern-programmers-to-know-use-Unix-Why\"\u003eVeja\ndiscuss√µes\u003c/a\u003e.\nAl√©m disso, os instrutores n√£o tem o conhecimento para dar suporte completo no\nWindows (Aceitamos volunt√°rios).\n(Nota: Teremos alguns computadores com sistema operacional Windows dispon√≠veis,\nmas n√£o teremos tempo para testar todos, ou instalar tudo que julgamos\nessencial).\u003c/p\u003e\n\u003cp\u003eSoftwares que voc√™ precisa\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eBash\u003c/li\u003e\n\u003cli\u003eNo GNU/Linux, o Bash j√° deve estar instalado.\nProcure pelo \u003ccode\u003eterminal\u003c/code\u003e ou \u003ccode\u003econsole\u003c/code\u003e no seu sistema. Quando ele abrir,\ndigite \u003ccode\u003ebash --version\u003c/code\u003e.\nUma mensagem deve aparecer indicando qual vers√£o est√° instalada.\u003c/li\u003e\n\u003cli\u003eNo OSX, o terminal padr√£o tamb√©m √© o Bash. Voc√™ pode acessar pelo\n\u003ccode\u003e/Applications/Utilities/\u003c/code\u003e. Dica: coloque o terminal no dock.\u003c/li\u003e\n\u003cli\u003eNo Windows existem algumas op√ß√µes,\numa delas √© o \u003ca href=\"http://msysgit.github.io/\"\u003eGit Bash\u003c/a\u003e, que voc√™ j√° usa para o\nGit tamb√©m.\u003c/li\u003e\n\u003cli\u003eGit\u003c/li\u003e\n\u003cli\u003eNo Windows, instale o \u003ca href=\"http://msysgit.github.io/\"\u003eGit Bash\u003c/a\u003e, que falei\nacima.\n\u003cstrong\u003eNota\u003c/strong\u003e: Uma das op√ß√µes da instala√ß√µes √© sobre o fim de linha (line\nending). Escolha a op√ß√£o de seguir o padr√£o Unix (ou algo parecido).\u003c/li\u003e\n\u003cli\u003eNo OSX, voc√™ pode instalar o Git para Mac baixando um instalador\n\u003ca href=\"http://sourceforge.net/projects/git-osx-installer/files/\"\u003eaqui\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eNum computador tipo Unix, siga as \u003ca href=\"http://git-scm.com/downloads\"\u003einstru√ß√µes\u003c/a\u003e.\nTeste que o git foi instalado fazendo \u003ccode\u003egit --version\u003c/code\u003e no seu terminal.\u003c/li\u003e\n\u003cli\u003eJulia: Siga as \u003ca href=\"http://julialang.org/downloads/\"\u003einstru√ß√µes\u003c/a\u003e.\nPara testar, verifique que o Julia foi instalado abrindo o terminal de\nJulia, e verificando que o texto introdut√≥rio cont√©m \u003ccode\u003eVersion 0.x.x\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eUm editor de texto, preferencialmente com suporte a UTF-8, c√≥digo colorido\nautomaticamente, indenta√ß√£o autom√°tica e inclus√£o de espa√ßos no lugar de\nTAB. Existem algumas op√ß√µes, e se voc√™ n√£o tem prefer√™ncia nenhuma, o\n\u003ca href=\"https://atom.io/\"\u003eatom.io\u003c/a\u003e √© um bom para come√ßar. Se for us√°-lo,\nrecomendamos buscar pelo pacote \u003ccode\u003elanguage-julia\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eCertifique-se de ter essas ferramentas instaladas ANTES do evento\u003c/strong\u003e. Entre em\ncontato em caso de d√∫vidas.\u003c/p\u003e\n\u003ch2 id=\"inscri√ß√µes\"\u003eInscri√ß√µes\u003c/h2\u003e\n\u003cp\u003eAs inscri√ß√µes est√£o fechadas. Caso tenha interesse em participar, me mande um\ne-mail para confirmar se ainda temos vagas.\u003c/p\u003e\n\u003ch2 id=\"cronograma\"\u003eCronograma\u003c/h2\u003e\n\u003cp\u003eO evento acontecer√° no dia 30 de Maio de 2015, seguindo o cronograma abaixo:\n(\u003cem\u003eNota: Mudamos o hor√°rio de Julia para melhor acomodar o cronograma\u003c/em\u003e).\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e08:00\u003c/strong\u003e : Abertura\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e08:30\u003c/strong\u003e : Bash (com Raniere)\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e09:30\u003c/strong\u003e : \u003cem\u003eCoffee Break\u003c/em\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e10:00\u003c/strong\u003e : Julia (com Abel)\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e11:30\u003c/strong\u003e : Almo√ßo\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e13:30\u003c/strong\u003e : Git Local (com Abel)\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e15:00\u003c/strong\u003e : \u003cem\u003eCoffee Break\u003c/em\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e15:30\u003c/strong\u003e : Git Remoto (com Raniere)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"local\"\u003eLocal\u003c/h2\u003e\n\u003cp\u003eUtilizaremos o Laborat√≥rio de Matem√°tica e Desenho (LAMADE) no bloco PC, sala\nPC12.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2015-04-13-workshop-de-ferramentas-computacionais-maio-de-2015/","title":"Workshop de Ferramentas Computacionais - Maio de 2015"},{"content":"\u003cp\u003eNo dia 24 de Fevereiro de 2015 aconteceu o (primeiro dia do) VII Simp√≥sio de\nAn√°lise Num√©rica e Otimiza√ß√£o.\nParticipei deste congresso fazendo uma apresenta√ß√£o sobre\n\u003ca href=\"/blog/2015-02-25-vii-simposio.pdf\"\u003eFerramentas Computacionais para\nPesquisadores\u003c/a\u003e\n(ver \u003ca href=\"http://github.com/abelsiqueira/pres-ferramentas-computacionais\"\u003ec√≥digo\u003c/a\u003e).\u003c/p\u003e\n\u003cp\u003eNesta apresenta√ß√£o, introduzo algumas ferramentas que considero bastante\nimportantes para pesquisadores, principalmente da √°rea de matem√°tica\ncomputacional.\nUm resumo do que apresento √©\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eAprenda outras linguagens. Recomendo, por exemplo, conhecer Python ou Ruby,\nShell e Makefile. Com essas ferramentas j√° √© poss√≠vel automatizar testes e\nfazer scripts com uso variado. Makefile, por exemplo, √© uma das maneiras\nmais usadas de se instalar programas (no Unix).\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eConhe√ßa a linguagem \u003ca href=\"http://www.julialang.org\"\u003eJulia\u003c/a\u003e.\n√â uma linguagem com foco na matem√°tica computacional, considerando ainda que\nvoc√™ ir√° querer utilizar c√≥digo em C e Fortran, e com sintaxe parecido com a\nde MatLab/Octave. √â uma linguagem nova, mas tem potencial para ser o pr√≥ximo\nconcorrente do MatLab/Octave, e √© livre.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDentro do Julia, conhe√ßa o \u003ca href=\"http://www.juliaopt.org\"\u003eJuliaOpt\u003c/a\u003e, que √©\num grupo que est√° desenvolvendo ferramentas de otimiza√ß√£o em Julia.\nDesde interfaces para softwares conhecidos, at√© linguagens de modelagem,\npassando por implementa√ß√µes de m√©todos de otimiza√ß√£o n√£o-linear, tanto\npuramente em Julia, quanto utilizando c√≥digos de baixo n√≠vel.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eTamb√©m anunciei que estamos trabalhando no\n\u003ca href=\"http://github.com/optimizers/CUTEst.jl\"\u003eCUTEst.jl\u003c/a\u003e, uma interface para o\n\u003ca href=\"http://ccpforge.cse.rl.ac.uk/gf/project/cutest/wiki\"\u003eCUTEst\u003c/a\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eEscolha um editor e um ambiente de desenvolvimento.\nSugiro ver algumas op√ß√µes (Vim, Emacs, Atom, Sublime Text, Eclipse), testar,\ne ver qual combina mais com voc√™. Em adi√ß√£o, conhe√ßa o Sharelatex e/ou o\nWritelatex.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eConhe√ßa o \u003ca href=\"http://github.com/abelsiqueira/perprof-py\"\u003eperprof-py\u003c/a\u003e,\nque √© uma ferramenta para gerar perfis de desempenho, com gr√°ficos de alta\nqualidade.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eConhe√ßa o \u003ca href=\"http://git-scm.com\"\u003egit\u003c/a\u003e, que √© uma ferramenta para controle de\nvers√£o, que voc√™ pode usar sozinho; ou em grupo; fazer ramifica√ß√µes;\nverificar vers√µes anteriores; misturar vers√µes; trabalhar online; dentro\noutras.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eConhe√ßa o \u003ca href=\"http://github.com\"\u003eGitHub\u003c/a\u003e, que √© um site onde voc√™ pode\ncolocar o c√≥digo que foi feito com git.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eConhe√ßa o \u003ca href=\"http://travis-ci.org\"\u003eTravis CI\u003c/a\u003e, que √© um servi√ßo que baixa\nseu c√≥digo do GitHub e roda testes (definidos por voc√™) nele, sempre que\nvoc√™ subir o seu c√≥digo.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eConhe√ßa o \u003ca href=\"http://coveralls.io\"\u003eCoveralls.io\u003c/a\u003e, que √© um servi√ßo que\nverifica seus testes e diz que parte do seu c√≥digo foi verificado, e qual\nn√£o foi.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eTikZ e PgfPlots do Latex: Comentei um pouco sobre gr√°ficos usando esses\npacotes, e mostrei alguns exemplos.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eTamb√©m falei sobre o \u003ca href=\"http://www.software-carpentry.org\"\u003eSoftware Carpentry\u003c/a\u003e,\nque √© uma organiza√ß√£o sem fins lucrativos que realiza workshops e promove\nconhecimento mundialmente. Comentei tamb√©m sobre o trabalho do\n\u003ca href=\"http://rgaiacs.com\"\u003eRaniere Silva\u003c/a\u003e no Software Carpentry, e do\n\u003ca href=\"http://catarse.me/pt/programacaocientifica\"\u003etrabalho que ele est√°\npropondo\u003c/a\u003e para os pr√≥ximos meses.\u003c/p\u003e\n\u003cp\u003eAlgumas boas perguntas foram feitas, e gostaria de parafrase√°-las e\natualizar minha resposta para algumas delas.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003ePor que sair do MatLab para o Julia?\u003c/strong\u003e\nRecomendo sair do MatLab porque ele √© um software propriet√°rio, pra come√ßar.\nMas desconsiderando isso, e tamb√©m considerando o Octave, dou a seguinte\nresposta: O Julia est√° sendo desenvolvido com o intuito de substituir o\nMatLab, sabendo que o matem√°tico computacional costuma fazer c√≥digo que\nprecisa de velocidade em C ou Fortran.\nA interface para C e Fortran em Julia √© consideravelmente f√°cil,\ne isso facilita o processo de criar um c√≥digo que voc√™ v√™ que funciona, e\nposteriormente otimiz√°-lo.\nGostaria de acrescentar a ressalva que Julia √© uma linguagem nova, e\nobviamente n√£o tem tudo que gostar√≠amos implementado. Seu c√≥digo pode\nquebrar. Mas vale a pena conhecer para saber se vale investir.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePor que sair do Python para o Julia?\u003c/strong\u003e\nN√£o sei se voc√™ deve. O Python b√°sico n√£o √© suficiente para um matem√°tico\ncomputacional, mas eu sei que existem v√°rios pacotes que conseguem deixar o\nPython muito eficiente para An√°lise Num√©rica e Otimiza√ß√£o. Tamb√©m √© poss√≠vel\nfazer uma transi√ß√£o C com Python, mas n√£o conhe√ßo, logo n√£o posso julgar.\nAtualmente, provavelmente, o Python parece ser mais eficiente.\nE j√° que estamos aqui, se voc√™ conseguir tirar algu√©m do MatLab para o\nPython, j√° √© uma vit√≥ria.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePor que usar o TikZ/PgfPlots no lugar desta outra ferramenta de\ngr√°ficos?\u003c/strong\u003e\nSe for o MatLab, vide meu \u003cem\u003erant\u003c/em\u003e anterior sobre MatLab ser propriet√°rio.\nPara outras ferramentas, n√£o sei. Muitas ferramentas fazem um trabalho, no\nm√≠nimo, t√£o bom quanto o TikZ/PgfPlots, e.g., o MatplotLib (que\nusamos no perprof, junto com o PgfPlots).\nUma coisa que eu gosto √© misturar com o Beamer, gerando figuras iterativas\n(n√£o interativas).\nEnt√£o, alguns comandos podem ser misturados para fazer uma sequ√™ncia de\nfiguras que o Beamer vai descobrindo (por exemplo o caminho de um\nalgoritmo).\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSe fosse para voc√™ escolher apenas uma dessas ferramentas para recomendar, qual seria?\u003c/strong\u003e\nSem d√∫vida o git, que √© √∫til para qualquer √°rea onde voc√™ escreve c√≥digo, ou\nat√© mesmo um artigo em .tex (ou outros formatos bin√°rios de texto).\nVoc√™ nunca sabe quando vai precisar voltar numa vers√£o anterior do c√≥digo.\nPor exemplo, voc√™ faz atualiza√ß√µes no seu c√≥digo, e algu√©m diz que estava\nusando o seu c√≥digo antes, mas depois que essa pessoa atualizou, o c√≥digo\nparou de funcionar.\nBem, como fazer pra saber o que quebrou o c√≥digo? Se voc√™ est√° fazendo o\ncontrole corretamente, voc√™ ter√° v√°rios \u003cem\u003ecommits\u003c/em\u003e indicando o trabalho\nfeito. Voc√™ pode navegar nesses commits e descubrir a √∫ltima vers√£o que\nfuncionava. Assim voc√™ reduz consideravelmente a quantidade de c√≥digo que\npode ter estragado o seu pacote.\nAl√©m disso, voc√™ pode trabalhar com vers√µes paralelas, colaborativamente, e\nainda aproveitar de servi√ßos fant√°sticos para quem usa git (GitHub, Travis,\nCoveralls).\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e√â importante ficar claro que eu n√£o estou apresentado as melhores ferramentas\npara seus respectivos objetivos, apenas aquelas que eu conhe√ßo e que podem\nresolver o problema. Talvez alguma ferramenta seja melhor do que a que eu\napresentei, mas o ponto √© voc√™ conhecer alguma ferramenta, e √†s vezes conhecer\nalguma nova.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2015-02-25-apresentacao-no-vii-simposio-de-analise-numerica-e-otimizacao-ufpr/","title":"Apresenta√ß√£o no VII Simp√≥sio de An√°lise Num√©rica e Otimiza√ß√£o - UFPR"},{"content":"\u003cp\u003eAbout an year ago,\n\u003ca href=\"http://rgaiacs.com/\"\u003eRaniere\u003c/a\u003e\nstarted working on a interface for\n\u003ca href=\"http://ccpforge.cse.rl.ac.uk/gf/project/cutest/wiki/\"\u003eCUTEst\u003c/a\u003e.\nHe decided to create \u003ca href=\"https://github.com/lpoo/ugly\"\u003eugly\u003c/a\u003e,\na repository for CUTEst, but following the Unix procedure for\nbuilding packages (\u003ccode\u003e./configure, make, make install\u003c/code\u003e).\nAlso with ugly, he wanted to enable building a shared library\nto be used with Julia.\nThis approach worked, but maintaining it is troublesome,\nsince it would require updating and testing of ugly for every\nupdate of CUTEst.\u003c/p\u003e\n\u003cp\u003eWhat I decided to do was find a way to create a shared library\nfrom a working CUTEst installation.\nThis focuses on another principle: passing the blame, er,\nI mean, modularity.\nMy package would simply take a working CUTEst and make a\nworking shared library from it.\nIt also served of downloading and installing a new CUTEst\ninstallation, since this would be required for testing.\nThe work can be found at\n\u003ca href=\"http://github.com/abelsiqueira/cutest-julia-installer\"\u003ecutest-julia-installer\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThe second thing Raniere worked was the interface itself,\nwhich is a module/package for Julia that enables\nbuilding a problem from its name,\nretrieving its parameters,\nand using its mathematical functions\n(objective function, gradient, Hessian, constraints,\nJacobian, and so on).\nI continued this work, changing the way the problem is built\n(to use my shared library),\nand translating the core functions to Julia.\nWith these additions, the usual functions on CUTEst can be\ncalled with little change in Julia.\u003c/p\u003e\n\u003cp\u003eThe next step is to facilitate the use of CUTEst functions\nby creating higher-level interfaces.\nSo, instead of manually verifying if problem is\nconstrained or not, and then calling\n\u003ccode\u003ecfn(st, n, m, x, f, c)\u003c/code\u003e or \u003ccode\u003eufn(st, n, x, f)\u003c/code\u003e,\nto get the objective function value,\none might simply call\n\u003ccode\u003ef = obj_fun(prob, x)\u003c/code\u003e.\nThis should probably be slower,\nif the user, for instance, ends up calling two functions\ninstead of one, but if it increases development time,\nthen it has server its purpose.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2015-02-06-cutestjl/","title":"CUTEst.jl"},{"content":"\u003cp\u003eToday I begin a study in \u003ca href=\"http://julialang.org/\"\u003eJulia\u003c/a\u003e.\nThis fantastic tool has syntax similar to that of Octave/Matlab,\nbut is much faster. Furthermore, the interface with functions\nmade in C and Fortran is much easier to accomplish, and since\nmost things in computational mathematics are on these languages,\nthis feature is wonderful.\u003c/p\u003e\n\u003cp\u003eMy intented work is\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003emake a simple julia and C interface, with auto-compiling and test on GitHub and Travis CI;\u003c/li\u003e\n\u003cli\u003edevelop a nonlinear optimization tool completely in Julia, then improve the slow bits by using C and/or Fortran;\u003c/li\u003e\n\u003cli\u003eimplement/improve the CUTEst interface \u003ca href=\"https://github.com/abelsiqueira/ugly\"\u003e[1]\u003c/a\u003e, \u003ca href=\"https://github.com/abelsiqueira/CUTEst.jl\"\u003e[2]\u003c/a\u003e, possibly creating a SIF converter.\u003c/li\u003e\n\u003cli\u003eif things work out, submit to \u003ca href=\"http://www.juliaopt.org/\"\u003eJuliaOpt\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eMy work starts with the \u003ca href=\"https://github.com/abelsiqueira/julia-c-sample.git\"\u003eJulia-C\nSamples\u003c/a\u003e.\nIf you need me, I might be on \u003ccode\u003e#julia\u003c/code\u003e on IRC/freenode.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2015-01-22-a-study-in-julia/","title":"A Study in Julia"},{"content":"\u003cp\u003eFor some time now I\u0026rsquo;ve been using CUTEst or CUTEr,\nand one of the common problems is selecting the problem you\nwant to use.\u003c/p\u003e\n\u003cp\u003eUnfortunately, the classification on the site is not updated,\nand may contain errors, so I decided to create something,\nwith low requirements and high reliability, to select problems\naccording to a criteria.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/abelsiqueira/cute-problem-chooser\"\u003eThis work\u003c/a\u003e\nwas created before, but used the site\u0026rsquo;s classification as one\nof the sources of information for the selection.\nNow, I started from scratch, using Python, printing in JSON,\nand running only \u003ccode\u003esifdecode\u003c/code\u003e, and only when needed.\u003c/p\u003e\n\u003cp\u003eWe mantain a JSON file with all information that can be obtained\nrunning \u003ccode\u003esifdecode\u003c/code\u003e (please correct me if I\u0026rsquo;m wrong).\nThis file only need to be updated when the SIF problems are updated.\u003c/p\u003e\n\u003cp\u003eCurrently, I returned to this problem because a colleague needed\nunconstrained problems such that the objective function is a sum of\nsquares, and all variables are free.\nAccording to the classification, the two first letters needed to be\nSU, and problems \u003ccode\u003eBARD\u003c/code\u003e and \u003ccode\u003eARGLALE\u003c/code\u003e satisfied this condition.\nHowever, problem \u003ccode\u003eARGLALE\u003c/code\u003e is classified as SU, but it is not.\nIt is actually a problem with objective function 0 (or no objective\nfunction), and with equality contraints only.\nBoth these forms are different formulations for the Nonlinear Least Squares\nproblem, but the CUTEst approach to it is very different, because\nwhen they are a sum of squared function norms, we cannot obtain individual\nfunction values and gradient, whereas in the other formulation,\nthere is already a function to access the individual constraints and gradients.\u003c/p\u003e\n\u003cp\u003eHence, we needed to select all problems with no defined objective function,\nwith equality constraints, and only free variables.\nThe current implemented version of\n\u003ca href=\"https://github.com/abelsiqueira/cute-problem-chooser\"\u003emy scripts\u003c/a\u003e\nreflect this need.\nSo, if you need a different criteria met, you will need to hardcode it\nusing python. This is expected to change soon, if time permits,\nto respond to command line arguments and/or user defined configurations\nfiles.\u003c/p\u003e\n\u003cp\u003eIf you are interested in working in this problems,\nyou can directly access the link above, work and make a pull request,\nor e-mail me so we can work out the details of that I expected to make.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2015-01-16-selecting-a-subgroup-of-cutest-problems-according-to-specific-criteria/","title":"Selecting a Subgroup of CUTEst Problems According to Specific Criteria"},{"content":"\u003cp\u003eHoje instalei em dual-boot o Ubuntu 14.10 e o windows 8.\nN√£o tive problemas com o UEFI, nem secure boot.\nN√£o tenho certeza, mas talvez o windows n√£o seja o que veio\nde f√°brica.\u003c/p\u003e\n\u003cp\u003eEu j√° tinha um USB com o Ubuntu 14.10, ent√£o pluguei-o\ne bootei o computador.\nF12-F12-F12-F12\u0026hellip; A tela de sele√ß√£o de boot n√£o apareceu,\nmas o usb foi escolhido automaticamente.\u003c/p\u003e\n\u003cp\u003eO ubuntu bootou e selecionei instalar.\nEscolhi o particionamento manual,\nque √© minha escolha usual.\nNormalmente fa√ßo o particionamento manual,\nporque n√£o gosto quando eles criam (criavam, n√£o sei\nse continuam) apenas o \u003ccode\u003e/\u003c/code\u003e e o \u003ccode\u003eswap\u003c/code\u003e.\nO windows estava instalado em duas parti√ß√µes num SSD.\nSelecionei a correspondente, redimensionei, criei 3 parti√ß√µes l√≥gicas\n(\u003ccode\u003e/\u003c/code\u003e, \u003ccode\u003eswap\u003c/code\u003e, e \u003ccode\u003e/home\u003c/code\u003e), e mandei instalar.\nA instala√ß√£o n√£o teve problemas. A√≠ eu bootei e deu erro.\u003c/p\u003e\n\u003cp\u003eO primeiro erro que apareceu foi\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003etpm_tis: A TPM error (6) occurred attempting to read a pcr value\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eQue depois descobri que era proveniente do\n\u003ca href=\"https://wiki.archlinux.org/index.php/TPM\"\u003eTrusted Platform Module\u003c/a\u003e.\nDepois de pouca busca, descobri que bastava entrar na BIOS e habilitar o\nTPM. A saber, para entrar na BIOS no Sony Vaio, desligue o computador e\naperte o bot√£o ASSIST.\nHabilitei o TPM, mas n√£o sei o que ele faz na pr√°tica. No entanto,\naparentemente, o computador continuou funcionando normalmente.\u003c/p\u003e\n\u003cp\u003eO segundo erro que apareceu, que j√° aparecia junto com o primeiro, mas\nque s√≥ olhei depois, foi algo na linha de\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e[ 9.115544] ata9: exception Emask 0x0 SAct 0xf SErr 0x0 action 0x10 frozen\n[ 9.115550] ata9.00: failed command: READ FPDMA QUEUED\n[ 9.115556] ata9.00: cmd 60/04:00:d4:82:85/00:00:1f:00:00/40 tag 0 ncq 2048 in\n[ 9.115557] res 40/00:18:d3:82:85/00:00:1f:00:00/40 Emask 0x4 (timeout)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAp√≥s alguma busca descobri ser um erro de Native Command Queueing com SSDs.\nA solu√ß√£o\n\u003ca href=\"http://steffankarger.nl/2013/12/10/ubuntu-13-10-on-the-sony-vaio-pro-13/\"\u003e[1]\u003c/a\u003e\n\u003ca href=\"http://www.howtoeverything.net/linux/hardware/ubuntu-freeze-issue-after-ssd-upgrade\"\u003e[2]\u003c/a\u003e\n\u003ca href=\"https://wiki.archlinux.org/index.php/Solid_State_Drives#Resolving_NCQ_Errors\"\u003e[3]\u003c/a\u003e\nfoi adicionar \u003ccode\u003elibata.force=noncq\u003c/code\u003e na configura√ß√£o do grub.\nPara isso, resumindo a refer√™ncia, boot no live,\nmonte o \u003ccode\u003e/\u003c/code\u003e com bind pro \u003ccode\u003e/dev\u003c/code\u003e, \u003ccode\u003e/sys\u003c/code\u003e e \u003ccode\u003e/proc\u003c/code\u003e, e se tiver separado, o \u003ccode\u003e/boot\u003c/code\u003e\ntamb√©m. Os comandos a seguir fazem isso, supondo \u003ccode\u003e/\u003c/code\u003e instalado no \u003ccode\u003e/dev/sda5\u003c/code\u003e.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ sudo mount /dev/sda5 /mnt\n$ sudo mount --bind /dev /mnt/dev\n$ sudo mount --bind /sys /mnt/sys\n$ sudo mount --bind /proc /mnt/proc\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eDa√≠, entre nesse sistema com\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ sudo chroot /mnt\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNo sistema novo, edite o arquivo \u003ccode\u003e/etc/default/grub\u003c/code\u003e, modificando a linha\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eGRUB_CMDLINE_LINUX_DEFAULT=\u0026#34;quiet splash\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003epara\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eGRUB_CMDLINE_LINUX_DEFAULT=\u0026#34;quiet splash libata.force=noncq\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003ee atualize o grub com\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ sudo update-grub\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eSaia e desmonte as parti√ß√µes\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ exit\n$ sudo umount -R /mnt\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003ePor fim √© s√≥ reiniciar e ver se funcionou.\u003c/p\u003e\n\u003cp\u003eAgora, a parte divertida dessa instala√ß√£o, que durou quase 3 horas (!) foi em\nalgum lugar eu li, ou achei ter lido \u003ccode\u003elibdata\u003c/code\u003e no lugar de \u003ccode\u003elibata\u003c/code\u003e, e pareceu\nque essa solu√ß√£o n√£o resolveu. E isso n√£o √© o pior, eu cheguei a buscar\n\u003ccode\u003elibdata.force=noncq\u003c/code\u003e, o google me corrigiu pra \u003ccode\u003elibata.force=noncq\u003c/code\u003e, e eu\ncheguei a ler depois o \u003ccode\u003elibata\u003c/code\u003e e achei que era outra op√ß√£o.\u003c/p\u003e\n\u003cp\u003eMas tirando isso, instala√ß√µes sem problema.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2015-01-12-instalando-o-ubuntu-1410-no-sony-vaio/","title":"Instalando o Ubuntu 14.10 no Sony Vaio (Problemas com o SSD)"},{"content":"\u003cp\u003eNo meu \u003ca href=\"https://www.youtube.com/watch?v=pM7FmOXHyns\"\u003ev√≠deo do YouTube\u003c/a\u003e,\neu ensinei como se faz para instalar o CUTEst. Hoje estendo a instala√ß√£o\npara instalar o MatLab tamb√©m, mas para uma instala√ß√£o mais detalhada,\ntalvez o v√≠deo seja mais indicado.\u003c/p\u003e\n\u003cp\u003eInicialmente instale o Matlab. N√£o vou entrar em detalhes, mas atente-se a duas\ncoisas:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAlgumas vers√µes do matlab n√£o colocam o execut√°vel num lugar \u0026ldquo;vis√≠vel pelo\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eterminal\u0026#34;.\nPara resolver, usando o bash, adicione o caminho dos execut√°veis do MATLAB\nao PATH no arquivo `~/.bashrc`.\nPor exemplo, adicionando\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ePATH=/usr/local/MATLAB/R20XXc/bin:$PATH\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003eVoc√™ vai precisar do \u003ccode\u003emex\u003c/code\u003e (um link para ele √© suficiente) no /bin.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ePara resolver, pode fazer um link a partir do caminho original\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ sudo ln -s /usr/local/MATLAB/R20XXc/bin/mex /bin/\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eDepois de instalado o Matlab,\nvamos instalar o CUTEst. Voc√™ precisar√° do \u003ccode\u003esubversion\u003c/code\u003e instalado (que\ndisponibiliza o comando \u003ccode\u003esvn\u003c/code\u003e), e do compilador de fortran.\n\u003cstrong\u003eA vers√£o do compilador de fortran depende da vers√£o do Matlab.\u003c/strong\u003e\u003c/p\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth style=\"text-align: center\"\u003eVers√£o do Matlab\u003c/th\u003e\n          \u003cth style=\"text-align: center\"\u003eVers√£o do compilador\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: center\"\u003eAntes do R2011a\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003eg95\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: center\"\u003eR2011a - R2013a\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003egfortran-4.4\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: center\"\u003eR2013b ou mais novo\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003egfortran-4.7\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003eCrie ou escolha uma pasta para as biblioteca do cutest.\nA nossa ser√° \u003ccode\u003e$HOME/libraries\u003c/code\u003e.\nNessa pasta baixe os reposit√≥rios CUTEst usando o subversion.\nSiga os passos da \u003ca href=\"http://ccpforge.cse.rl.ac.uk/gf/project/cutest/wiki/\"\u003ewiki\noficial\u003c/a\u003e,\nou copie os comandos abaixo para um arquivo \u003ccode\u003ebaixacutest.sh\u003c/code\u003e.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e#!/bin/bash\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ecmd=\u0026#34;svn checkout -q --username anonymous --password \u0026#34;\u0026#34; --non-interactive --no-auth-cache\u0026#34;\nurl=\u0026#34;http://ccpforge.cse.rl.ac.uk/svn/cutest/\u0026#34;\nfor name in archdefs sifdecode cutest sif\ndo\necho \u0026#34;Downloading $name\u0026#34;\n$cmd $url/$name/trunk ./$name\ndone\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003ePara executar esse arquivo, rode os comandos\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ chmod a+x baixacutest.sh\n$ ./baixacutest.sh\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eEntre na pasta \u003ccode\u003e$HOME/libraries/archdefs\u003c/code\u003e e rode o comando\n\u003ccode\u003einstall_optsuite\u003c/code\u003e.\nResponda as perguntas para instalar o CUTEst e sua fam√≠lia.\u003c/p\u003e\n\u003cp\u003eDepois da instala√ß√£o, o CUTEst soltar√° v√°rias informa√ß√µes que\nvoc√™ deve guardar no seu \u003ccode\u003e$HOME/.bashrc\u003c/code\u003e. As minhas\ninforma√ß√µes est√£o abaixo. Voc√™ pode modificar para corresponder\n√† sua configura√ß√£o.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eLIBS=$HOME/libraries\nexport ARCHDEFS=\u0026#34;$LIBS/archdefs\u0026#34;\nexport SIFDECODE=\u0026#34;$LIBS/sifdecode\u0026#34;\nexport CUTEST=\u0026#34;$LIBS/cutest\u0026#34;\nexport MASTSIF=\u0026#34;$LIBS/sif\u0026#34;\nexport PATH=\u0026#34;$CUTEST/bin:$SIFDECODE/bin:$PATH\u0026#34;\nexport MANPATH=\u0026#34;$CUTEST/man:$SIFDECODE/man:$MANPATH\u0026#34;\nexport MYARCH=\u0026#34;pc64.lnx.gfo\u0026#34;\nexport MYMATLABARCH=\u0026#34;pc64.lnx.gfo\u0026#34;\nexport MYMATLAB=\u0026#34;/usr/local/MATLAB/RXXXX/\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003ePara fazer o Matlab funcionar com o CUTEst, voc√™ decodifica o arquivo \u003ccode\u003eSIF\u003c/code\u003e\npara o format \u003ccode\u003emex\u003c/code\u003e do matlab. Da√≠, voc√™ tem que abrir o Matlab naquela pasta,\nou inserir o path dessa pasta.\nA√≠ voc√™ usa os comandos do cutest para acessar as propriedades do problema.\nO primeiro comando que voc√™ vai usar √© o\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eprob = cutest_setup()\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003ePara acessar a fun√ß√£o objetivo, voc√™ pode usar\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ef = cutest_obj(x)\n[f,g] = cutest_obj(x) % j√° retorna o gradiente tamb√©m\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003ePara acessar o gradiente, voc√™ pode usar\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eg = cutest_grad(x)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAl√©m disso, existem outras fun√ß√µes que voc√™ pode usar.\nA lista est√° no ap√™ndice B do\nTechnical Report do CUTEst.\u003c/p\u003e\n\u003cp\u003ePara testar sua insta√ß√£o, voc√™ pode copiar o programinha a seguir,\nque tenta encontrar o minimizador de uma fun√ß√£o atrav√©s do m√©todo\nde m√°xima descida.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003efunction [x,fx,k] = steep(x, f, g)\n\nkmax = 1e4;\nalpha = 0.5;\neps = 1e-4;\n\nfx = f(x);\ngx = g(x);\n\nk = 1;\nwhile norm(gx) \u0026gt; eps\n  t = 1;\n  while f(x-t*gx) \u0026gt; fx - alpha*t*dot(gx,gx)\n    t = t*0.9;\n  end\n  x = x - t*gx;\n  fx = f(x);\n  gx = g(x);\n  k = k + 1;\n  if k \u0026gt; kmax\n    return\n  end\nend\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eCopie esse conte√∫do para um arquivo \u003ccode\u003esteep.m\u003c/code\u003e, e abra o Matlab.\nNo terminal, v√° at√© a pasta em que est√° esse arquivo e rode:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ cutest2matlab BARD\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNo matlab, v√° at√© a pasta que est√° esse arquivo e rode\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eprob = cutest_prob();\n[sol, fx, k] = steep(prob.x, @(x) cutest_obj(x), @(x) cutest_grad(x))\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eA solu√ß√£o do problema deve ser perto de \u003ccode\u003e(0.08,1.14,2.33)\u003c/code\u003e e \u003ccode\u003ef = 0.0082\u003c/code\u003e.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2015-01-08-cutest-com-matlab/","title":"CUTEst Com Matlab"},{"content":"\u003cp\u003eEste post serve principalmente para meus alunos e outros interessados em come√ßar\na usar o LaTeX. A primeira coisa a se notar √© que instalar o compilador √© bem\nchato e complicado, ent√£o sugiro usarem o\n\u003ca href=\"https://www.sharelatex.com?r=09a71589\u0026amp;rm=d\u0026amp;rs=b\"\u003eShareLaTeX\u003c/a\u003e\nque √© um editor e compilador de LaTeX online.\nO ShareLaTeX possui\n\u003ca href=\"https://pt.sharelatex.com/learn\"\u003euma boa documenta√ß√£o para quem est√° come√ßando\u003c/a\u003e\nque infelizmente n√£o est√° traduzida para portugu√™s.\nUma outra recomenda√ß√£o para quem est√° querendo ler sobre antes de come√ßar a\nutilizar √©\n\u003ca href=\"http://en.wikibooks.org/wiki/LaTeX\"\u003ehttp://en.wikibooks.org/wiki/LaTeX\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eAl√©m disso, para n√£o come√ßar do nada, copie o seguinte c√≥digo\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\\documentclass{article}\n\\usepackage[utf8]{inputenc}\n\\usepackage[T1]{fontenc}\n\\usepackage[portuguese]{babel}\n\\usepackage[top=2cm,bottom=2cm,left=1cm,right=1cm]{geometry}\n\\usepackage{amsmath, amsfonts}\n\n\\title{T√≠tulo}\n\\author{Abel Soares Siqueira}\n\\date{6 de Janeiro de 2015}\n\n\\begin{document}\n\n\\maketitle\n\nAlgo\n\n\\end{document}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eno ShareLaTeX e comece a descobrir as coisas.\u003c/p\u003e\n\u003cp\u003eE n√£o mais importante, se voc√™ tiver uma pergunta relacionada ao LaTeX tente\n\u003ca href=\"http://tex.stackexchange.com/\"\u003eStack Exchange do Tex\u003c/a\u003e.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2015-01-06-sharelatex-e-o-basico-do-cabecalho/","title":"ShareLaTeX e o b√°sico do cabe√ßalho"},{"content":"\u003cp\u003eOntem eu acabei de montar um computador novo.\nEsse computador √© um upgrade do meu, e o meu passaria para a Kally.\nNo entanto, eu n√£o gostaria de perder a minha instala√ß√£o dor Arch,\nnem de ficar com o HD antigo, ent√£o decidi tentar copiar as parti√ß√µes.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eNota: N√£o sei a aplicabilidade destes comandos para outras distribui√ß√µes.\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eNota: Voc√™ tamb√©m poderia fazer o que fiz, usando o \u003ccode\u003edd\u003c/code\u003e, mas eu preferi\nevitar.\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eInicialmente, prepare um pendrive (ou sua m√≠dia favorita)\ncom o iso do Archlinux.\nTalvez esses passos possam ser feitos direto da instala√ß√£o do HD velho,\nmas eu preferi n√£o testar.\u003c/p\u003e\n\u003cp\u003eFa√ßa o boot pelo pendrive.\nVerifique que os dois HDs foram identificados e\n\u003cstrong\u003eatente-se com a numera√ß√£o sdx do HD\u003c/strong\u003e. No meu, o principal era sda, mas quando\neu instalei o outro HD, o novo ficou como sda e o antigo mudou para sdb.\nPrimeiro particione o HD novo. Eu separei as mesmas parti√ß√µes que o HD antigo,\nmas a numera√ß√£o n√£o foi a mesma, nem o tamanho.\nEu costumo usar 3 parti√ß√µes \u003ccode\u003e/\u003c/code\u003e, \u003ccode\u003e/boot\u003c/code\u003e e \u003ccode\u003e/home\u003c/code\u003e.\nEnt√£o, depois de particionar o HD novo com a quantidade de parti√ß√µes necess√°rias\npara essas parti√ß√µes, com espa√ßo suficiente para os dados que haviam nas\nparti√ß√µes antigas, eu formatei cada parti√ß√£o com o tipo de dado necess√°rio\n(usando o \u003ccode\u003emkfs.ext4\u003c/code\u003e).\nAl√©m disso, eu tamb√©m tinha um swap e queria uma parti√ß√£o compartilhada entre\nWindows e Linux, ent√£o tamb√©m \u0026ldquo;formatei\u0026rdquo; o swap (\u003ccode\u003emkswap\u003c/code\u003e) e essa parti√ß√£o\n(\u003ccode\u003emkfs.ntfs\u003c/code\u003e).\nDepois disso, eu montei o \u003ccode\u003e/\u003c/code\u003e de cada parti√ß√£o e copiei os dados de uma parti√ß√£o\npara outra, com o comando\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ecp -a /mnt/velho/. /mnt/novo/\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eDepois montei o \u003ccode\u003e/home\u003c/code\u003e e \u003ccode\u003e/boot\u003c/code\u003e e copiei o counte√∫do de cada um.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ecp -a /mnt/velho/home/. /mnt/novo/home/\ncp -a /mnt/velho/boot/. /mnt/novo/boot/\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cem\u003eNota: (Imagino que seja poss√≠vel montar tudo, e depois copiar tudo apenas com o\nprimeiro comando)\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNesse momento, o HD j√° tem os dados do sistema novo. Ent√£o, eu segui,\nseletivamente, os passos do \u003ca href=\"https://wiki.archlinux.org/index.php/beginners%27_guide#Generate_an_fstab\"\u003eguia do\niniciante\u003c/a\u003e\ndo Archlinux, a partir do \u0026ldquo;Generate an fstab\u0026rdquo;. Lembre-se de ligar o swap e\nmontar a parti√ß√£o ntfs, se quiser que eles sejam preparados no boot.\nO comando √©\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# genfstab -U -p /mnt/novo \u0026gt; /mnt/novo/etc/fstab\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eDa√≠, entrei no sistema novo, com\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# arch-chroot /mnt/novo /bin/bash\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003ee pulei para \u0026ldquo;Create an initial ramdisk environment\u0026rdquo;.\nN√£o sei se era necess√°rio fazer isso,\nmas me parecia uma boa coisa a se fazer.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# mkinitcpio -p linux\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eEnfim, atualizei o \u003ccode\u003e/boot/syslinux/syslinux.cfg\u003c/code\u003e para refletir a nova posi√ß√£o do\n\u003ccode\u003e/\u003c/code\u003e, e rodei\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# syslinux-install_update -i -a -m\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eDepois, s√≥ sair, desmontar e rebootar\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# exit\n# umount -R /mnt/novo /mnt/velho\n# reboot\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eJ√° escrevi isso do computador novo.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2014-12-19-mudando-de-hd/","title":"Mudando de HD"},{"content":"\u003cp\u003eHoje tive que instalar a impressora do DMAT da UFPR no meu\n\u003ca href=\"https://www.archlinux.org/\"\u003earchlinux\u003c/a\u003e. Infelizmente o suporte t√©cnico da\nuniversidade n√£o d√° suporte para essa distribui√ß√£o (s√≥ Ubuntu).\nExiste o suporte ao Windows\n(\u003ca href=\"http://www.cce.ufpr.br/portal/suporte-a-impressao/\"\u003eaqui\u003c/a\u003e),\nque foi necess√°rio para eu obter algumas informa√ß√µes sobre a impressora.\nTive algum trabalho para achar as configura√ß√µes corretas, mas acho que consegui,\ne vou deixar explicado aqui caso algu√©m precise.\nInfelizmente n√£o refiz os passos a seguir, porque fui costurando at√© chegar ao\nponto em que a impressora funcionou. No entanto, vou explicar o que me parece\nque fez diferen√ßa.\u003c/p\u003e\n\u003cp\u003eInicialmente, instale o \u003ca href=\"https://wiki.archlinux.org/index.php/CUPS\"\u003eCUPS\u003c/a\u003e e o\n\u003ca href=\"https://wiki.archlinux.org/index.php/Samba\"\u003eSAMBA\u003c/a\u003e e suba-os com o \u003ccode\u003esystemctl\u003c/code\u003e.\n\u003cstrong\u003eTalvez seja preciso apenas as partes dos clientes do CUPS e do SAMBA\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eDepois disso, entre na \u003ca href=\"http://localhost:631\"\u003eadministra√ß√£o do CUPS\u003c/a\u003e.\nO meu estava em ingl√™s, ent√£o vou usar uma tradu√ß√£o livre.\nEntre em \u0026ldquo;adicionar impressora\u0026rdquo;. Entre com \u003ccode\u003eroot\u003c/code\u003e e a senha do root nessa\nadministra√ß√£o (ou configure o usu√°rio com o grupo correto).\nAgora selecione \u0026ldquo;Impressora Windows via SAMBA\u0026rdquo;.\u003c/p\u003e\n\u003cp\u003eA grande dificuldade de instalar a impressora foi descobrir a porcaria da\nconex√£o. Aparentemente, deve ter o formato\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003esmb://[USUARIO]:[SENHA]@[HOST]/[IMPRESSORA]\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eO \u003ccode\u003e[HOST]\u003c/code\u003e eu j√° tinha porque me foi passado anteriormente, mas a gente tamb√©m\npodia pegar no suporte ao Windows da impressora: \u003ccode\u003eimpressao01.ufpr.br\u003c/code\u003e.\nO \u003ccode\u003e[USUARIO]\u003c/code\u003e e \u003ccode\u003e[SENHA]\u003c/code\u003e s√£o os seus valores locais (por qu√™?).\nPara obter a \u003ccode\u003e[IMPRESSORA]\u003c/code\u003e tive que entrar no Windows pra pegar, seguindo os\npassos do suporte ao Windows. \u003cstrong\u003eMAS\u003c/strong\u003e, parece que podemos obter a lista usando o\ncomando\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003esmbclient -L impressao01.ufpr.br\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003ee colocando nossa senha. Vai ser uma lista, ent√£o voc√™ pode usar \u003ccode\u003eless\u003c/code\u003e pra ler.\nObtive o nome da impressora que eu queria usar e coloquei no lugar:\n\u003ccode\u003eDEPTO.MATEMATICA_SALA.PROFESSORES_EXATAS_POLITECNICO\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eDeposi disso, voc√™ precisa passar o ppd. Uma busca na web por \u003ccode\u003elinux MARCA MODELO\u003c/code\u003e retornar√° um link da \u003ca href=\"http://www.openprinting.org\"\u003eOpen Printing\u003c/a\u003e.\nEu utilizei o modelo C790, mesmo a impressora sendo modelo C792, porque, como\ndisse, fui costurando um monte de coisas. Baixe o ppd (\u003ccode\u003edirectly download PPD\u003c/code\u003e),\ne passe-o para o CUPS. Depois disso a impressora deve estar instalado, pe√ßa a\nimpres√£o de uma p√°gina teste e verifique.\u003c/p\u003e\n\u003cp\u003eInfelizmente as informa√ß√µes s√£o meio dispersas e n√£o cobrem todos os problemas,\nprincipalmente porque eu n√£o sei diferenciar o que √© problema e o que deveria de\nfato acontecer.\u003c/p\u003e\n\u003cp\u003eNote que eu n√£o usei o IP da impressora, que \u003cstrong\u003edeve\u003c/strong\u003e ser uma possibilidade.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2014-12-16-instalacao-da-impressora-no-dmat-ufpr/","title":"Instala√ß√£o da Impressora no DMAT-UFPR"},{"content":"\u003cp\u003eH√° algum tempo eu, esporadicamente, eu escuto o podcast do \u003ca href=\"http://jovemnerd.com.br/categoria/nerdcast/\"\u003eJovem\nNerd\u003c/a\u003e.\nMas acessar o site √© chato, ent√£o eu fui procurar um gerenciador de podcasts.\nN√£o gostei de nenhum (o \u003ca href=\"http://gpodder.org/\"\u003egpodder\u003c/a\u003e quase foi escolhido).\nDa√≠, resolvi cria um no estilo que eu gosto.\nFalta MUITO pra ficar bom mas pode ser de alguma utilidade para algu√©m.\nO c√≥digo est√° no \u003ca href=\"https://github.com/abelsiqueira/siclipod\"\u003eGitHub\u003c/a\u003e.\nO b√°sico pra funcionar √©\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003esiclipod add URL\nsiclipod list\nsiclipod list NAME\nsiclipod search NAME STUFF\nsiclipod download NAME STUFF\nsiclipod play NAME STUFF\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eO normal √© tocar com o \u003ccode\u003esmplayer\u003c/code\u003e,\nmas voc√™ pode editar \u003ccode\u003e$HOME/.siclipod/.config\u003c/code\u003e para colocar o que quiser.\nNem o README eu completei ainda.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2014-12-11-siclipod-um-gerenciador-de-podcasts-simples-em-linha-de-comando/","title":"SiCLIPoD - Um Gerenciador de Podcasts Simples em Linha de Comando"},{"content":"\u003cp\u003eTL;DR:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e11/2014-present - Professor at UFPR;\u003c/li\u003e\n\u003cli\u003e12/2013-11/2014 - Postdoctorate at UNICAMP, improving the work of my doctorate;\u003c/li\u003e\n\u003cli\u003e01/2009-11/2013 - Doctorate at UNICAMP on the field of Applied Mathematics, working\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ewith Nonlinear Optimization. My thesis was \u0026#34;Dynamic Control of Infeasibility\nfor Nonlinear Programming\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e03/2005-12/2008 - Bachelor of Applied Mathematics;\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eLong version:\u003c/p\u003e\n\u003cp\u003eI began working on mathematics on 2005, entering the course 51 of\n\u003ca href=\"http://www.unicamp.br\"\u003eUNICAMP\u003c/a\u003e, where you study for one and half year the\ncommon classes to Mathematics, Applied Mathematics, Physics, and some other\ncourses. Initially I planned to follow Pure Mathematics, but after my first\nprogramming class, I considerer changing to some area of Computations. The\nfollowing semester I studied Numerical Calculus, which led me to the path of\nApplied Mathematics. This felling was reforced by Numerical Analysis and\nNonlinear Programming, and I soon decided to follow the academic path.\u003c/p\u003e\n\u003cp\u003eIn 2007, I started a Scientific Initiation with my advisor and good friend\n\u003ca href=\"http://www.ime.unicamp.br/~chico\"\u003eFrancisco de Assis Magalh√£es Gomes Neto\u003c/a\u003e,\nentitled \u0026ldquo;Interior Point Methods for Quadratic Programming\u0026rdquo;.\nMy reason for choosing Chico, as he is commonly known, was that he was from the\nNonlinear Optimization area and had previously worked with C++, which I intended\nto learn. The work was completed by 2008.\u003c/p\u003e\n\u003cp\u003eIn 2008, having interest in the academic path, I decided to \u0026ldquo;rush\u0026rdquo; some\nteaching of the post-graduate level. I rushed two in the first semester, and\none in the second. The teaching rushed were \u0026ldquo;Matrices\u0026rdquo;, which is a discipline\nabout theoretical properties of matrices, norms, eigenvalues, linear systems,\nand decompositions, with some algorithmic considerations, but no programming.\nThe other was \u0026ldquo;Numerical Methods for Linear Algebra\u0026rdquo;, which is basically the\nprogramming part of \u0026ldquo;Matrices\u0026rdquo;. This was my first contact with FORTRAN, which\nwas awful. The last discipline was \u0026ldquo;Topics of Numerical Analysis\u0026rdquo;, which in this\ncase was about finite differences. I finished my graduation on december of this\nyear.\u003c/p\u003e\n\u003cp\u003eIn 2009, I started my Doctorate on Applied Mathematics, also on UNICAMP, in the\nwork \u0026ldquo;Dynamic Control of Infeasibility for Nonlinear Programming\u0026rdquo;. During the\ndoctorate, I studied Linear Programming, Nonlinear Optimization and\nDerivative-Free Optimization. On December, 2013, I finished my doctorate.\u003c/p\u003e\n\u003cp\u003eOn December, 2013, I started my post-doctorate, following the work of my\ndoctorate. On March, 2014, I participated on the selection process to work on\nUFPR, and was approved at third position. I was called to work on November,\n2014;\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2014-11-22-academic-path/","title":"Academic Path"},{"content":"\u003cp\u003eVers√£o curta:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e11/2014-presente - Professor na UFPR;\u003c/li\u003e\n\u003cli\u003e12/2013-11/2014 - P√≥s-doutorado na UNICAMP, melhorando o trabalho do meu\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003edoutorado;\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e01/2009-11/2013 - Doutorado na UNICAMP na √°rea de Matem√°tica Aplicada,\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003etrabalhando com Otimiza√ß√£o N√£o-Linear. Minha tese foi \u0026#34;Controle Din√¢mico da\nInfactibilidade para Programa√ß√£o N√£o-Linear\u0026#34;;\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e03/2005-12/2008 - Bacharel em Matem√°tica Aplicada.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eVers√£o Longa:\u003c/p\u003e\n\u003cp\u003eEu comecei a trabalhar com matem√°tica em 2005, entrando no curso 51 da\n\u003ca href=\"http://www.unicamp.br\"\u003eUNICAMP\u003c/a\u003e, onde se estuda por um ano e meio as classes\ncomuns aos cursos de Matem√°tica, Matem√°tica Aplicada, F√≠sica, e outros cursos.\nInicialmente eu planejava seguir matem√°tica pura, mas depois da primeira\ndisciplina de programa√ß√£o, eu considerava mudar para alguma √°rea da computa√ß√£o.\nNo semestre seguinte eu estudei C√°lculo Num√©rico, que me levou a escolher\nmatem√°tica aplicada. Esse sentimento foi refor√ßado por An√°lise Num√©rica e\nProgra√ß√£o N√£o-Linear, e logo eu decidi seguir a carreira acad√™mica.\u003c/p\u003e\n\u003cp\u003eEm 2007 eu comecei uma Inicia√ß√£o Cient√≠fica com meu orientador e bom amigo\n\u003ca href=\"http://www.ime.unicamp.br/~chico\"\u003eFrancisco de Assis Magalh√£es Gomes Neto\u003c/a\u003e,\ncom o t√≠tulo \u0026ldquo;M√©todos de Pontos Interiores para Programa√ß√£o Quadr√°tica\u0026rdquo;.\nMeu motivo para escolher o Chico, como ele √© conhecido, foi que ele era da\n√°rea de Otimiza√ß√£o N√£o-Linear e tinha conhecimento pr√©vio com C++, que eu tinha\ninteresse em aprender. O trabalho foi completado em 2008.\u003c/p\u003e\n\u003cp\u003eEm 2008, tendo interesse na carreira acad√™mica, decidi adiantar algumas\ndisciplinas do n√≠vel de p√≥s-gradua√ß√£o. Eu adiantei duas disciplinas no primeiro\nsemestre, e uma no segundo. As disciplinas adiantas foram \u0026ldquo;Matrizes\u0026rdquo;, que √© uma\ndisciplina sobre as propriedades te√≥ricas de matrizees, normas, autovalores,\nsistemas lineares e decomposi√ß√µes, com algumas considera√ß√µes algor√≠tmicas, mas\nsem programa√ß√£o.\nA outra era \u0026ldquo;M√©todos Computacionais da √Ålgebra Linear\u0026rdquo;, que √© basicamente a\nparte de programa√ß√£o de \u0026ldquo;Matrizes\u0026rdquo;. Esse foi meu primeiro contato com FORTRAN,\nque foi horr√≠vel. A √∫ltima disciplina foi \u0026ldquo;T√≥picos em An√°lise Num√©rica\u0026rdquo; que,\nnesse caso, foi sobre diferen√ßas finitas. Eu acabei minha gradua√ß√£o em dezembro\ndesse ano.\u003c/p\u003e\n\u003cp\u003eEm 2009, comecei meu Doutorado em Matem√°tica Aplicada, tamb√©m na UNICAMP, no\ntrabalho \u0026ldquo;Controle Din√¢mico da Infactibilidade para Programa√ß√£o N√£o-Linear\u0026rdquo;.\nDurante o doutorado, estudei Program√ß√£o Linear, Otimiza√ß√£o N√£o-Linear e\nOtimiza√ß√†o Sem Derivadas. Em Dezembro de 2013 eu acabei meu doutorado.\u003c/p\u003e\n\u003cp\u003eEm Dezembro de 2013, comecei meu p√≥s-doutorado, seguindo o trabalho do\ndoutorado. Em Mar√ßo de 2014, participei do concurso para UFPR, e fui aprovado em\nterceiro. Fui chamado para trabalhar em Novembro de 2014.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2014-11-22-caminho-academico/","title":"Caminho Acad√™mico"},{"content":"\u003cp\u003eOne of my main interest is the end of Fortran \u003cstrong\u003eas the only programming language\nused by mathematicias\u003c/strong\u003e. If you\u0026rsquo;re not in the area of mathematical programming,\nyou probably find it strange for me to be talking about Fortran, so I explain.\nFortran is considered the fastest programming language in mathematics, and most\nthings made are in this language. Other often used languages such as\nMatLab/Octave and Mathematica are high-level, which means they are slower and\nare not considered for serious applications.\u003c/p\u003e\n\u003cp\u003eIn reality, Fortran is one of the fastest programming language \u003cstrong\u003efor linear\nalgebra with dense matrices\u003c/strong\u003e. Since most things in this area are matrices, and\nmost vectors are dense, this can\u0026rsquo;t be overlooked. In addition, fortran has a\nrelatively easy way to go, bypassing the painstankingly formatting and GOTO,\nwhich were left behind by the newer versions.\u003c/p\u003e\n\u003cp\u003eThe problem is that, since learning Fortran is almost imperative in the area,\nthere is little else used to code in the area. Hence, easy tasks without need of\nfast execution become hard programming jobs. And furthermore, tasks that need\nfast execution, but can\u0026rsquo;t (shouldn\u0026rsquo;t) be implement as matrices, become slow in\nFortran, and sometimes this is overlooked.\u003c/p\u003e\n\u003cp\u003eMy proposition is \u003cstrong\u003euse the best tool for the job\u003c/strong\u003e, which is just common sense,\nbut applied to our area. Try \u003ca href=\"http://www.python.org\"\u003ePython\u003c/a\u003e. Try\n\u003ca href=\"http://www.ruby-lang.org\"\u003eRuby\u003c/a\u003e. Try \u003ca href=\"http://www.julialang.org\"\u003eJulia\u003c/a\u003e. Try\nto implementing a graph using a list of pointers. Try to implement a argument\nparser. Try to implement reading, storing, and calculating the transpose of a\nsparse matrix. Try to implement a tool to read all citations on your .tex, read\nfrom a bibtex file such references and print then all in a nice format.\u003c/p\u003e\n\u003cp\u003eNow, rather than stay in that language, go for another. Try other languages.\nWhen the job comes, you can choose the best tool for it. And you can combine.\nSome languages, such as Julia, Fortran and C, are very easy to combine with\nothers. Implement your algorithm in Julia, then improve it later with Fortran.\nAnd if you are really in need of speed, why not implement the hardest part in\nmachine language (ASSEMBLY)?\nImplementing the fastest possible algorithm is very good for a specific\napplication, but in our line of work, we must take into account the method, not\nonly the implementation.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2014-11-22-the-end-of-fortran/","title":"The End of Fortran"},{"content":"\u003cp\u003eOne of the things I worked with was a Performance Profile tool, in the sense\nof Dolan and Mor√©. This tool,\n\u003ca href=\"http://ufpr-opt.github.io/perprof-py\"\u003eperprof-py\u003c/a\u003e, written in Python,\nreads input in the form of a table of problem with time and exitflag, and\noutputs a image/pdf with the performance profile.\nThis tool is very important for the nonlinear optimization community, since it\nis one of the main comparison tools for the algorithms.\u003c/p\u003e\n\u003cp\u003eThe package is open source, available for changes, improvements and suggestions.\nMany options have been implemented to costumize the graphic, or to improve the\ninput of data. The source is available at\n\u003ca href=\"http://github.com/ufpr-opt/perprof-py\"\u003egithub\u003c/a\u003e.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2014-11-16-perprof-py-a-performance-profile-package-for-python/","title":"perprof-py: A Performance Profile Package for Python"},{"content":"\u003cp\u003eAfter working with references and citations in latex for a while, with\nmultiple files, I noticed that some things need improvement.  First of all, you\nneed to use some way to store your bibliography \u003cstrong\u003eoutside\u003c/strong\u003e of the\ntex file. For instance, using bibtex.  Second, you probably want some\nbibliography package, such as biblatex or natbib.  Third, you need some way to\nmanage your bibliography entries and verify if they are correct.\u003c/p\u003e\n\u003cp\u003eFor the third option, I didn\u0026rsquo;t found a good enough option, \u003cstrong\u003efor my\nneeds\u003c/strong\u003e (light, easy, command line). Thinking about this problem, I\ndecided to create a tool exactly for that. Some things I want(ed) are to read\nfrom tex file to discover the keys; add the entries reading a bib file; and\nobtaining from the internet the correct bibliography entry.\u003c/p\u003e\n\u003cp\u003eThe tool is still in very early development, but is already available for\nchecking on \u003ca href=\"https://github.com/abelsiqueira/bibcli\"\u003egithub\u003c/a\u003e.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2014-06-04-bibcli/","title":"BibCLI - Command Line Interface to Manage Bibliography"},{"content":"\u003cp\u003eEu (n√£o t√£o) recementemente me interessei em jogos de tabuleiro. Para\nclarificar, n√£o estou me referindo aos jogos de tabuleiro \u0026ldquo;cl√°ssicos\u0026rdquo;, como War,\nBanco Imobili√°rio, etc.. Estou me referindo aos jogos de tabuleiro com mec√¢nica\navan√ßada. Isso n√£o significa que todos eles s√£o complexos, mas que eles s√£o (em\nsua maioria) bem pensados e balanceados.\nEsse jogos de tabuleiro juntaram uma legi√£o de seguidores, a maioria geeks e\nnerds, que est√° interessada em algum hobby legal. Note que RPG e jogos digitais\nnormalmente s√£o parte desses hobbies.\nMais informa√ß√µes podem ser obtidas no √≥timo site \u003ca href=\"http://www.boardgamegeek.com\"\u003eboard game\ngeek\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eUma das melhoras coisas de jogos de tabuleiros √© a grande variedade de\ncomplexidade e seriedade que eles cobrem. Voc√™ pode jogar um jogo de 10-15\nminutos com regras extremamente simples (como Fluxx), ou um jogo intenso, sem\nsorte envolvida, de v√°rias horas (como Diplomacia). Um dos meus jogos favoritos\ndo momento √© Battlestar Galactica, um jogo baseado na s√©rie hom√¥nima.\u003c/p\u003e\n","description":null,"image":null,"permalink":"/blog/2014-06-04-jogos-de-tabuleiro/","title":"Jogos de Tabuleiro"}]